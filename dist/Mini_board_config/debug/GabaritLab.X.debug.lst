

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 05 11:02:33 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47  0000                     
    48                           ; Version 2.10
    49                           ; Generated 31/07/2019 GMT
    50                           ; 
    51                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F45K20 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataCOMRAM
    84  006DE2                     __pidataCOMRAM:
    85                           	opt callstack 0
    86                           
    87                           ;initializer for _randx
    88  006DE2  0001               	dw	1
    89  006DE4  0000               	dw	0
    90                           
    91                           	psect	idataBANK0
    92  006F76                     __pidataBANK0:
    93                           	opt callstack 0
    94                           
    95                           ;initializer for _matCGRAM
    96  006F76  08                 	db	8
    97  006F77  04                 	db	4
    98  006F78  04                 	db	4
    99  006F79  0A                 	db	10
   100  006F7A  11                 	db	17
   101  006F7B  1F                 	db	31
   102  006F7C  11                 	db	17
   103  006F7D  00                 	db	0
   104  006F7E  04                 	db	4
   105  006F7F  04                 	db	4
   106  006F80  1B                 	db	27
   107  006F81  04                 	db	4
   108  006F82  04                 	db	4
   109  006F83  1B                 	db	27
   110  006F84  04                 	db	4
   111  006F85  04                 	db	4
   112  006F86  00                 	db	0
   113  006F87  0E                 	db	14
   114  006F88  1F                 	db	31
   115  006F89  1F                 	db	31
   116  006F8A  1F                 	db	31
   117  006F8B  1F                 	db	31
   118  006F8C  0E                 	db	14
   119  006F8D  00                 	db	0
   120  006F8E  00                 	db	0
   121  006F8F  00                 	db	0
   122  006F90  15                 	db	21
   123  006F91  0E                 	db	14
   124  006F92  1B                 	db	27
   125  006F93  0E                 	db	14
   126  006F94  15                 	db	21
   127  006F95  00                 	db	0
   128  006F96  08                 	db	8
   129  006F97  04                 	db	4
   130  006F98  1F                 	db	31
   131  006F99  10                 	db	16
   132  006F9A  1E                 	db	30
   133  006F9B  10                 	db	16
   134  006F9C  1F                 	db	31
   135  006F9D  00                 	db	0
   136  006F9E  04                 	db	4
   137  006F9F  0A                 	db	10
   138  006FA0  0E                 	db	14
   139  006FA1  11                 	db	17
   140  006FA2  1F                 	db	31
   141  006FA3  10                 	db	16
   142  006FA4  0E                 	db	14
   143  006FA5  00                 	db	0
   144  006FA6  08                 	db	8
   145  006FA7  04                 	db	4
   146  006FA8  0E                 	db	14
   147  006FA9  01                 	db	1
   148  006FAA  0F                 	db	15
   149  006FAB  11                 	db	17
   150  006FAC  0F                 	db	15
   151  006FAD  00                 	db	0
   152  006FAE  04                 	db	4
   153  006FAF  0A                 	db	10
   154  006FB0  0E                 	db	14
   155  006FB1  01                 	db	1
   156  006FB2  0F                 	db	15
   157  006FB3  11                 	db	17
   158  006FB4  0F                 	db	15
   159  006FB5  00                 	db	0
   160  0000                     _PORTAbits	set	3968
   161  0000                     _PORTD	set	3971
   162  0000                     _ANSELbits	set	3966
   163  0000                     _TRISA	set	3986
   164  0000                     _ANSEL	set	3966
   165  0000                     _TRISB	set	3987
   166  0000                     _ANSELH	set	3967
   167  0000                     _TRISD	set	3989
   168  0000                     _PORTBbits	set	3969
   169  0000                     _TMR1	set	4046
   170  0000                     _ADCON2bits	set	4032
   171  0000                     _ADCON1	set	4033
   172  0000                     _T1CONbits	set	4045
   173  0000                     _ADRESH	set	4036
   174  0000                     _ADCON0bits	set	4034
   175                           
   176                           ; #config settings
   177  0000                     
   178                           	psect	cinit
   179  0071CC                     __pcinit:
   180                           	opt callstack 0
   181  0071CC                     start_initialization:
   182                           	opt callstack 0
   183  0071CC                     __initialization:
   184                           	opt callstack 0
   185                           
   186                           ; Initialize objects allocated to BANK0 (64 bytes)
   187                           ; load TBLPTR registers with __pidataBANK0
   188  0071CC  0E76               	movlw	low __pidataBANK0
   189  0071CE  6EF6               	movwf	tblptrl,c
   190  0071D0  0E6F               	movlw	high __pidataBANK0
   191  0071D2  6EF7               	movwf	tblptrh,c
   192  0071D4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   193  0071D6  6EF8               	movwf	tblptru,c
   194  0071D8  EE00  F0B4         	lfsr	0,__pdataBANK0
   195  0071DC  EE10 F040          	lfsr	1,64
   196  0071E0                     copy_data0:
   197  0071E0  0009               	tblrd		*+
   198  0071E2  CFF5 FFEE          	movff	tablat,postinc0
   199  0071E6  50E5               	movf	postdec1,w,c
   200  0071E8  50E1               	movf	fsr1l,w,c
   201  0071EA  E1FA               	bnz	copy_data0
   202                           
   203                           ; Initialize objects allocated to COMRAM (4 bytes)
   204                           ; load TBLPTR registers with __pidataCOMRAM
   205  0071EC  0EE2               	movlw	low __pidataCOMRAM
   206  0071EE  6EF6               	movwf	tblptrl,c
   207  0071F0  0E6D               	movlw	high __pidataCOMRAM
   208  0071F2  6EF7               	movwf	tblptrh,c
   209  0071F4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   210  0071F6  6EF8               	movwf	tblptru,c
   211  0071F8  EE00  F027         	lfsr	0,__pdataCOMRAM
   212  0071FC  EE10 F004          	lfsr	1,4
   213  007200                     copy_data1:
   214  007200  0009               	tblrd		*+
   215  007202  CFF5 FFEE          	movff	tablat,postinc0
   216  007206  50E5               	movf	postdec1,w,c
   217  007208  50E1               	movf	fsr1l,w,c
   218  00720A  E1FA               	bnz	copy_data1
   219                           
   220                           ; Clear objects allocated to BANK1 (84 bytes)
   221  00720C  EE01  F000         	lfsr	0,__pbssBANK1
   222  007210  0E54               	movlw	84
   223  007212                     clear_0:
   224  007212  6AEE               	clrf	postinc0,c
   225  007214  06E8               	decf	wreg,f,c
   226  007216  E1FD               	bnz	clear_0
   227                           
   228                           ; Clear objects allocated to BANK0 (84 bytes)
   229  007218  EE00  F060         	lfsr	0,__pbssBANK0
   230  00721C  0E54               	movlw	84
   231  00721E                     clear_1:
   232  00721E  6AEE               	clrf	postinc0,c
   233  007220  06E8               	decf	wreg,f,c
   234  007222  E1FD               	bnz	clear_1
   235  007224                     end_of_initialization:
   236                           	opt callstack 0
   237  007224                     __end_of__initialization:
   238                           	opt callstack 0
   239  007224  0E00               	movlw	low (__Lmediumconst shr (0+16))
   240  007226  6EF8               	movwf	tblptru,c
   241  007228  0100               	movlb	0
   242  00722A  EF88  F03B         	goto	_main	;jump to C main() function
   243                           
   244                           	psect	dataCOMRAM
   245  000027                     __pdataCOMRAM:
   246                           	opt callstack 0
   247  000027                     _randx:
   248                           	opt callstack 0
   249  000027                     	ds	4
   250                           
   251                           	psect	bssBANK0
   252  000060                     __pbssBANK0:
   253                           	opt callstack 0
   254  000060                     _m_tabMines:
   255                           	opt callstack 0
   256  000060                     	ds	84
   257                           
   258                           	psect	dataBANK0
   259  0000B4                     __pdataBANK0:
   260                           	opt callstack 0
   261  0000B4                     _matCGRAM:
   262                           	opt callstack 0
   263  0000B4                     	ds	64
   264                           
   265                           	psect	bssBANK1
   266  000100                     __pbssBANK1:
   267                           	opt callstack 0
   268  000100                     _m_tabVue:
   269                           	opt callstack 0
   270  000100                     	ds	84
   271                           
   272                           	psect	cstackCOMRAM
   273  000001                     __pcstackCOMRAM:
   274                           	opt callstack 0
   275  000001                     ??_getAnalog:
   276  000001                     ??_lcd_ecrireDonnees:
   277  000001                     ??_lcd_busy:
   278  000001                     ?___wmul:
   279                           	opt callstack 0
   280  000001                     ?___lmul:
   281                           	opt callstack 0
   282  000001                     enleveTuilesAutour@y:
   283                           	opt callstack 0
   284  000001                     ___wmul@multiplier:
   285                           	opt callstack 0
   286  000001                     srand@x:
   287                           	opt callstack 0
   288  000001                     ___lmul@multiplier:
   289                           	opt callstack 0
   290                           
   291                           ; 4 bytes @ 0x0
   292  000001                     	ds	1
   293  000002                     ??_enleveTuilesAutour:
   294  000002                     getAnalog@canal:
   295                           	opt callstack 0
   296  000002                     lcd_ecrireDonnees@donnee:
   297                           	opt callstack 0
   298  000002                     lcd_busy@adresse:
   299                           	opt callstack 0
   300                           
   301                           ; 1 bytes @ 0x1
   302  000002                     	ds	1
   303  000003                     ??_lcd_resetSequence:
   304  000003                     lcd_wrCom@commande:
   305                           	opt callstack 0
   306  000003                     lcd_wrData@caractere:
   307                           	opt callstack 0
   308  000003                     ___wmul@multiplicand:
   309                           	opt callstack 0
   310                           
   311                           ; 2 bytes @ 0x2
   312  000003                     	ds	1
   313  000004                     ??_lcd_initCGRam:
   314  000004                     lcd_gotoXY@y:
   315                           	opt callstack 0
   316  000004                     lcd_ecritChar@car:
   317                           	opt callstack 0
   318                           
   319                           ; 1 bytes @ 0x3
   320  000004                     	ds	1
   321  000005                     lcd_gotoXY@x:
   322                           	opt callstack 0
   323  000005                     lcd_ecritChar@posRam:
   324                           	opt callstack 0
   325  000005                     ___wmul@product:
   326                           	opt callstack 0
   327  000005                     ___lmul@multiplicand:
   328                           	opt callstack 0
   329                           
   330                           ; 4 bytes @ 0x4
   331  000005                     	ds	1
   332  000006                     enleveTuilesAutour@x:
   333                           	opt callstack 0
   334  000006                     lcd_initCGRam@i:
   335                           	opt callstack 0
   336  000006                     deplace@px:
   337                           	opt callstack 0
   338                           
   339                           ; 2 bytes @ 0x5
   340  000006                     	ds	1
   341  000007                     ??_initTabVue:
   342  000007                     enleveTuilesAutour@colonne:
   343                           	opt callstack 0
   344  000007                     lcd_initCGRam@j:
   345                           	opt callstack 0
   346  000007                     calculToucheCombien@ligne:
   347                           	opt callstack 0
   348  000007                     gagne@pMines:
   349                           	opt callstack 0
   350  000007                     lcd_putMessage@chaine:
   351                           	opt callstack 0
   352                           
   353                           ; 2 bytes @ 0x6
   354  000007                     	ds	1
   355  000008                     enleveTuilesAutour@ligne:
   356                           	opt callstack 0
   357  000008                     deplace@py:
   358                           	opt callstack 0
   359                           
   360                           ; 2 bytes @ 0x7
   361  000008                     	ds	1
   362  000009                     ??_gagne:
   363  000009                     lcd_putMessage@j:
   364                           	opt callstack 0
   365  000009                     initTabVue@j:
   366                           	opt callstack 0
   367  000009                     calculToucheCombien@colonne:
   368                           	opt callstack 0
   369  000009                     enleveTuilesAutour@i:
   370                           	opt callstack 0
   371  000009                     ___lmul@product:
   372                           	opt callstack 0
   373                           
   374                           ; 4 bytes @ 0x8
   375  000009                     	ds	1
   376  00000A                     ??_deplace:
   377  00000A                     afficheTabVue@i:
   378                           	opt callstack 0
   379  00000A                     afficheTabMine@i:
   380                           	opt callstack 0
   381                           
   382                           ; 2 bytes @ 0x9
   383  00000A                     	ds	1
   384  00000B                     ??_calculToucheCombien:
   385  00000B                     initTabVue@i:
   386                           	opt callstack 0
   387  00000B                     deplace@aX:
   388                           	opt callstack 0
   389  00000B                     enleveTuilesAutour@j:
   390                           	opt callstack 0
   391                           
   392                           ; 2 bytes @ 0xA
   393  00000B                     	ds	2
   394  00000D                     ?_rand:
   395                           	opt callstack 0
   396  00000D                     demine@y:
   397                           	opt callstack 0
   398  00000D                     gagne@ttl:
   399                           	opt callstack 0
   400  00000D                     deplace@aY:
   401                           	opt callstack 0
   402                           
   403                           ; 2 bytes @ 0xC
   404  00000D                     	ds	1
   405  00000E                     ??_demine:
   406  00000E                     calculToucheCombien@total:
   407                           	opt callstack 0
   408  00000E                     gagne@i:
   409                           	opt callstack 0
   410                           
   411                           ; 2 bytes @ 0xD
   412  00000E                     	ds	1
   413  00000F                     ?___awmod:
   414                           	opt callstack 0
   415  00000F                     calculToucheCombien@x:
   416                           	opt callstack 0
   417  00000F                     ___awmod@dividend:
   418                           	opt callstack 0
   419                           
   420                           ; 2 bytes @ 0xE
   421  00000F                     	ds	1
   422  000010                     gagne@j:
   423                           	opt callstack 0
   424                           
   425                           ; 2 bytes @ 0xF
   426  000010                     	ds	1
   427  000011                     calculToucheCombien@y:
   428                           	opt callstack 0
   429  000011                     ___awmod@divisor:
   430                           	opt callstack 0
   431                           
   432                           ; 2 bytes @ 0x10
   433  000011                     	ds	1
   434  000012                     demine@x:
   435                           	opt callstack 0
   436                           
   437                           ; 1 bytes @ 0x11
   438  000012                     	ds	1
   439  000013                     ___awmod@counter:
   440                           	opt callstack 0
   441  000013                     calculToucheCombien@i:
   442                           	opt callstack 0
   443                           
   444                           ; 2 bytes @ 0x12
   445  000013                     	ds	1
   446  000014                     ___awmod@sign:
   447                           	opt callstack 0
   448                           
   449                           ; 1 bytes @ 0x13
   450  000014                     	ds	1
   451  000015                     rempliMines@nb:
   452                           	opt callstack 0
   453  000015                     calculToucheCombien@j:
   454                           	opt callstack 0
   455                           
   456                           ; 2 bytes @ 0x14
   457  000015                     	ds	2
   458  000017                     ??_rempliMines:
   459  000017                     ??_metToucheCombien:
   460                           
   461                           ; 1 bytes @ 0x16
   462  000017                     	ds	3
   463  00001A                     rempliMines@i_417:
   464                           	opt callstack 0
   465  00001A                     metToucheCombien@i:
   466                           	opt callstack 0
   467                           
   468                           ; 2 bytes @ 0x19
   469  00001A                     	ds	2
   470  00001C                     rempliMines@col:
   471                           	opt callstack 0
   472  00001C                     metToucheCombien@j:
   473                           	opt callstack 0
   474                           
   475                           ; 2 bytes @ 0x1B
   476  00001C                     	ds	1
   477  00001D                     rempliMines@ligne:
   478                           	opt callstack 0
   479                           
   480                           ; 1 bytes @ 0x1C
   481  00001D                     	ds	1
   482  00001E                     rempliMines@i:
   483                           	opt callstack 0
   484                           
   485                           ; 2 bytes @ 0x1D
   486  00001E                     	ds	2
   487  000020                     rempliMines@j:
   488                           	opt callstack 0
   489                           
   490                           ; 2 bytes @ 0x1F
   491  000020                     	ds	2
   492  000022                     ??_main:
   493                           
   494                           ; 1 bytes @ 0x21
   495  000022                     	ds	1
   496  000023                     main@nbMines:
   497                           	opt callstack 0
   498                           
   499                           ; 2 bytes @ 0x22
   500  000023                     	ds	2
   501  000025                     main@x:
   502                           	opt callstack 0
   503                           
   504                           ; 1 bytes @ 0x24
   505  000025                     	ds	1
   506  000026                     main@y:
   507                           	opt callstack 0
   508                           
   509                           ; 1 bytes @ 0x25
   510  000026                     	ds	1
   511                           
   512 ;;
   513 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   514 ;;
   515 ;; *************** function _main *****************
   516 ;; Defined at:
   517 ;;		line 54 in file "main.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;		None
   520 ;; Auto vars:     Size  Location     Type
   521 ;;  nbMines         2   34[COMRAM] int 
   522 ;;  y               1   37[COMRAM] unsigned char 
   523 ;;  x               1   36[COMRAM] unsigned char 
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   533 ;;      Params:         0       0       0       0       0       0       0
   534 ;;      Locals:         4       0       0       0       0       0       0
   535 ;;      Temps:          1       0       0       0       0       0       0
   536 ;;      Totals:         5       0       0       0       0       0       0
   537 ;;Total ram usage:        5 bytes
   538 ;; Hardware stack levels required when called:    7
   539 ;; This function calls:
   540 ;;		_afficheTabMine
   541 ;;		_afficheTabVue
   542 ;;		_demine
   543 ;;		_deplace
   544 ;;		_gagne
   545 ;;		_initTabVue
   546 ;;		_initialisation
   547 ;;		_lcd_curseurHome
   548 ;;		_lcd_effaceAffichage
   549 ;;		_lcd_gotoXY
   550 ;;		_lcd_init
   551 ;;		_metToucheCombien
   552 ;;		_rempliMines
   553 ;; This function is called by:
   554 ;;		Startup code after reset
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           	psect	text0
   559  007710                     __ptext0:
   560                           	opt callstack 0
   561  007710                     _main:
   562                           	opt callstack 24
   563  007710                     
   564                           ;main.c: 56: char x = 1;
   565  007710  0E01               	movlw	1
   566  007712  6E25               	movwf	main@x^0,c
   567                           
   568                           ;main.c: 57: char y = 1;
   569  007714  0E01               	movlw	1
   570  007716  6E26               	movwf	main@y^0,c
   571                           
   572                           ;main.c: 58: int nbMines = 4;
   573  007718  0E00               	movlw	0
   574  00771A  6E24               	movwf	(main@nbMines+1)^0,c
   575  00771C  0E04               	movlw	4
   576  00771E  6E23               	movwf	main@nbMines^0,c
   577  007720                     
   578                           ;main.c: 60: initialisation();
   579  007720  EC68  F037         	call	_initialisation	;wreg free
   580  007724                     
   581                           ;main.c: 61: lcd_init();
   582  007724  EC3D  F037         	call	_lcd_init	;wreg free
   583  007728                     
   584                           ;main.c: 63: lcd_effaceAffichage();
   585  007728  ECFE  F036         	call	_lcd_effaceAffichage	;wreg free
   586  00772C                     
   587                           ;main.c: 64: lcd_curseurHome();
   588  00772C  ECFA  F036         	call	_lcd_curseurHome	;wreg free
   589  007730                     
   590                           ;main.c: 66: initTabVue();
   591  007730  EC01  F03A         	call	_initTabVue	;wreg free
   592  007734                     
   593                           ;main.c: 67: rempliMines(nbMines);
   594  007734  C023  F015         	movff	main@nbMines,rempliMines@nb
   595  007738  C024  F016         	movff	main@nbMines+1,rempliMines@nb+1
   596  00773C  EC85  F03C         	call	_rempliMines	;wreg free
   597  007740                     
   598                           ;main.c: 68: metToucheCombien();
   599  007740  EC19  F03B         	call	_metToucheCombien	;wreg free
   600  007744                     
   601                           ;main.c: 69: afficheTabVue();
   602  007744  EC58  F038         	call	_afficheTabVue	;wreg free
   603  007748                     l2252:
   604                           
   605                           ;main.c: 72: {;main.c: 73: deplace(&x, &y);
   606  007748  0E25               	movlw	low main@x
   607  00774A  6E06               	movwf	deplace@px^0,c
   608  00774C  0E00               	movlw	high main@x
   609  00774E  6E07               	movwf	(deplace@px+1)^0,c
   610  007750  0E26               	movlw	low main@y
   611  007752  6E08               	movwf	deplace@py^0,c
   612  007754  0E00               	movlw	high main@y
   613  007756  6E09               	movwf	(deplace@py+1)^0,c
   614  007758  ECC1  F03D         	call	_deplace	;wreg free
   615  00775C                     
   616                           ;main.c: 74: if(PORTBbits.RB1 == 0){
   617  00775C  B281               	btfsc	129,1,c	;volatile
   618  00775E  EFB3  F03B         	goto	u1141
   619  007762  EFB5  F03B         	goto	u1140
   620  007766                     u1141:
   621  007766  EFEA  F03B         	goto	l2266
   622  00776A                     u1140:
   623  00776A                     
   624                           ;main.c: 75: if(!demine(x, y) || gagne(&nbMines)){
   625  00776A  C026  F00D         	movff	main@y,demine@y
   626  00776E  5025               	movf	main@x^0,w,c
   627  007770  ECF7  F03B         	call	_demine
   628  007774  0900               	iorlw	0
   629  007776  B4D8               	btfsc	status,2,c
   630  007778  EFC0  F03B         	goto	u1151
   631  00777C  EFC2  F03B         	goto	u1150
   632  007780                     u1151:
   633  007780  EFD0  F03B         	goto	l2260
   634  007784                     u1150:
   635  007784  0E23               	movlw	low main@nbMines
   636  007786  6E07               	movwf	gagne@pMines^0,c
   637  007788  0E00               	movlw	high main@nbMines
   638  00778A  6E08               	movwf	(gagne@pMines+1)^0,c
   639  00778C  ECAE  F03A         	call	_gagne	;wreg free
   640  007790  0900               	iorlw	0
   641  007792  B4D8               	btfsc	status,2,c
   642  007794  EFCE  F03B         	goto	u1161
   643  007798  EFD0  F03B         	goto	u1160
   644  00779C                     u1161:
   645  00779C  EFEA  F03B         	goto	l2266
   646  0077A0                     u1160:
   647  0077A0                     l2260:
   648                           
   649                           ;main.c: 76: afficheTabMine();
   650  0077A0  EC2A  F038         	call	_afficheTabMine	;wreg free
   651  0077A4                     l80:
   652  0077A4  B281               	btfsc	129,1,c	;volatile
   653  0077A6  EFD7  F03B         	goto	u1171
   654  0077AA  EFD9  F03B         	goto	u1170
   655  0077AE                     u1171:
   656  0077AE  EFD2  F03B         	goto	l80
   657  0077B2                     u1170:
   658  0077B2                     
   659                           ;main.c: 78: initTabVue();
   660  0077B2  EC01  F03A         	call	_initTabVue	;wreg free
   661                           
   662                           ;main.c: 79: rempliMines(nbMines);
   663  0077B6  C023  F015         	movff	main@nbMines,rempliMines@nb
   664  0077BA  C024  F016         	movff	main@nbMines+1,rempliMines@nb+1
   665  0077BE  EC85  F03C         	call	_rempliMines	;wreg free
   666                           
   667                           ;main.c: 80: metToucheCombien();
   668  0077C2  EC19  F03B         	call	_metToucheCombien	;wreg free
   669                           
   670                           ;main.c: 81: afficheTabVue();
   671  0077C6  EC58  F038         	call	_afficheTabVue	;wreg free
   672  0077CA                     
   673                           ;main.c: 82: lcd_gotoXY(x, y);
   674  0077CA  C026  F004         	movff	main@y,lcd_gotoXY@y
   675  0077CE  5025               	movf	main@x^0,w,c
   676  0077D0  EC49  F039         	call	_lcd_gotoXY
   677  0077D4                     l2266:
   678                           
   679                           ;main.c: 83: };main.c: 84: };main.c: 85: _delay((unsigned long)((100)*(1000000/4000.0)))
      +                          ;
   680  0077D4  0E21               	movlw	33
   681  0077D6  6E22               	movwf	??_main^0,c
   682  0077D8  0E76               	movlw	118
   683  0077DA                     u1187:
   684  0077DA  2EE8               	decfsz	wreg,f,c
   685  0077DC  D7FE               	bra	u1187
   686  0077DE  2E22               	decfsz	??_main^0,f,c
   687  0077E0  D7FC               	bra	u1187
   688  0077E2  F000 F000          	nop2	
   689  0077E6  EFA4  F03B         	goto	l2252
   690  0077EA  EF00  F000         	goto	start
   691  0077EE                     __end_of_main:
   692                           	opt callstack 0
   693                           
   694 ;; *************** function _rempliMines *****************
   695 ;; Defined at:
   696 ;;		line 128 in file "main.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;  nb              2   20[COMRAM] int 
   699 ;; Auto vars:     Size  Location     Type
   700 ;;  j               2   31[COMRAM] int 
   701 ;;  i               2   25[COMRAM] int 
   702 ;;  i               2   29[COMRAM] int 
   703 ;;  ligne           1   28[COMRAM] unsigned char 
   704 ;;  col             1   27[COMRAM] unsigned char 
   705 ;; Return value:  Size  Location     Type
   706 ;;                  1    wreg      void 
   707 ;; Registers used:
   708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   714 ;;      Params:         2       0       0       0       0       0       0
   715 ;;      Locals:         8       0       0       0       0       0       0
   716 ;;      Temps:          3       0       0       0       0       0       0
   717 ;;      Totals:        13       0       0       0       0       0       0
   718 ;;Total ram usage:       13 bytes
   719 ;; Hardware stack levels used:    1
   720 ;; Hardware stack levels required when called:    2
   721 ;; This function calls:
   722 ;;		___awmod
   723 ;;		___wmul
   724 ;;		_rand
   725 ;; This function is called by:
   726 ;;		_main
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           	psect	text1
   731  00790A                     __ptext1:
   732                           	opt callstack 0
   733  00790A                     _rempliMines:
   734                           	opt callstack 28
   735  00790A                     
   736                           ;main.c: 130: char ligne = 0;
   737  00790A  0E00               	movlw	0
   738  00790C  6E1D               	movwf	rempliMines@ligne^0,c
   739                           
   740                           ;main.c: 132: for(int i = 0; i < 20; i++){
   741  00790E  0E00               	movlw	0
   742  007910  6E1F               	movwf	(rempliMines@i+1)^0,c
   743  007912  0E00               	movlw	0
   744  007914  6E1E               	movwf	rempliMines@i^0,c
   745  007916                     l2052:
   746                           
   747                           ;main.c: 133: for(int j = 0; j < 4; j++){
   748  007916  0E00               	movlw	0
   749  007918  6E21               	movwf	(rempliMines@j+1)^0,c
   750  00791A  0E00               	movlw	0
   751  00791C  6E20               	movwf	rempliMines@j^0,c
   752  00791E                     l2058:
   753                           
   754                           ;main.c: 134: m_tabMines[j][i] = 32;
   755  00791E  C020  F001         	movff	rempliMines@j,___wmul@multiplier
   756  007922  C021  F002         	movff	rempliMines@j+1,___wmul@multiplier+1
   757  007926  0E00               	movlw	0
   758  007928  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   759  00792A  0E15               	movlw	21
   760  00792C  6E03               	movwf	___wmul@multiplicand^0,c
   761  00792E  EC16  F037         	call	___wmul	;wreg free
   762  007932  0E60               	movlw	low _m_tabMines
   763  007934  6E17               	movwf	??_rempliMines^0,c
   764  007936  0E00               	movlw	high _m_tabMines
   765  007938  6E18               	movwf	(??_rempliMines+1)^0,c
   766  00793A  5001               	movf	?___wmul^0,w,c
   767  00793C  2617               	addwf	??_rempliMines^0,f,c
   768  00793E  5002               	movf	(?___wmul+1)^0,w,c
   769  007940  2218               	addwfc	(??_rempliMines+1)^0,f,c
   770  007942  501E               	movf	rempliMines@i^0,w,c
   771  007944  2417               	addwf	??_rempliMines^0,w,c
   772  007946  6ED9               	movwf	fsr2l,c
   773  007948  501F               	movf	(rempliMines@i+1)^0,w,c
   774  00794A  2018               	addwfc	(??_rempliMines+1)^0,w,c
   775  00794C  6EDA               	movwf	fsr2h,c
   776  00794E  0E20               	movlw	32
   777  007950  6EDF               	movwf	indf2,c
   778  007952  4A20               	infsnz	rempliMines@j^0,f,c
   779  007954  2A21               	incf	(rempliMines@j+1)^0,f,c
   780  007956  BE21               	btfsc	(rempliMines@j+1)^0,7,c
   781  007958  EFB7  F03C         	goto	u891
   782  00795C  5021               	movf	(rempliMines@j+1)^0,w,c
   783  00795E  E109               	bnz	u890
   784  007960  0E04               	movlw	4
   785  007962  5C20               	subwf	rempliMines@j^0,w,c
   786  007964  A0D8               	btfss	status,0,c
   787  007966  EFB7  F03C         	goto	u891
   788  00796A  EFB9  F03C         	goto	u890
   789  00796E                     u891:
   790  00796E  EF8F  F03C         	goto	l2058
   791  007972                     u890:
   792  007972  4A1E               	infsnz	rempliMines@i^0,f,c
   793  007974  2A1F               	incf	(rempliMines@i+1)^0,f,c
   794  007976  BE1F               	btfsc	(rempliMines@i+1)^0,7,c
   795  007978  EFC7  F03C         	goto	u901
   796  00797C  501F               	movf	(rempliMines@i+1)^0,w,c
   797  00797E  E109               	bnz	u900
   798  007980  0E14               	movlw	20
   799  007982  5C1E               	subwf	rempliMines@i^0,w,c
   800  007984  A0D8               	btfss	status,0,c
   801  007986  EFC7  F03C         	goto	u901
   802  00798A  EFC9  F03C         	goto	u900
   803  00798E                     u901:
   804  00798E  EF8B  F03C         	goto	l2052
   805  007992                     u900:
   806  007992                     
   807                           ;main.c: 135: };main.c: 136: };main.c: 138: for(int i = 0; i < nb; i++){
   808  007992  0E00               	movlw	0
   809  007994  6E1B               	movwf	(rempliMines@i_417+1)^0,c
   810  007996  0E00               	movlw	0
   811  007998  6E1A               	movwf	rempliMines@i_417^0,c
   812  00799A  EF0F  F03D         	goto	l2078
   813  00799E                     l2070:
   814                           
   815                           ;main.c: 140: col = rand()%20;
   816  00799E  EC01  F038         	call	_rand	;wreg free
   817  0079A2  C00D  F00F         	movff	?_rand,___awmod@dividend
   818  0079A6  C00E  F010         	movff	?_rand+1,___awmod@dividend+1
   819  0079AA  0E00               	movlw	0
   820  0079AC  6E12               	movwf	(___awmod@divisor+1)^0,c
   821  0079AE  0E14               	movlw	20
   822  0079B0  6E11               	movwf	___awmod@divisor^0,c
   823  0079B2  EC56  F03A         	call	___awmod	;wreg free
   824  0079B6  500F               	movf	?___awmod^0,w,c
   825  0079B8  6E1C               	movwf	rempliMines@col^0,c
   826                           
   827                           ;main.c: 141: ligne = rand()%4;
   828  0079BA  EC01  F038         	call	_rand	;wreg free
   829  0079BE  500D               	movf	?_rand^0,w,c
   830  0079C0  0B03               	andlw	3
   831  0079C2  6E1D               	movwf	rempliMines@ligne^0,c
   832  0079C4                     
   833                           ;main.c: 142: }while(m_tabMines[ligne][col] != 32);
   834  0079C4  501D               	movf	rempliMines@ligne^0,w,c
   835  0079C6  0D15               	mullw	21
   836  0079C8  0E60               	movlw	low _m_tabMines
   837  0079CA  6E17               	movwf	??_rempliMines^0,c
   838  0079CC  0E00               	movlw	high _m_tabMines
   839  0079CE  6E18               	movwf	(??_rempliMines+1)^0,c
   840  0079D0  50F3               	movf	243,w,c
   841  0079D2  2617               	addwf	??_rempliMines^0,f,c
   842  0079D4  50F4               	movf	244,w,c
   843  0079D6  2218               	addwfc	(??_rempliMines+1)^0,f,c
   844  0079D8  501C               	movf	rempliMines@col^0,w,c
   845  0079DA  2417               	addwf	??_rempliMines^0,w,c
   846  0079DC  6ED9               	movwf	fsr2l,c
   847  0079DE  0E00               	movlw	0
   848  0079E0  2018               	addwfc	(??_rempliMines+1)^0,w,c
   849  0079E2  6EDA               	movwf	fsr2h,c
   850  0079E4  0E20               	movlw	32
   851  0079E6  18DE               	xorwf	postinc2,w,c
   852  0079E8  A4D8               	btfss	status,2,c
   853  0079EA  EFF9  F03C         	goto	u911
   854  0079EE  EFFB  F03C         	goto	u910
   855  0079F2                     u911:
   856  0079F2  EFCF  F03C         	goto	l2070
   857  0079F6                     u910:
   858  0079F6                     
   859                           ;main.c: 143: m_tabMines[ligne][col] = 3;
   860  0079F6  501D               	movf	rempliMines@ligne^0,w,c
   861  0079F8  0D15               	mullw	21
   862  0079FA  0E60               	movlw	low _m_tabMines
   863  0079FC  6E17               	movwf	??_rempliMines^0,c
   864  0079FE  0E00               	movlw	high _m_tabMines
   865  007A00  6E18               	movwf	(??_rempliMines+1)^0,c
   866  007A02  50F3               	movf	243,w,c
   867  007A04  2617               	addwf	??_rempliMines^0,f,c
   868  007A06  50F4               	movf	244,w,c
   869  007A08  2218               	addwfc	(??_rempliMines+1)^0,f,c
   870  007A0A  501C               	movf	rempliMines@col^0,w,c
   871  007A0C  2417               	addwf	??_rempliMines^0,w,c
   872  007A0E  6ED9               	movwf	fsr2l,c
   873  007A10  0E00               	movlw	0
   874  007A12  2018               	addwfc	(??_rempliMines+1)^0,w,c
   875  007A14  6EDA               	movwf	fsr2h,c
   876  007A16  0E03               	movlw	3
   877  007A18  6EDF               	movwf	indf2,c
   878  007A1A  4A1A               	infsnz	rempliMines@i_417^0,f,c
   879  007A1C  2A1B               	incf	(rempliMines@i_417+1)^0,f,c
   880  007A1E                     l2078:
   881  007A1E  5015               	movf	rempliMines@nb^0,w,c
   882  007A20  5C1A               	subwf	rempliMines@i_417^0,w,c
   883  007A22  501B               	movf	(rempliMines@i_417+1)^0,w,c
   884  007A24  0A80               	xorlw	128
   885  007A26  6E17               	movwf	??_rempliMines^0,c
   886  007A28  5016               	movf	(rempliMines@nb+1)^0,w,c
   887  007A2A  0A80               	xorlw	128
   888  007A2C  5817               	subwfb	??_rempliMines^0,w,c
   889  007A2E  A0D8               	btfss	status,0,c
   890  007A30  EF1C  F03D         	goto	u921
   891  007A34  EF1E  F03D         	goto	u920
   892  007A38                     u921:
   893  007A38  EFCF  F03C         	goto	l2070
   894  007A3C                     u920:
   895  007A3C  0012               	return		;funcret
   896  007A3E                     __end_of_rempliMines:
   897                           	opt callstack 0
   898                           
   899 ;; *************** function _rand *****************
   900 ;; Defined at:
   901 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  2   12[COMRAM] int 
   908 ;; Registers used:
   909 ;;		wreg, status,2, status,0, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   915 ;;      Params:         2       0       0       0       0       0       0
   916 ;;      Locals:         0       0       0       0       0       0       0
   917 ;;      Temps:          0       0       0       0       0       0       0
   918 ;;      Totals:         2       0       0       0       0       0       0
   919 ;;Total ram usage:        2 bytes
   920 ;; Hardware stack levels used:    1
   921 ;; Hardware stack levels required when called:    1
   922 ;; This function calls:
   923 ;;		___lmul
   924 ;; This function is called by:
   925 ;;		_rempliMines
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text2
   930  007002                     __ptext2:
   931                           	opt callstack 0
   932  007002                     _rand:
   933                           	opt callstack 28
   934  007002  C027  F001         	movff	_randx,___lmul@multiplier
   935  007006  C028  F002         	movff	_randx+1,___lmul@multiplier+1
   936  00700A  C029  F003         	movff	_randx+2,___lmul@multiplier+2
   937  00700E  C02A  F004         	movff	_randx+3,___lmul@multiplier+3
   938  007012  0E6D               	movlw	109
   939  007014  6E05               	movwf	___lmul@multiplicand^0,c
   940  007016  0E4E               	movlw	78
   941  007018  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   942  00701A  0EC6               	movlw	198
   943  00701C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
   944  00701E  0E41               	movlw	65
   945  007020  6E08               	movwf	(___lmul@multiplicand+3)^0,c
   946  007022  EC7C  F039         	call	___lmul	;wreg free
   947  007026  C001  F027         	movff	?___lmul,_randx
   948  00702A  C002  F028         	movff	?___lmul+1,_randx+1
   949  00702E  C003  F029         	movff	?___lmul+2,_randx+2
   950  007032  C004  F02A         	movff	?___lmul+3,_randx+3
   951  007036  0E39               	movlw	57
   952  007038  2627               	addwf	_randx^0,f,c
   953  00703A  0E30               	movlw	48
   954  00703C  2228               	addwfc	(_randx+1)^0,f,c
   955  00703E  0E00               	movlw	0
   956  007040  2229               	addwfc	(_randx+2)^0,f,c
   957  007042  0E00               	movlw	0
   958  007044  222A               	addwfc	(_randx+3)^0,f,c
   959  007046  0EFF               	movlw	255
   960  007048  1429               	andwf	(_randx+2)^0,w,c
   961  00704A  6E0D               	movwf	?_rand^0,c
   962  00704C  0E7F               	movlw	127
   963  00704E  142A               	andwf	(_randx+3)^0,w,c
   964  007050  6E0E               	movwf	(?_rand+1)^0,c
   965  007052  0012               	return		;funcret
   966  007054                     __end_of_rand:
   967                           	opt callstack 0
   968                           
   969 ;; *************** function ___lmul *****************
   970 ;; Defined at:
   971 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;  multiplier      4    0[COMRAM] unsigned long 
   974 ;;  multiplicand    4    4[COMRAM] unsigned long 
   975 ;; Auto vars:     Size  Location     Type
   976 ;;  product         4    8[COMRAM] unsigned long 
   977 ;; Return value:  Size  Location     Type
   978 ;;                  4    0[COMRAM] unsigned long 
   979 ;; Registers used:
   980 ;;		wreg, status,2, status,0
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   986 ;;      Params:         8       0       0       0       0       0       0
   987 ;;      Locals:         4       0       0       0       0       0       0
   988 ;;      Temps:          0       0       0       0       0       0       0
   989 ;;      Totals:        12       0       0       0       0       0       0
   990 ;;Total ram usage:       12 bytes
   991 ;; Hardware stack levels used:    1
   992 ;; This function calls:
   993 ;;		Nothing
   994 ;; This function is called by:
   995 ;;		_rand
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	text3
  1000  0072F8                     __ptext3:
  1001                           	opt callstack 0
  1002  0072F8                     ___lmul:
  1003                           	opt callstack 28
  1004  0072F8  0E00               	movlw	0
  1005  0072FA  6E09               	movwf	___lmul@product^0,c
  1006  0072FC  0E00               	movlw	0
  1007  0072FE  6E0A               	movwf	(___lmul@product+1)^0,c
  1008  007300  0E00               	movlw	0
  1009  007302  6E0B               	movwf	(___lmul@product+2)^0,c
  1010  007304  0E00               	movlw	0
  1011  007306  6E0C               	movwf	(___lmul@product+3)^0,c
  1012  007308                     l1800:
  1013  007308  A001               	btfss	___lmul@multiplier^0,0,c
  1014  00730A  EF89  F039         	goto	u641
  1015  00730E  EF8B  F039         	goto	u640
  1016  007312                     u641:
  1017  007312  EF93  F039         	goto	l1804
  1018  007316                     u640:
  1019  007316  5005               	movf	___lmul@multiplicand^0,w,c
  1020  007318  2609               	addwf	___lmul@product^0,f,c
  1021  00731A  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  1022  00731C  220A               	addwfc	(___lmul@product+1)^0,f,c
  1023  00731E  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  1024  007320  220B               	addwfc	(___lmul@product+2)^0,f,c
  1025  007322  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  1026  007324  220C               	addwfc	(___lmul@product+3)^0,f,c
  1027  007326                     l1804:
  1028  007326  90D8               	bcf	status,0,c
  1029  007328  3605               	rlcf	___lmul@multiplicand^0,f,c
  1030  00732A  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1031  00732C  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1032  00732E  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1033  007330  90D8               	bcf	status,0,c
  1034  007332  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  1035  007334  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  1036  007336  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  1037  007338  3201               	rrcf	___lmul@multiplier^0,f,c
  1038  00733A  5001               	movf	___lmul@multiplier^0,w,c
  1039  00733C  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  1040  00733E  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  1041  007340  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  1042  007342  A4D8               	btfss	status,2,c
  1043  007344  EFA6  F039         	goto	u651
  1044  007348  EFA8  F039         	goto	u650
  1045  00734C                     u651:
  1046  00734C  EF84  F039         	goto	l1800
  1047  007350                     u650:
  1048  007350  C009  F001         	movff	___lmul@product,?___lmul
  1049  007354  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1050  007358  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1051  00735C  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1052  007360  0012               	return		;funcret
  1053  007362                     __end_of___lmul:
  1054                           	opt callstack 0
  1055                           
  1056 ;; *************** function ___awmod *****************
  1057 ;; Defined at:
  1058 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  dividend        2   14[COMRAM] int 
  1061 ;;  divisor         2   16[COMRAM] int 
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;  sign            1   19[COMRAM] unsigned char 
  1064 ;;  counter         1   18[COMRAM] unsigned char 
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  2   14[COMRAM] int 
  1067 ;; Registers used:
  1068 ;;		wreg, status,2, status,0
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1074 ;;      Params:         4       0       0       0       0       0       0
  1075 ;;      Locals:         2       0       0       0       0       0       0
  1076 ;;      Temps:          0       0       0       0       0       0       0
  1077 ;;      Totals:         6       0       0       0       0       0       0
  1078 ;;Total ram usage:        6 bytes
  1079 ;; Hardware stack levels used:    1
  1080 ;; This function calls:
  1081 ;;		Nothing
  1082 ;; This function is called by:
  1083 ;;		_rempliMines
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           	psect	text4
  1088  0074AC                     __ptext4:
  1089                           	opt callstack 0
  1090  0074AC                     ___awmod:
  1091                           	opt callstack 29
  1092  0074AC  0E00               	movlw	0
  1093  0074AE  6E14               	movwf	___awmod@sign^0,c
  1094  0074B0  BE10               	btfsc	(___awmod@dividend+1)^0,7,c
  1095  0074B2  EF5F  F03A         	goto	u810
  1096  0074B6  EF5D  F03A         	goto	u811
  1097  0074BA                     u811:
  1098  0074BA  EF65  F03A         	goto	l1970
  1099  0074BE                     u810:
  1100  0074BE  6C0F               	negf	___awmod@dividend^0,c
  1101  0074C0  1E10               	comf	(___awmod@dividend+1)^0,f,c
  1102  0074C2  B0D8               	btfsc	status,0,c
  1103  0074C4  2A10               	incf	(___awmod@dividend+1)^0,f,c
  1104  0074C6  0E01               	movlw	1
  1105  0074C8  6E14               	movwf	___awmod@sign^0,c
  1106  0074CA                     l1970:
  1107  0074CA  BE12               	btfsc	(___awmod@divisor+1)^0,7,c
  1108  0074CC  EF6C  F03A         	goto	u820
  1109  0074D0  EF6A  F03A         	goto	u821
  1110  0074D4                     u821:
  1111  0074D4  EF70  F03A         	goto	l1974
  1112  0074D8                     u820:
  1113  0074D8  6C11               	negf	___awmod@divisor^0,c
  1114  0074DA  1E12               	comf	(___awmod@divisor+1)^0,f,c
  1115  0074DC  B0D8               	btfsc	status,0,c
  1116  0074DE  2A12               	incf	(___awmod@divisor+1)^0,f,c
  1117  0074E0                     l1974:
  1118  0074E0  5011               	movf	___awmod@divisor^0,w,c
  1119  0074E2  1012               	iorwf	(___awmod@divisor+1)^0,w,c
  1120  0074E4  B4D8               	btfsc	status,2,c
  1121  0074E6  EF77  F03A         	goto	u831
  1122  0074EA  EF79  F03A         	goto	u830
  1123  0074EE                     u831:
  1124  0074EE  EF9D  F03A         	goto	l1990
  1125  0074F2                     u830:
  1126  0074F2  0E01               	movlw	1
  1127  0074F4  6E13               	movwf	___awmod@counter^0,c
  1128  0074F6  EF81  F03A         	goto	l1980
  1129  0074FA                     l1978:
  1130  0074FA  90D8               	bcf	status,0,c
  1131  0074FC  3611               	rlcf	___awmod@divisor^0,f,c
  1132  0074FE  3612               	rlcf	(___awmod@divisor+1)^0,f,c
  1133  007500  2A13               	incf	___awmod@counter^0,f,c
  1134  007502                     l1980:
  1135  007502  AE12               	btfss	(___awmod@divisor+1)^0,7,c
  1136  007504  EF86  F03A         	goto	u841
  1137  007508  EF88  F03A         	goto	u840
  1138  00750C                     u841:
  1139  00750C  EF7D  F03A         	goto	l1978
  1140  007510                     u840:
  1141  007510                     l1982:
  1142  007510  5011               	movf	___awmod@divisor^0,w,c
  1143  007512  5C0F               	subwf	___awmod@dividend^0,w,c
  1144  007514  5012               	movf	(___awmod@divisor+1)^0,w,c
  1145  007516  5810               	subwfb	(___awmod@dividend+1)^0,w,c
  1146  007518  A0D8               	btfss	status,0,c
  1147  00751A  EF91  F03A         	goto	u851
  1148  00751E  EF93  F03A         	goto	u850
  1149  007522                     u851:
  1150  007522  EF97  F03A         	goto	l1986
  1151  007526                     u850:
  1152  007526  5011               	movf	___awmod@divisor^0,w,c
  1153  007528  5E0F               	subwf	___awmod@dividend^0,f,c
  1154  00752A  5012               	movf	(___awmod@divisor+1)^0,w,c
  1155  00752C  5A10               	subwfb	(___awmod@dividend+1)^0,f,c
  1156  00752E                     l1986:
  1157  00752E  90D8               	bcf	status,0,c
  1158  007530  3212               	rrcf	(___awmod@divisor+1)^0,f,c
  1159  007532  3211               	rrcf	___awmod@divisor^0,f,c
  1160  007534  2E13               	decfsz	___awmod@counter^0,f,c
  1161  007536  EF88  F03A         	goto	l1982
  1162  00753A                     l1990:
  1163  00753A  5014               	movf	___awmod@sign^0,w,c
  1164  00753C  B4D8               	btfsc	status,2,c
  1165  00753E  EFA3  F03A         	goto	u861
  1166  007542  EFA5  F03A         	goto	u860
  1167  007546                     u861:
  1168  007546  EFA9  F03A         	goto	l1994
  1169  00754A                     u860:
  1170  00754A  6C0F               	negf	___awmod@dividend^0,c
  1171  00754C  1E10               	comf	(___awmod@dividend+1)^0,f,c
  1172  00754E  B0D8               	btfsc	status,0,c
  1173  007550  2A10               	incf	(___awmod@dividend+1)^0,f,c
  1174  007552                     l1994:
  1175  007552  C00F  F00F         	movff	___awmod@dividend,?___awmod
  1176  007556  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  1177  00755A  0012               	return		;funcret
  1178  00755C                     __end_of___awmod:
  1179                           	opt callstack 0
  1180                           
  1181 ;; *************** function _metToucheCombien *****************
  1182 ;; Defined at:
  1183 ;;		line 156 in file "main.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;		None
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;  j               2   27[COMRAM] int 
  1188 ;;  i               2   25[COMRAM] int 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1198 ;;      Params:         0       0       0       0       0       0       0
  1199 ;;      Locals:         4       0       0       0       0       0       0
  1200 ;;      Temps:          3       0       0       0       0       0       0
  1201 ;;      Totals:         7       0       0       0       0       0       0
  1202 ;;Total ram usage:        7 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; Hardware stack levels required when called:    2
  1205 ;; This function calls:
  1206 ;;		___wmul
  1207 ;;		_calculToucheCombien
  1208 ;; This function is called by:
  1209 ;;		_main
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text5
  1214  007632                     __ptext5:
  1215                           	opt callstack 0
  1216  007632                     _metToucheCombien:
  1217                           	opt callstack 28
  1218  007632                     
  1219                           ;main.c: 157: for(int i = 0; i<20; i++){
  1220  007632  0E00               	movlw	0
  1221  007634  6E1B               	movwf	(metToucheCombien@i+1)^0,c
  1222  007636  0E00               	movlw	0
  1223  007638  6E1A               	movwf	metToucheCombien@i^0,c
  1224  00763A                     l2086:
  1225                           
  1226                           ;main.c: 158: for(int j = 0; j<4; j++){
  1227  00763A  0E00               	movlw	0
  1228  00763C  6E1D               	movwf	(metToucheCombien@j+1)^0,c
  1229  00763E  0E00               	movlw	0
  1230  007640  6E1C               	movwf	metToucheCombien@j^0,c
  1231  007642                     l2092:
  1232                           
  1233                           ;main.c: 159: if(m_tabMines[j][i] != 3){
  1234  007642  C01C  F001         	movff	metToucheCombien@j,___wmul@multiplier
  1235  007646  C01D  F002         	movff	metToucheCombien@j+1,___wmul@multiplier+1
  1236  00764A  0E00               	movlw	0
  1237  00764C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1238  00764E  0E15               	movlw	21
  1239  007650  6E03               	movwf	___wmul@multiplicand^0,c
  1240  007652  EC16  F037         	call	___wmul	;wreg free
  1241  007656  0E60               	movlw	low _m_tabMines
  1242  007658  6E17               	movwf	??_metToucheCombien^0,c
  1243  00765A  0E00               	movlw	high _m_tabMines
  1244  00765C  6E18               	movwf	(??_metToucheCombien+1)^0,c
  1245  00765E  5001               	movf	?___wmul^0,w,c
  1246  007660  2617               	addwf	??_metToucheCombien^0,f,c
  1247  007662  5002               	movf	(?___wmul+1)^0,w,c
  1248  007664  2218               	addwfc	(??_metToucheCombien+1)^0,f,c
  1249  007666  501A               	movf	metToucheCombien@i^0,w,c
  1250  007668  2417               	addwf	??_metToucheCombien^0,w,c
  1251  00766A  6ED9               	movwf	fsr2l,c
  1252  00766C  501B               	movf	(metToucheCombien@i+1)^0,w,c
  1253  00766E  2018               	addwfc	(??_metToucheCombien+1)^0,w,c
  1254  007670  6EDA               	movwf	fsr2h,c
  1255  007672  0E03               	movlw	3
  1256  007674  18DE               	xorwf	postinc2,w,c
  1257  007676  B4D8               	btfsc	status,2,c
  1258  007678  EF40  F03B         	goto	u931
  1259  00767C  EF42  F03B         	goto	u930
  1260  007680                     u931:
  1261  007680  EF67  F03B         	goto	l2096
  1262  007684                     u930:
  1263  007684                     
  1264                           ;main.c: 160: m_tabMines[j][i] = calculToucheCombien(j, i);
  1265  007684  C01C  F007         	movff	metToucheCombien@j,calculToucheCombien@ligne
  1266  007688  C01D  F008         	movff	metToucheCombien@j+1,calculToucheCombien@ligne+1
  1267  00768C  C01A  F009         	movff	metToucheCombien@i,calculToucheCombien@colonne
  1268  007690  C01B  F00A         	movff	metToucheCombien@i+1,calculToucheCombien@colonne+1
  1269  007694  EC1F  F03D         	call	_calculToucheCombien	;wreg free
  1270  007698  6E17               	movwf	??_metToucheCombien^0,c
  1271  00769A  C01C  F001         	movff	metToucheCombien@j,___wmul@multiplier
  1272  00769E  C01D  F002         	movff	metToucheCombien@j+1,___wmul@multiplier+1
  1273  0076A2  0E00               	movlw	0
  1274  0076A4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1275  0076A6  0E15               	movlw	21
  1276  0076A8  6E03               	movwf	___wmul@multiplicand^0,c
  1277  0076AA  EC16  F037         	call	___wmul	;wreg free
  1278  0076AE  0E60               	movlw	low _m_tabMines
  1279  0076B0  6E18               	movwf	(??_metToucheCombien+1)^0,c
  1280  0076B2  0E00               	movlw	high _m_tabMines
  1281  0076B4  6E19               	movwf	(??_metToucheCombien+2)^0,c
  1282  0076B6  5001               	movf	?___wmul^0,w,c
  1283  0076B8  2618               	addwf	(??_metToucheCombien+1)^0,f,c
  1284  0076BA  5002               	movf	(?___wmul+1)^0,w,c
  1285  0076BC  2219               	addwfc	(??_metToucheCombien+2)^0,f,c
  1286  0076BE  501A               	movf	metToucheCombien@i^0,w,c
  1287  0076C0  2418               	addwf	(??_metToucheCombien+1)^0,w,c
  1288  0076C2  6ED9               	movwf	fsr2l,c
  1289  0076C4  501B               	movf	(metToucheCombien@i+1)^0,w,c
  1290  0076C6  2019               	addwfc	(??_metToucheCombien+2)^0,w,c
  1291  0076C8  6EDA               	movwf	fsr2h,c
  1292  0076CA  C017  FFDF         	movff	??_metToucheCombien,indf2
  1293  0076CE                     l2096:
  1294  0076CE  4A1C               	infsnz	metToucheCombien@j^0,f,c
  1295  0076D0  2A1D               	incf	(metToucheCombien@j+1)^0,f,c
  1296  0076D2  BE1D               	btfsc	(metToucheCombien@j+1)^0,7,c
  1297  0076D4  EF75  F03B         	goto	u941
  1298  0076D8  501D               	movf	(metToucheCombien@j+1)^0,w,c
  1299  0076DA  E109               	bnz	u940
  1300  0076DC  0E04               	movlw	4
  1301  0076DE  5C1C               	subwf	metToucheCombien@j^0,w,c
  1302  0076E0  A0D8               	btfss	status,0,c
  1303  0076E2  EF75  F03B         	goto	u941
  1304  0076E6  EF77  F03B         	goto	u940
  1305  0076EA                     u941:
  1306  0076EA  EF21  F03B         	goto	l2092
  1307  0076EE                     u940:
  1308  0076EE  4A1A               	infsnz	metToucheCombien@i^0,f,c
  1309  0076F0  2A1B               	incf	(metToucheCombien@i+1)^0,f,c
  1310  0076F2  BE1B               	btfsc	(metToucheCombien@i+1)^0,7,c
  1311  0076F4  EF85  F03B         	goto	u951
  1312  0076F8  501B               	movf	(metToucheCombien@i+1)^0,w,c
  1313  0076FA  E109               	bnz	u950
  1314  0076FC  0E14               	movlw	20
  1315  0076FE  5C1A               	subwf	metToucheCombien@i^0,w,c
  1316  007700  A0D8               	btfss	status,0,c
  1317  007702  EF85  F03B         	goto	u951
  1318  007706  EF87  F03B         	goto	u950
  1319  00770A                     u951:
  1320  00770A  EF1D  F03B         	goto	l2086
  1321  00770E                     u950:
  1322  00770E  0012               	return		;funcret
  1323  007710                     __end_of_metToucheCombien:
  1324                           	opt callstack 0
  1325                           
  1326 ;; *************** function _calculToucheCombien *****************
  1327 ;; Defined at:
  1328 ;;		line 171 in file "main.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  ligne           2    6[COMRAM] int 
  1331 ;;  colonne         2    8[COMRAM] int 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  j               2   20[COMRAM] int 
  1334 ;;  i               2   18[COMRAM] int 
  1335 ;;  y               2   16[COMRAM] int 
  1336 ;;  x               2   14[COMRAM] int 
  1337 ;;  total           1   13[COMRAM] unsigned char 
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      unsigned char 
  1340 ;; Registers used:
  1341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1347 ;;      Params:         4       0       0       0       0       0       0
  1348 ;;      Locals:         9       0       0       0       0       0       0
  1349 ;;      Temps:          3       0       0       0       0       0       0
  1350 ;;      Totals:        16       0       0       0       0       0       0
  1351 ;;Total ram usage:       16 bytes
  1352 ;; Hardware stack levels used:    1
  1353 ;; Hardware stack levels required when called:    1
  1354 ;; This function calls:
  1355 ;;		___wmul
  1356 ;; This function is called by:
  1357 ;;		_metToucheCombien
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text6
  1362  007A3E                     __ptext6:
  1363                           	opt callstack 0
  1364  007A3E                     _calculToucheCombien:
  1365                           	opt callstack 28
  1366  007A3E                     
  1367                           ;main.c: 173: int y = 0;
  1368  007A3E  0E00               	movlw	0
  1369  007A40  6E12               	movwf	(calculToucheCombien@y+1)^0,c
  1370  007A42  0E00               	movlw	0
  1371  007A44  6E11               	movwf	calculToucheCombien@y^0,c
  1372                           
  1373                           ;main.c: 174: char total = 0;
  1374  007A46  0E00               	movlw	0
  1375  007A48  6E0E               	movwf	calculToucheCombien@total^0,c
  1376  007A4A                     
  1377                           ;main.c: 176: for(int i = -1; i < 2; i++){
  1378  007A4A  6813               	setf	calculToucheCombien@i^0,c
  1379  007A4C  6814               	setf	(calculToucheCombien@i+1)^0,c
  1380  007A4E                     l125:
  1381                           
  1382                           ;main.c: 177: for(int j = -1; j < 2; j++){
  1383  007A4E  6815               	setf	calculToucheCombien@j^0,c
  1384  007A50  6816               	setf	(calculToucheCombien@j+1)^0,c
  1385  007A52                     l1844:
  1386                           
  1387                           ;main.c: 178: if(j != 0 || i != 0){
  1388  007A52  5015               	movf	calculToucheCombien@j^0,w,c
  1389  007A54  1016               	iorwf	(calculToucheCombien@j+1)^0,w,c
  1390  007A56  A4D8               	btfss	status,2,c
  1391  007A58  EF30  F03D         	goto	u671
  1392  007A5C  EF32  F03D         	goto	u670
  1393  007A60                     u671:
  1394  007A60  EF3B  F03D         	goto	l1848
  1395  007A64                     u670:
  1396  007A64  5013               	movf	calculToucheCombien@i^0,w,c
  1397  007A66  1014               	iorwf	(calculToucheCombien@i+1)^0,w,c
  1398  007A68  B4D8               	btfsc	status,2,c
  1399  007A6A  EF39  F03D         	goto	u681
  1400  007A6E  EF3B  F03D         	goto	u680
  1401  007A72                     u681:
  1402  007A72  EF93  F03D         	goto	l129
  1403  007A76                     u680:
  1404  007A76                     l1848:
  1405                           
  1406                           ;main.c: 179: x = colonne + i;
  1407  007A76  5013               	movf	calculToucheCombien@i^0,w,c
  1408  007A78  2409               	addwf	calculToucheCombien@colonne^0,w,c
  1409  007A7A  6E0F               	movwf	calculToucheCombien@x^0,c
  1410  007A7C  5014               	movf	(calculToucheCombien@i+1)^0,w,c
  1411  007A7E  200A               	addwfc	(calculToucheCombien@colonne+1)^0,w,c
  1412  007A80  6E10               	movwf	(calculToucheCombien@x+1)^0,c
  1413                           
  1414                           ;main.c: 180: y = ligne + j;
  1415  007A82  5015               	movf	calculToucheCombien@j^0,w,c
  1416  007A84  2407               	addwf	calculToucheCombien@ligne^0,w,c
  1417  007A86  6E11               	movwf	calculToucheCombien@y^0,c
  1418  007A88  5016               	movf	(calculToucheCombien@j+1)^0,w,c
  1419  007A8A  2008               	addwfc	(calculToucheCombien@ligne+1)^0,w,c
  1420  007A8C  6E12               	movwf	(calculToucheCombien@y+1)^0,c
  1421                           
  1422                           ;main.c: 181: if(x >= 0 && x < 20 && y >= 0 && y < 4){
  1423  007A8E  BE10               	btfsc	(calculToucheCombien@x+1)^0,7,c
  1424  007A90  EF4C  F03D         	goto	u691
  1425  007A94  EF4E  F03D         	goto	u690
  1426  007A98                     u691:
  1427  007A98  EF93  F03D         	goto	l129
  1428  007A9C                     u690:
  1429  007A9C  BE10               	btfsc	(calculToucheCombien@x+1)^0,7,c
  1430  007A9E  EF5C  F03D         	goto	u700
  1431  007AA2  5010               	movf	(calculToucheCombien@x+1)^0,w,c
  1432  007AA4  E107               	bnz	u701
  1433  007AA6  0E14               	movlw	20
  1434  007AA8  5C0F               	subwf	calculToucheCombien@x^0,w,c
  1435  007AAA  B0D8               	btfsc	status,0,c
  1436  007AAC  EF5A  F03D         	goto	u701
  1437  007AB0  EF5C  F03D         	goto	u700
  1438  007AB4                     u701:
  1439  007AB4  EF93  F03D         	goto	l129
  1440  007AB8                     u700:
  1441  007AB8  BE12               	btfsc	(calculToucheCombien@y+1)^0,7,c
  1442  007ABA  EF61  F03D         	goto	u711
  1443  007ABE  EF63  F03D         	goto	u710
  1444  007AC2                     u711:
  1445  007AC2  EF93  F03D         	goto	l129
  1446  007AC6                     u710:
  1447  007AC6  BE12               	btfsc	(calculToucheCombien@y+1)^0,7,c
  1448  007AC8  EF71  F03D         	goto	u720
  1449  007ACC  5012               	movf	(calculToucheCombien@y+1)^0,w,c
  1450  007ACE  E107               	bnz	u721
  1451  007AD0  0E04               	movlw	4
  1452  007AD2  5C11               	subwf	calculToucheCombien@y^0,w,c
  1453  007AD4  B0D8               	btfsc	status,0,c
  1454  007AD6  EF6F  F03D         	goto	u721
  1455  007ADA  EF71  F03D         	goto	u720
  1456  007ADE                     u721:
  1457  007ADE  EF93  F03D         	goto	l129
  1458  007AE2                     u720:
  1459  007AE2                     
  1460                           ;main.c: 182: if(m_tabMines[y][x] == 3){
  1461  007AE2  C011  F001         	movff	calculToucheCombien@y,___wmul@multiplier
  1462  007AE6  C012  F002         	movff	calculToucheCombien@y+1,___wmul@multiplier+1
  1463  007AEA  0E00               	movlw	0
  1464  007AEC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1465  007AEE  0E15               	movlw	21
  1466  007AF0  6E03               	movwf	___wmul@multiplicand^0,c
  1467  007AF2  EC16  F037         	call	___wmul	;wreg free
  1468  007AF6  0E60               	movlw	low _m_tabMines
  1469  007AF8  6E0B               	movwf	??_calculToucheCombien^0,c
  1470  007AFA  0E00               	movlw	high _m_tabMines
  1471  007AFC  6E0C               	movwf	(??_calculToucheCombien+1)^0,c
  1472  007AFE  5001               	movf	?___wmul^0,w,c
  1473  007B00  260B               	addwf	??_calculToucheCombien^0,f,c
  1474  007B02  5002               	movf	(?___wmul+1)^0,w,c
  1475  007B04  220C               	addwfc	(??_calculToucheCombien+1)^0,f,c
  1476  007B06  500F               	movf	calculToucheCombien@x^0,w,c
  1477  007B08  240B               	addwf	??_calculToucheCombien^0,w,c
  1478  007B0A  6ED9               	movwf	fsr2l,c
  1479  007B0C  5010               	movf	(calculToucheCombien@x+1)^0,w,c
  1480  007B0E  200C               	addwfc	(??_calculToucheCombien+1)^0,w,c
  1481  007B10  6EDA               	movwf	fsr2h,c
  1482  007B12  0E03               	movlw	3
  1483  007B14  18DE               	xorwf	postinc2,w,c
  1484  007B16  A4D8               	btfss	status,2,c
  1485  007B18  EF90  F03D         	goto	u731
  1486  007B1C  EF92  F03D         	goto	u730
  1487  007B20                     u731:
  1488  007B20  EF93  F03D         	goto	l129
  1489  007B24                     u730:
  1490  007B24                     
  1491                           ;main.c: 183: total++;
  1492  007B24  2A0E               	incf	calculToucheCombien@total^0,f,c
  1493  007B26                     l129:
  1494  007B26  4A15               	infsnz	calculToucheCombien@j^0,f,c
  1495  007B28  2A16               	incf	(calculToucheCombien@j+1)^0,f,c
  1496  007B2A  BE16               	btfsc	(calculToucheCombien@j+1)^0,7,c
  1497  007B2C  EFA1  F03D         	goto	u741
  1498  007B30  5016               	movf	(calculToucheCombien@j+1)^0,w,c
  1499  007B32  E109               	bnz	u740
  1500  007B34  0E02               	movlw	2
  1501  007B36  5C15               	subwf	calculToucheCombien@j^0,w,c
  1502  007B38  A0D8               	btfss	status,0,c
  1503  007B3A  EFA1  F03D         	goto	u741
  1504  007B3E  EFA3  F03D         	goto	u740
  1505  007B42                     u741:
  1506  007B42  EF29  F03D         	goto	l1844
  1507  007B46                     u740:
  1508  007B46  4A13               	infsnz	calculToucheCombien@i^0,f,c
  1509  007B48  2A14               	incf	(calculToucheCombien@i+1)^0,f,c
  1510  007B4A  BE14               	btfsc	(calculToucheCombien@i+1)^0,7,c
  1511  007B4C  EFB1  F03D         	goto	u751
  1512  007B50  5014               	movf	(calculToucheCombien@i+1)^0,w,c
  1513  007B52  E109               	bnz	u750
  1514  007B54  0E02               	movlw	2
  1515  007B56  5C13               	subwf	calculToucheCombien@i^0,w,c
  1516  007B58  A0D8               	btfss	status,0,c
  1517  007B5A  EFB1  F03D         	goto	u751
  1518  007B5E  EFB3  F03D         	goto	u750
  1519  007B62                     u751:
  1520  007B62  EF27  F03D         	goto	l125
  1521  007B66                     u750:
  1522  007B66                     
  1523                           ;main.c: 184: };main.c: 185: };main.c: 186: };main.c: 187: };main.c: 188: };main.c: 189:
      +                           if(total == 0){
  1524  007B66  500E               	movf	calculToucheCombien@total^0,w,c
  1525  007B68  A4D8               	btfss	status,2,c
  1526  007B6A  EFB9  F03D         	goto	u761
  1527  007B6E  EFBB  F03D         	goto	u760
  1528  007B72                     u761:
  1529  007B72  EFBE  F03D         	goto	l1872
  1530  007B76                     u760:
  1531  007B76                     
  1532                           ;main.c: 190: return 32;
  1533  007B76  0E20               	movlw	32
  1534  007B78  EFC0  F03D         	goto	l135
  1535  007B7C                     l1872:
  1536                           
  1537                           ;main.c: 191: };main.c: 192: return total+48;
  1538  007B7C  500E               	movf	calculToucheCombien@total^0,w,c
  1539  007B7E  0F30               	addlw	48
  1540  007B80                     l135:
  1541  007B80  0012               	return		;funcret
  1542  007B82                     __end_of_calculToucheCombien:
  1543                           	opt callstack 0
  1544                           
  1545 ;; *************** function _lcd_init *****************
  1546 ;; Defined at:
  1547 ;;		line 282 in file "Lcd4Lignes.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1561 ;;      Params:         0       0       0       0       0       0       0
  1562 ;;      Locals:         0       0       0       0       0       0       0
  1563 ;;      Temps:          0       0       0       0       0       0       0
  1564 ;;      Totals:         0       0       0       0       0       0       0
  1565 ;;Total ram usage:        0 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; Hardware stack levels required when called:    5
  1568 ;; This function calls:
  1569 ;;		_lcd_initCGRam
  1570 ;;		_lcd_resetSequence
  1571 ;;		_lcd_wrCom
  1572 ;; This function is called by:
  1573 ;;		_main
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text7
  1578  006E7A                     __ptext7:
  1579                           	opt callstack 0
  1580  006E7A                     _lcd_init:
  1581                           	opt callstack 25
  1582  006E7A                     
  1583                           ;Lcd4Lignes.c: 285: lcd_resetSequence();
  1584  006E7A  EC17  F039         	call	_lcd_resetSequence	;wreg free
  1585                           
  1586                           ;Lcd4Lignes.c: 286: lcd_wrCom(0x28);
  1587  006E7E  0E28               	movlw	40
  1588  006E80  ECB5  F038         	call	_lcd_wrCom
  1589                           
  1590                           ;Lcd4Lignes.c: 287: lcd_wrCom(0x0F);
  1591  006E84  0E0F               	movlw	15
  1592  006E86  ECB5  F038         	call	_lcd_wrCom
  1593                           
  1594                           ;Lcd4Lignes.c: 288: lcd_wrCom(0x01);
  1595  006E8A  0E01               	movlw	1
  1596  006E8C  ECB5  F038         	call	_lcd_wrCom
  1597                           
  1598                           ;Lcd4Lignes.c: 289: lcd_wrCom(0x06);
  1599  006E90  0E06               	movlw	6
  1600  006E92  ECB5  F038         	call	_lcd_wrCom
  1601                           
  1602                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x80);
  1603  006E96  0E80               	movlw	128
  1604  006E98  ECB5  F038         	call	_lcd_wrCom
  1605  006E9C                     
  1606                           ;Lcd4Lignes.c: 291: lcd_initCGRam();
  1607  006E9C  EC86  F038         	call	_lcd_initCGRam	;wreg free
  1608  006EA0  0012               	return		;funcret
  1609  006EA2                     __end_of_lcd_init:
  1610                           	opt callstack 0
  1611                           
  1612 ;; *************** function _lcd_resetSequence *****************
  1613 ;; Defined at:
  1614 ;;		line 245 in file "Lcd4Lignes.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;		None
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2, status,0, cstack
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1628 ;;      Params:         0       0       0       0       0       0       0
  1629 ;;      Locals:         0       0       0       0       0       0       0
  1630 ;;      Temps:          1       0       0       0       0       0       0
  1631 ;;      Totals:         1       0       0       0       0       0       0
  1632 ;;Total ram usage:        1 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; Hardware stack levels required when called:    1
  1635 ;; This function calls:
  1636 ;;		_lcd_ecrireDonnees
  1637 ;;		_lcd_strobeEnableBit
  1638 ;; This function is called by:
  1639 ;;		_lcd_init
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text8
  1644  00722E                     __ptext8:
  1645                           	opt callstack 0
  1646  00722E                     _lcd_resetSequence:
  1647                           	opt callstack 28
  1648  00722E                     
  1649                           ;Lcd4Lignes.c: 250: TRISD = 0b00000000;
  1650  00722E  0E00               	movlw	0
  1651  007230  6E95               	movwf	149,c	;volatile
  1652  007232                     
  1653                           ;Lcd4Lignes.c: 252: _delay((unsigned long)((40)*(1000000/4000.0)));
  1654  007232  0E0D               	movlw	13
  1655  007234  6E03               	movwf	??_lcd_resetSequence^0,c
  1656  007236  0EFC               	movlw	252
  1657  007238                     u1197:
  1658  007238  2EE8               	decfsz	wreg,f,c
  1659  00723A  D7FE               	bra	u1197
  1660  00723C  2E03               	decfsz	??_lcd_resetSequence^0,f,c
  1661  00723E  D7FC               	bra	u1197
  1662  007240                     
  1663                           ;Lcd4Lignes.c: 253: PORTAbits.RA0 = 0;
  1664  007240  9080               	bcf	128,0,c	;volatile
  1665  007242                     
  1666                           ;Lcd4Lignes.c: 254: PORTAbits.RA1 = 0;
  1667  007242  9280               	bcf	128,1,c	;volatile
  1668  007244                     
  1669                           ;Lcd4Lignes.c: 256: lcd_ecrireDonnees(0x03);
  1670  007244  0E03               	movlw	3
  1671  007246  EC0C  F037         	call	_lcd_ecrireDonnees
  1672  00724A                     
  1673                           ;Lcd4Lignes.c: 257: lcd_strobeEnableBit();
  1674  00724A  ECF6  F036         	call	_lcd_strobeEnableBit	;wreg free
  1675  00724E                     
  1676                           ;Lcd4Lignes.c: 258: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1677  00724E  0E03               	movlw	3
  1678  007250                     u1207:
  1679  007250  2EE8               	decfsz	wreg,f,c
  1680  007252  D7FE               	bra	u1207
  1681  007254  F000               	nop	
  1682  007256                     
  1683                           ;Lcd4Lignes.c: 261: lcd_ecrireDonnees(0x03);
  1684  007256  0E03               	movlw	3
  1685  007258  EC0C  F037         	call	_lcd_ecrireDonnees
  1686  00725C                     
  1687                           ;Lcd4Lignes.c: 262: lcd_strobeEnableBit();
  1688  00725C  ECF6  F036         	call	_lcd_strobeEnableBit	;wreg free
  1689  007260                     
  1690                           ;Lcd4Lignes.c: 263: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1691  007260  0E03               	movlw	3
  1692  007262                     u1217:
  1693  007262  2EE8               	decfsz	wreg,f,c
  1694  007264  D7FE               	bra	u1217
  1695  007266  F000               	nop	
  1696  007268                     
  1697                           ;Lcd4Lignes.c: 265: lcd_ecrireDonnees(0x03);
  1698  007268  0E03               	movlw	3
  1699  00726A  EC0C  F037         	call	_lcd_ecrireDonnees
  1700  00726E                     
  1701                           ;Lcd4Lignes.c: 266: lcd_strobeEnableBit();
  1702  00726E  ECF6  F036         	call	_lcd_strobeEnableBit	;wreg free
  1703  007272                     
  1704                           ;Lcd4Lignes.c: 267: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1705  007272  0E03               	movlw	3
  1706  007274                     u1227:
  1707  007274  2EE8               	decfsz	wreg,f,c
  1708  007276  D7FE               	bra	u1227
  1709  007278  F000               	nop	
  1710  00727A                     
  1711                           ;Lcd4Lignes.c: 269: lcd_ecrireDonnees(0x02);
  1712  00727A  0E02               	movlw	2
  1713  00727C  EC0C  F037         	call	_lcd_ecrireDonnees
  1714  007280                     
  1715                           ;Lcd4Lignes.c: 270: lcd_strobeEnableBit();
  1716  007280  ECF6  F036         	call	_lcd_strobeEnableBit	;wreg free
  1717  007284                     
  1718                           ;Lcd4Lignes.c: 271: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1719  007284  0E03               	movlw	3
  1720  007286                     u1237:
  1721  007286  2EE8               	decfsz	wreg,f,c
  1722  007288  D7FE               	bra	u1237
  1723  00728A  F000               	nop	
  1724  00728C                     
  1725                           ;Lcd4Lignes.c: 273: TRISD = 0b00001111;
  1726  00728C  0E0F               	movlw	15
  1727  00728E  6E95               	movwf	149,c	;volatile
  1728  007290  0012               	return		;funcret
  1729  007292                     __end_of_lcd_resetSequence:
  1730                           	opt callstack 0
  1731                           
  1732 ;; *************** function _lcd_initCGRam *****************
  1733 ;; Defined at:
  1734 ;;		line 441 in file "Lcd4Lignes.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;		None
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;  j               1    6[COMRAM] unsigned char 
  1739 ;;  i               1    5[COMRAM] unsigned char 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1749 ;;      Params:         0       0       0       0       0       0       0
  1750 ;;      Locals:         2       0       0       0       0       0       0
  1751 ;;      Temps:          2       0       0       0       0       0       0
  1752 ;;      Totals:         4       0       0       0       0       0       0
  1753 ;;Total ram usage:        4 bytes
  1754 ;; Hardware stack levels used:    1
  1755 ;; Hardware stack levels required when called:    4
  1756 ;; This function calls:
  1757 ;;		_lcd_curseurHome
  1758 ;;		_lcd_wrCom
  1759 ;;		_lcd_wrData
  1760 ;; This function is called by:
  1761 ;;		_lcd_init
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text9
  1766  00710C                     __ptext9:
  1767                           	opt callstack 0
  1768  00710C                     _lcd_initCGRam:
  1769                           	opt callstack 25
  1770  00710C                     
  1771                           ;Lcd4Lignes.c: 443: char i,j;;Lcd4Lignes.c: 445: lcd_wrCom(0x40);
  1772  00710C  0E40               	movlw	64
  1773  00710E  ECB5  F038         	call	_lcd_wrCom
  1774  007112                     
  1775                           ;Lcd4Lignes.c: 446: for(i=0;i<8;i++)
  1776  007112  0E00               	movlw	0
  1777  007114  6E06               	movwf	lcd_initCGRam@i^0,c
  1778  007116                     l1944:
  1779                           
  1780                           ;Lcd4Lignes.c: 447: {;Lcd4Lignes.c: 448: for(j=0;j<8;j++)
  1781  007116  0E00               	movlw	0
  1782  007118  6E07               	movwf	lcd_initCGRam@j^0,c
  1783  00711A                     l1950:
  1784                           
  1785                           ;Lcd4Lignes.c: 449: lcd_wrData(matCGRAM[i][j]);
  1786  00711A  5006               	movf	lcd_initCGRam@i^0,w,c
  1787  00711C  0D08               	mullw	8
  1788  00711E  0EB4               	movlw	low _matCGRAM
  1789  007120  6E04               	movwf	??_lcd_initCGRam^0,c
  1790  007122  0E00               	movlw	high _matCGRAM
  1791  007124  6E05               	movwf	(??_lcd_initCGRam+1)^0,c
  1792  007126  50F3               	movf	243,w,c
  1793  007128  2604               	addwf	??_lcd_initCGRam^0,f,c
  1794  00712A  50F4               	movf	244,w,c
  1795  00712C  2205               	addwfc	(??_lcd_initCGRam+1)^0,f,c
  1796  00712E  5007               	movf	lcd_initCGRam@j^0,w,c
  1797  007130  2404               	addwf	??_lcd_initCGRam^0,w,c
  1798  007132  6ED9               	movwf	fsr2l,c
  1799  007134  0E00               	movlw	0
  1800  007136  2005               	addwfc	(??_lcd_initCGRam+1)^0,w,c
  1801  007138  6EDA               	movwf	fsr2h,c
  1802  00713A  50DF               	movf	indf2,w,c
  1803  00713C  EC51  F037         	call	_lcd_wrData
  1804  007140  2A07               	incf	lcd_initCGRam@j^0,f,c
  1805  007142  0E07               	movlw	7
  1806  007144  6407               	cpfsgt	lcd_initCGRam@j^0,c
  1807  007146  EFA7  F038         	goto	u791
  1808  00714A  EFA9  F038         	goto	u790
  1809  00714E                     u791:
  1810  00714E  EF8D  F038         	goto	l1950
  1811  007152                     u790:
  1812  007152  2A06               	incf	lcd_initCGRam@i^0,f,c
  1813  007154  0E07               	movlw	7
  1814  007156  6406               	cpfsgt	lcd_initCGRam@i^0,c
  1815  007158  EFB0  F038         	goto	u801
  1816  00715C  EFB2  F038         	goto	u800
  1817  007160                     u801:
  1818  007160  EF8B  F038         	goto	l1944
  1819  007164                     u800:
  1820  007164                     
  1821                           ;Lcd4Lignes.c: 450: };Lcd4Lignes.c: 451: lcd_curseurHome();
  1822  007164  ECFA  F036         	call	_lcd_curseurHome	;wreg free
  1823  007168  0012               	return		;funcret
  1824  00716A                     __end_of_lcd_initCGRam:
  1825                           	opt callstack 0
  1826                           
  1827 ;; *************** function _lcd_curseurHome *****************
  1828 ;; Defined at:
  1829 ;;		line 312 in file "Lcd4Lignes.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;		None
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, status,2, status,0, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1843 ;;      Params:         0       0       0       0       0       0       0
  1844 ;;      Locals:         0       0       0       0       0       0       0
  1845 ;;      Temps:          0       0       0       0       0       0       0
  1846 ;;      Totals:         0       0       0       0       0       0       0
  1847 ;;Total ram usage:        0 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:    3
  1850 ;; This function calls:
  1851 ;;		_lcd_wrCom
  1852 ;; This function is called by:
  1853 ;;		_main
  1854 ;;		_lcd_initCGRam
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text10
  1859  006DF4                     __ptext10:
  1860                           	opt callstack 0
  1861  006DF4                     _lcd_curseurHome:
  1862                           	opt callstack 25
  1863  006DF4                     
  1864                           ;Lcd4Lignes.c: 314: lcd_wrCom(0x02);
  1865  006DF4  0E02               	movlw	2
  1866  006DF6  ECB5  F038         	call	_lcd_wrCom
  1867  006DFA  0012               	return		;funcret
  1868  006DFC                     __end_of_lcd_curseurHome:
  1869                           	opt callstack 0
  1870                           
  1871 ;; *************** function _initialisation *****************
  1872 ;; Defined at:
  1873 ;;		line 327 in file "main.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;		None
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;		None
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      void 
  1880 ;; Registers used:
  1881 ;;		wreg, status,2, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1887 ;;      Params:         0       0       0       0       0       0       0
  1888 ;;      Locals:         0       0       0       0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0
  1890 ;;      Totals:         0       0       0       0       0       0       0
  1891 ;;Total ram usage:        0 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    1
  1894 ;; This function calls:
  1895 ;;		_srand
  1896 ;; This function is called by:
  1897 ;;		_main
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text11
  1902  006ED0                     __ptext11:
  1903                           	opt callstack 0
  1904  006ED0                     _initialisation:
  1905                           	opt callstack 29
  1906  006ED0                     
  1907                           ;main.c: 330: TRISD = 0;
  1908  006ED0  0E00               	movlw	0
  1909  006ED2  6E95               	movwf	149,c	;volatile
  1910                           
  1911                           ;main.c: 332: ANSELH = 0;
  1912  006ED4  0E00               	movlw	0
  1913  006ED6  6E7F               	movwf	127,c	;volatile
  1914  006ED8                     
  1915                           ;main.c: 333: TRISB = 0xFF;
  1916  006ED8  6893               	setf	147,c	;volatile
  1917                           
  1918                           ;main.c: 335: ANSEL = 0;
  1919  006EDA  0E00               	movlw	0
  1920  006EDC  6E7E               	movwf	126,c	;volatile
  1921                           
  1922                           ;main.c: 336: TRISA = 0;
  1923  006EDE  0E00               	movlw	0
  1924  006EE0  6E92               	movwf	146,c	;volatile
  1925  006EE2                     
  1926                           ;main.c: 340: T1CONbits.TMR1ON = 1;
  1927  006EE2  80CD               	bsf	205,0,c	;volatile
  1928  006EE4                     
  1929                           ;main.c: 341: srand(TMR1);
  1930  006EE4  CFCE F001          	movff	4046,srand@x	;volatile
  1931  006EE8  CFCF F002          	movff	4047,srand@x+1	;volatile
  1932  006EEC  EC05  F037         	call	_srand	;wreg free
  1933  006EF0                     
  1934                           ;main.c: 344: ANSELbits.ANS7 = 1;
  1935  006EF0  8E7E               	bsf	126,7,c	;volatile
  1936  006EF2                     
  1937                           ;main.c: 346: ADCON0bits.ADON = 1;
  1938  006EF2  80C2               	bsf	194,0,c	;volatile
  1939  006EF4                     
  1940                           ;main.c: 347: ADCON1 = 0;
  1941  006EF4  0E00               	movlw	0
  1942  006EF6  6EC1               	movwf	193,c	;volatile
  1943  006EF8                     
  1944                           ;main.c: 349: ADCON2bits.ADFM = 0;
  1945  006EF8  9EC0               	bcf	192,7,c	;volatile
  1946  006EFA                     
  1947                           ;main.c: 350: ADCON2bits.ACQT = 0;
  1948  006EFA  0EC7               	movlw	-57
  1949  006EFC  16C0               	andwf	192,f,c	;volatile
  1950  006EFE                     
  1951                           ;main.c: 351: ADCON2bits.ADCS = 0;
  1952  006EFE  0EF8               	movlw	-8
  1953  006F00  16C0               	andwf	192,f,c	;volatile
  1954  006F02  0012               	return		;funcret
  1955  006F04                     __end_of_initialisation:
  1956                           	opt callstack 0
  1957                           
  1958 ;; *************** function _srand *****************
  1959 ;; Defined at:
  1960 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  x               2    0[COMRAM] unsigned int 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;		None
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      void 
  1967 ;; Registers used:
  1968 ;;		status,2
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1974 ;;      Params:         2       0       0       0       0       0       0
  1975 ;;      Locals:         0       0       0       0       0       0       0
  1976 ;;      Temps:          0       0       0       0       0       0       0
  1977 ;;      Totals:         2       0       0       0       0       0       0
  1978 ;;Total ram usage:        2 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; This function calls:
  1981 ;;		Nothing
  1982 ;; This function is called by:
  1983 ;;		_initialisation
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text12
  1988  006E0A                     __ptext12:
  1989                           	opt callstack 0
  1990  006E0A                     _srand:
  1991                           	opt callstack 29
  1992  006E0A  C001  F027         	movff	srand@x,_randx
  1993  006E0E  C002  F028         	movff	srand@x+1,_randx+1
  1994  006E12  6A29               	clrf	(_randx+2)^0,c
  1995  006E14  6A2A               	clrf	(_randx+3)^0,c
  1996  006E16  0012               	return		;funcret
  1997  006E18                     __end_of_srand:
  1998                           	opt callstack 0
  1999                           
  2000 ;; *************** function _initTabVue *****************
  2001 ;; Defined at:
  2002 ;;		line 112 in file "main.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  j               2    8[COMRAM] int 
  2007 ;;  i               2   10[COMRAM] int 
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      void 
  2010 ;; Registers used:
  2011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2017 ;;      Params:         0       0       0       0       0       0       0
  2018 ;;      Locals:         4       0       0       0       0       0       0
  2019 ;;      Temps:          2       0       0       0       0       0       0
  2020 ;;      Totals:         6       0       0       0       0       0       0
  2021 ;;Total ram usage:        6 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; Hardware stack levels required when called:    1
  2024 ;; This function calls:
  2025 ;;		___wmul
  2026 ;; This function is called by:
  2027 ;;		_main
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           	psect	text13
  2032  007402                     __ptext13:
  2033                           	opt callstack 0
  2034  007402                     _initTabVue:
  2035                           	opt callstack 29
  2036  007402                     
  2037                           ;main.c: 113: for(int i = 0; i<4; i++){
  2038  007402  0E00               	movlw	0
  2039  007404  6E0C               	movwf	(initTabVue@i+1)^0,c
  2040  007406  0E00               	movlw	0
  2041  007408  6E0B               	movwf	initTabVue@i^0,c
  2042  00740A                     l2028:
  2043                           
  2044                           ;main.c: 114: for(int j = 0; j<20; j++){
  2045  00740A  0E00               	movlw	0
  2046  00740C  6E0A               	movwf	(initTabVue@j+1)^0,c
  2047  00740E  0E00               	movlw	0
  2048  007410  6E09               	movwf	initTabVue@j^0,c
  2049  007412                     l2034:
  2050                           
  2051                           ;main.c: 115: m_tabVue[i][j] = 2;
  2052  007412  C00B  F001         	movff	initTabVue@i,___wmul@multiplier
  2053  007416  C00C  F002         	movff	initTabVue@i+1,___wmul@multiplier+1
  2054  00741A  0E00               	movlw	0
  2055  00741C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2056  00741E  0E15               	movlw	21
  2057  007420  6E03               	movwf	___wmul@multiplicand^0,c
  2058  007422  EC16  F037         	call	___wmul	;wreg free
  2059  007426  0E00               	movlw	low _m_tabVue
  2060  007428  6E07               	movwf	??_initTabVue^0,c
  2061  00742A  0E01               	movlw	high _m_tabVue
  2062  00742C  6E08               	movwf	(??_initTabVue+1)^0,c
  2063  00742E  5001               	movf	?___wmul^0,w,c
  2064  007430  2607               	addwf	??_initTabVue^0,f,c
  2065  007432  5002               	movf	(?___wmul+1)^0,w,c
  2066  007434  2208               	addwfc	(??_initTabVue+1)^0,f,c
  2067  007436  5009               	movf	initTabVue@j^0,w,c
  2068  007438  2407               	addwf	??_initTabVue^0,w,c
  2069  00743A  6ED9               	movwf	fsr2l,c
  2070  00743C  500A               	movf	(initTabVue@j+1)^0,w,c
  2071  00743E  2008               	addwfc	(??_initTabVue+1)^0,w,c
  2072  007440  6EDA               	movwf	fsr2h,c
  2073  007442  0E02               	movlw	2
  2074  007444  6EDF               	movwf	indf2,c
  2075  007446  4A09               	infsnz	initTabVue@j^0,f,c
  2076  007448  2A0A               	incf	(initTabVue@j+1)^0,f,c
  2077  00744A  BE0A               	btfsc	(initTabVue@j+1)^0,7,c
  2078  00744C  EF31  F03A         	goto	u871
  2079  007450  500A               	movf	(initTabVue@j+1)^0,w,c
  2080  007452  E109               	bnz	u870
  2081  007454  0E14               	movlw	20
  2082  007456  5C09               	subwf	initTabVue@j^0,w,c
  2083  007458  A0D8               	btfss	status,0,c
  2084  00745A  EF31  F03A         	goto	u871
  2085  00745E  EF33  F03A         	goto	u870
  2086  007462                     u871:
  2087  007462  EF09  F03A         	goto	l2034
  2088  007466                     u870:
  2089  007466                     
  2090                           ;main.c: 116: };main.c: 117: m_tabVue[i][20] = '\0';
  2091  007466  C00B  F001         	movff	initTabVue@i,___wmul@multiplier
  2092  00746A  C00C  F002         	movff	initTabVue@i+1,___wmul@multiplier+1
  2093  00746E  0E00               	movlw	0
  2094  007470  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2095  007472  0E15               	movlw	21
  2096  007474  6E03               	movwf	___wmul@multiplicand^0,c
  2097  007476  EC16  F037         	call	___wmul	;wreg free
  2098  00747A  0E14               	movlw	low (_m_tabVue+20)
  2099  00747C  2401               	addwf	?___wmul^0,w,c
  2100  00747E  6ED9               	movwf	fsr2l,c
  2101  007480  0E01               	movlw	high (_m_tabVue+20)
  2102  007482  2002               	addwfc	(?___wmul+1)^0,w,c
  2103  007484  6EDA               	movwf	fsr2h,c
  2104  007486  0E00               	movlw	0
  2105  007488  6EDF               	movwf	indf2,c
  2106  00748A  4A0B               	infsnz	initTabVue@i^0,f,c
  2107  00748C  2A0C               	incf	(initTabVue@i+1)^0,f,c
  2108  00748E  BE0C               	btfsc	(initTabVue@i+1)^0,7,c
  2109  007490  EF53  F03A         	goto	u881
  2110  007494  500C               	movf	(initTabVue@i+1)^0,w,c
  2111  007496  E109               	bnz	u880
  2112  007498  0E04               	movlw	4
  2113  00749A  5C0B               	subwf	initTabVue@i^0,w,c
  2114  00749C  A0D8               	btfss	status,0,c
  2115  00749E  EF53  F03A         	goto	u881
  2116  0074A2  EF55  F03A         	goto	u880
  2117  0074A6                     u881:
  2118  0074A6  EF05  F03A         	goto	l2028
  2119  0074AA                     u880:
  2120  0074AA  0012               	return		;funcret
  2121  0074AC                     __end_of_initTabVue:
  2122                           	opt callstack 0
  2123                           
  2124 ;; *************** function _gagne *****************
  2125 ;; Defined at:
  2126 ;;		line 291 in file "main.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  pMines          2    6[COMRAM] PTR int 
  2129 ;;		 -> main@nbMines(2), 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  j               2   15[COMRAM] int 
  2132 ;;  i               2   13[COMRAM] int 
  2133 ;;  ttl             1   12[COMRAM] unsigned char 
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      unsigned char 
  2136 ;; Registers used:
  2137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2143 ;;      Params:         2       0       0       0       0       0       0
  2144 ;;      Locals:         5       0       0       0       0       0       0
  2145 ;;      Temps:          4       0       0       0       0       0       0
  2146 ;;      Totals:        11       0       0       0       0       0       0
  2147 ;;Total ram usage:       11 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    1
  2150 ;; This function calls:
  2151 ;;		___wmul
  2152 ;; This function is called by:
  2153 ;;		_main
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text14
  2158  00755C                     __ptext14:
  2159                           	opt callstack 0
  2160  00755C                     _gagne:
  2161                           	opt callstack 29
  2162  00755C                     
  2163                           ;main.c: 292: char ttl = 0;
  2164  00755C  0E00               	movlw	0
  2165  00755E  6E0D               	movwf	gagne@ttl^0,c
  2166                           
  2167                           ;main.c: 293: for(int i = 0; i<4; i++){
  2168  007560  0E00               	movlw	0
  2169  007562  6E0F               	movwf	(gagne@i+1)^0,c
  2170  007564  0E00               	movlw	0
  2171  007566  6E0E               	movwf	gagne@i^0,c
  2172  007568                     l2182:
  2173                           
  2174                           ;main.c: 294: for(int j = 0; j<20; j++){
  2175  007568  0E00               	movlw	0
  2176  00756A  6E11               	movwf	(gagne@j+1)^0,c
  2177  00756C  0E00               	movlw	0
  2178  00756E  6E10               	movwf	gagne@j^0,c
  2179  007570                     l2188:
  2180                           
  2181                           ;main.c: 295: if(m_tabVue[i][j] == 2){
  2182  007570  C00E  F001         	movff	gagne@i,___wmul@multiplier
  2183  007574  C00F  F002         	movff	gagne@i+1,___wmul@multiplier+1
  2184  007578  0E00               	movlw	0
  2185  00757A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2186  00757C  0E15               	movlw	21
  2187  00757E  6E03               	movwf	___wmul@multiplicand^0,c
  2188  007580  EC16  F037         	call	___wmul	;wreg free
  2189  007584  0E00               	movlw	low _m_tabVue
  2190  007586  6E09               	movwf	??_gagne^0,c
  2191  007588  0E01               	movlw	high _m_tabVue
  2192  00758A  6E0A               	movwf	(??_gagne+1)^0,c
  2193  00758C  5001               	movf	?___wmul^0,w,c
  2194  00758E  2609               	addwf	??_gagne^0,f,c
  2195  007590  5002               	movf	(?___wmul+1)^0,w,c
  2196  007592  220A               	addwfc	(??_gagne+1)^0,f,c
  2197  007594  5010               	movf	gagne@j^0,w,c
  2198  007596  2409               	addwf	??_gagne^0,w,c
  2199  007598  6ED9               	movwf	fsr2l,c
  2200  00759A  5011               	movf	(gagne@j+1)^0,w,c
  2201  00759C  200A               	addwfc	(??_gagne+1)^0,w,c
  2202  00759E  6EDA               	movwf	fsr2h,c
  2203  0075A0  0E02               	movlw	2
  2204  0075A2  18DE               	xorwf	postinc2,w,c
  2205  0075A4  A4D8               	btfss	status,2,c
  2206  0075A6  EFD7  F03A         	goto	u1081
  2207  0075AA  EFD9  F03A         	goto	u1080
  2208  0075AE                     u1081:
  2209  0075AE  EFDA  F03A         	goto	l173
  2210  0075B2                     u1080:
  2211  0075B2                     
  2212                           ;main.c: 296: ttl++;
  2213  0075B2  2A0D               	incf	gagne@ttl^0,f,c
  2214  0075B4                     l173:
  2215  0075B4  4A10               	infsnz	gagne@j^0,f,c
  2216  0075B6  2A11               	incf	(gagne@j+1)^0,f,c
  2217  0075B8  BE11               	btfsc	(gagne@j+1)^0,7,c
  2218  0075BA  EFE8  F03A         	goto	u1091
  2219  0075BE  5011               	movf	(gagne@j+1)^0,w,c
  2220  0075C0  E109               	bnz	u1090
  2221  0075C2  0E14               	movlw	20
  2222  0075C4  5C10               	subwf	gagne@j^0,w,c
  2223  0075C6  A0D8               	btfss	status,0,c
  2224  0075C8  EFE8  F03A         	goto	u1091
  2225  0075CC  EFEA  F03A         	goto	u1090
  2226  0075D0                     u1091:
  2227  0075D0  EFB8  F03A         	goto	l2188
  2228  0075D4                     u1090:
  2229  0075D4  4A0E               	infsnz	gagne@i^0,f,c
  2230  0075D6  2A0F               	incf	(gagne@i+1)^0,f,c
  2231  0075D8  BE0F               	btfsc	(gagne@i+1)^0,7,c
  2232  0075DA  EFF8  F03A         	goto	u1101
  2233  0075DE  500F               	movf	(gagne@i+1)^0,w,c
  2234  0075E0  E109               	bnz	u1100
  2235  0075E2  0E04               	movlw	4
  2236  0075E4  5C0E               	subwf	gagne@i^0,w,c
  2237  0075E6  A0D8               	btfss	status,0,c
  2238  0075E8  EFF8  F03A         	goto	u1101
  2239  0075EC  EFFA  F03A         	goto	u1100
  2240  0075F0                     u1101:
  2241  0075F0  EFB4  F03A         	goto	l2182
  2242  0075F4                     u1100:
  2243  0075F4                     
  2244                           ;main.c: 297: };main.c: 298: };main.c: 299: };main.c: 300: if(ttl == (*pMines)){
  2245  0075F4  C007  FFD9         	movff	gagne@pMines,fsr2l
  2246  0075F8  C008  FFDA         	movff	gagne@pMines+1,fsr2h
  2247  0075FC  500D               	movf	gagne@ttl^0,w,c
  2248  0075FE  6E0B               	movwf	(??_gagne+2)^0,c
  2249  007600  6A0C               	clrf	(??_gagne+3)^0,c
  2250  007602  50DE               	movf	postinc2,w,c
  2251  007604  180B               	xorwf	(??_gagne+2)^0,w,c
  2252  007606  E107               	bnz	u1111
  2253  007608  50DE               	movf	postinc2,w,c
  2254  00760A  180C               	xorwf	(??_gagne+3)^0,w,c
  2255  00760C  A4D8               	btfss	status,2,c
  2256  00760E  EF0B  F03B         	goto	u1111
  2257  007612  EF0D  F03B         	goto	u1110
  2258  007616                     u1111:
  2259  007616  EF17  F03B         	goto	l2206
  2260  00761A                     u1110:
  2261  00761A                     
  2262                           ;main.c: 301: (*pMines)++;
  2263  00761A  C007  FFD9         	movff	gagne@pMines,fsr2l
  2264  00761E  C008  FFDA         	movff	gagne@pMines+1,fsr2h
  2265  007622  2ADE               	incf	postinc2,f,c
  2266  007624  0E00               	movlw	0
  2267  007626  22DD               	addwfc	postdec2,f,c
  2268  007628                     
  2269                           ;main.c: 302: return 1;
  2270  007628  0E01               	movlw	1
  2271  00762A  EF18  F03B         	goto	l175
  2272  00762E                     l2206:
  2273                           
  2274                           ;main.c: 303: };main.c: 304: return 0;
  2275  00762E  0E00               	movlw	0
  2276  007630                     l175:
  2277  007630  0012               	return		;funcret
  2278  007632                     __end_of_gagne:
  2279                           	opt callstack 0
  2280                           
  2281 ;; *************** function _deplace *****************
  2282 ;; Defined at:
  2283 ;;		line 201 in file "main.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  px              2    5[COMRAM] PTR unsigned char 
  2286 ;;		 -> main@x(1), 
  2287 ;;  py              2    7[COMRAM] PTR unsigned char 
  2288 ;;		 -> main@y(1), 
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;  aY              2   12[COMRAM] int 
  2291 ;;  aX              2   10[COMRAM] int 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      void 
  2294 ;; Registers used:
  2295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2301 ;;      Params:         4       0       0       0       0       0       0
  2302 ;;      Locals:         4       0       0       0       0       0       0
  2303 ;;      Temps:          1       0       0       0       0       0       0
  2304 ;;      Totals:         9       0       0       0       0       0       0
  2305 ;;Total ram usage:        9 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:    4
  2308 ;; This function calls:
  2309 ;;		_getAnalog
  2310 ;;		_lcd_gotoXY
  2311 ;; This function is called by:
  2312 ;;		_main
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           	psect	text15
  2317  007B82                     __ptext15:
  2318                           	opt callstack 0
  2319  007B82                     _deplace:
  2320                           	opt callstack 26
  2321  007B82                     
  2322                           ;main.c: 202: int aX = getAnalog(7);
  2323  007B82  0E07               	movlw	7
  2324  007B84  EC29  F037         	call	_getAnalog
  2325  007B88  6E0A               	movwf	??_deplace^0,c
  2326  007B8A  500A               	movf	??_deplace^0,w,c
  2327  007B8C  6E0B               	movwf	deplace@aX^0,c
  2328  007B8E  6A0C               	clrf	(deplace@aX+1)^0,c
  2329                           
  2330                           ;main.c: 203: int aY = getAnalog(6);
  2331  007B90  0E06               	movlw	6
  2332  007B92  EC29  F037         	call	_getAnalog
  2333  007B96  6E0A               	movwf	??_deplace^0,c
  2334  007B98  500A               	movf	??_deplace^0,w,c
  2335  007B9A  6E0D               	movwf	deplace@aY^0,c
  2336  007B9C  6A0E               	clrf	(deplace@aY+1)^0,c
  2337  007B9E                     
  2338                           ;main.c: 205: if(aX < 100){
  2339  007B9E  BE0C               	btfsc	(deplace@aX+1)^0,7,c
  2340  007BA0  EFDD  F03D         	goto	u960
  2341  007BA4  500C               	movf	(deplace@aX+1)^0,w,c
  2342  007BA6  E107               	bnz	u961
  2343  007BA8  0E64               	movlw	100
  2344  007BAA  5C0B               	subwf	deplace@aX^0,w,c
  2345  007BAC  B0D8               	btfsc	status,0,c
  2346  007BAE  EFDB  F03D         	goto	u961
  2347  007BB2  EFDD  F03D         	goto	u960
  2348  007BB6                     u961:
  2349  007BB6  EF03  F03E         	goto	l2116
  2350  007BBA                     u960:
  2351  007BBA                     
  2352                           ;main.c: 206: (*px)--;
  2353  007BBA  C006  FFD9         	movff	deplace@px,fsr2l
  2354  007BBE  C007  FFDA         	movff	deplace@px+1,fsr2h
  2355  007BC2  06DF               	decf	indf2,f,c
  2356  007BC4                     
  2357                           ;main.c: 207: if(*px <= 0){
  2358  007BC4  C006  FFD9         	movff	deplace@px,fsr2l
  2359  007BC8  C007  FFDA         	movff	deplace@px+1,fsr2h
  2360  007BCC  50DF               	movf	indf2,w,c
  2361  007BCE  A4D8               	btfss	status,2,c
  2362  007BD0  EFEC  F03D         	goto	u971
  2363  007BD4  EFEE  F03D         	goto	u970
  2364  007BD8                     u971:
  2365  007BD8  EFF4  F03D         	goto	l2114
  2366  007BDC                     u970:
  2367  007BDC                     
  2368                           ;main.c: 208: *px = 20;
  2369  007BDC  C006  FFD9         	movff	deplace@px,fsr2l
  2370  007BE0  C007  FFDA         	movff	deplace@px+1,fsr2h
  2371  007BE4  0E14               	movlw	20
  2372  007BE6  6EDF               	movwf	indf2,c
  2373  007BE8                     l2114:
  2374                           
  2375                           ;main.c: 209: };main.c: 210: lcd_gotoXY((*px), (*py));
  2376  007BE8  C008  FFD9         	movff	deplace@py,fsr2l
  2377  007BEC  C009  FFDA         	movff	deplace@py+1,fsr2h
  2378  007BF0  50DF               	movf	indf2,w,c
  2379  007BF2  6E04               	movwf	lcd_gotoXY@y^0,c
  2380  007BF4  C006  FFD9         	movff	deplace@px,fsr2l
  2381  007BF8  C007  FFDA         	movff	deplace@px+1,fsr2h
  2382  007BFC  50DF               	movf	indf2,w,c
  2383  007BFE  EC49  F039         	call	_lcd_gotoXY
  2384                           
  2385                           ;main.c: 211: }else if(aX > 150){
  2386  007C02  EF9F  F03E         	goto	l149
  2387  007C06                     l2116:
  2388  007C06  BE0C               	btfsc	(deplace@aX+1)^0,7,c
  2389  007C08  EF0F  F03E         	goto	u981
  2390  007C0C  500C               	movf	(deplace@aX+1)^0,w,c
  2391  007C0E  E109               	bnz	u980
  2392  007C10  0E97               	movlw	151
  2393  007C12  5C0B               	subwf	deplace@aX^0,w,c
  2394  007C14  A0D8               	btfss	status,0,c
  2395  007C16  EF0F  F03E         	goto	u981
  2396  007C1A  EF11  F03E         	goto	u980
  2397  007C1E                     u981:
  2398  007C1E  EF37  F03E         	goto	l2126
  2399  007C22                     u980:
  2400  007C22                     
  2401                           ;main.c: 212: (*px)++;
  2402  007C22  C006  FFD9         	movff	deplace@px,fsr2l
  2403  007C26  C007  FFDA         	movff	deplace@px+1,fsr2h
  2404  007C2A  2ADF               	incf	indf2,f,c
  2405  007C2C                     
  2406                           ;main.c: 213: if(*px > 20){
  2407  007C2C  C006  FFD9         	movff	deplace@px,fsr2l
  2408  007C30  C007  FFDA         	movff	deplace@px+1,fsr2h
  2409  007C34  0E14               	movlw	20
  2410  007C36  64DF               	cpfsgt	indf2,c
  2411  007C38  EF20  F03E         	goto	u991
  2412  007C3C  EF22  F03E         	goto	u990
  2413  007C40                     u991:
  2414  007C40  EF28  F03E         	goto	l2124
  2415  007C44                     u990:
  2416  007C44                     
  2417                           ;main.c: 214: *px = 1;
  2418  007C44  C006  FFD9         	movff	deplace@px,fsr2l
  2419  007C48  C007  FFDA         	movff	deplace@px+1,fsr2h
  2420  007C4C  0E01               	movlw	1
  2421  007C4E  6EDF               	movwf	indf2,c
  2422  007C50                     l2124:
  2423                           
  2424                           ;main.c: 215: };main.c: 216: lcd_gotoXY((*px), (*py));
  2425  007C50  C008  FFD9         	movff	deplace@py,fsr2l
  2426  007C54  C009  FFDA         	movff	deplace@py+1,fsr2h
  2427  007C58  50DF               	movf	indf2,w,c
  2428  007C5A  6E04               	movwf	lcd_gotoXY@y^0,c
  2429  007C5C  C006  FFD9         	movff	deplace@px,fsr2l
  2430  007C60  C007  FFDA         	movff	deplace@px+1,fsr2h
  2431  007C64  50DF               	movf	indf2,w,c
  2432  007C66  EC49  F039         	call	_lcd_gotoXY
  2433                           
  2434                           ;main.c: 217: }else if(aY < 100){
  2435  007C6A  EF9F  F03E         	goto	l149
  2436  007C6E                     l2126:
  2437  007C6E  BE0E               	btfsc	(deplace@aY+1)^0,7,c
  2438  007C70  EF45  F03E         	goto	u1000
  2439  007C74  500E               	movf	(deplace@aY+1)^0,w,c
  2440  007C76  E107               	bnz	u1001
  2441  007C78  0E64               	movlw	100
  2442  007C7A  5C0D               	subwf	deplace@aY^0,w,c
  2443  007C7C  B0D8               	btfsc	status,0,c
  2444  007C7E  EF43  F03E         	goto	u1001
  2445  007C82  EF45  F03E         	goto	u1000
  2446  007C86                     u1001:
  2447  007C86  EF6B  F03E         	goto	l2136
  2448  007C8A                     u1000:
  2449  007C8A                     
  2450                           ;main.c: 218: (*py)++;
  2451  007C8A  C008  FFD9         	movff	deplace@py,fsr2l
  2452  007C8E  C009  FFDA         	movff	deplace@py+1,fsr2h
  2453  007C92  2ADF               	incf	indf2,f,c
  2454  007C94                     
  2455                           ;main.c: 219: if(*py > 4){
  2456  007C94  C008  FFD9         	movff	deplace@py,fsr2l
  2457  007C98  C009  FFDA         	movff	deplace@py+1,fsr2h
  2458  007C9C  0E04               	movlw	4
  2459  007C9E  64DF               	cpfsgt	indf2,c
  2460  007CA0  EF54  F03E         	goto	u1011
  2461  007CA4  EF56  F03E         	goto	u1010
  2462  007CA8                     u1011:
  2463  007CA8  EF5C  F03E         	goto	l2134
  2464  007CAC                     u1010:
  2465  007CAC                     
  2466                           ;main.c: 220: *py = 1;
  2467  007CAC  C008  FFD9         	movff	deplace@py,fsr2l
  2468  007CB0  C009  FFDA         	movff	deplace@py+1,fsr2h
  2469  007CB4  0E01               	movlw	1
  2470  007CB6  6EDF               	movwf	indf2,c
  2471  007CB8                     l2134:
  2472                           
  2473                           ;main.c: 221: };main.c: 222: lcd_gotoXY((*px), (*py));
  2474  007CB8  C008  FFD9         	movff	deplace@py,fsr2l
  2475  007CBC  C009  FFDA         	movff	deplace@py+1,fsr2h
  2476  007CC0  50DF               	movf	indf2,w,c
  2477  007CC2  6E04               	movwf	lcd_gotoXY@y^0,c
  2478  007CC4  C006  FFD9         	movff	deplace@px,fsr2l
  2479  007CC8  C007  FFDA         	movff	deplace@px+1,fsr2h
  2480  007CCC  50DF               	movf	indf2,w,c
  2481  007CCE  EC49  F039         	call	_lcd_gotoXY
  2482                           
  2483                           ;main.c: 223: }else if(aY > 150){
  2484  007CD2  EF9F  F03E         	goto	l149
  2485  007CD6                     l2136:
  2486  007CD6  BE0E               	btfsc	(deplace@aY+1)^0,7,c
  2487  007CD8  EF77  F03E         	goto	u1021
  2488  007CDC  500E               	movf	(deplace@aY+1)^0,w,c
  2489  007CDE  E109               	bnz	u1020
  2490  007CE0  0E97               	movlw	151
  2491  007CE2  5C0D               	subwf	deplace@aY^0,w,c
  2492  007CE4  A0D8               	btfss	status,0,c
  2493  007CE6  EF77  F03E         	goto	u1021
  2494  007CEA  EF79  F03E         	goto	u1020
  2495  007CEE                     u1021:
  2496  007CEE  EF9F  F03E         	goto	l143
  2497  007CF2                     u1020:
  2498  007CF2                     
  2499                           ;main.c: 224: (*py)--;
  2500  007CF2  C008  FFD9         	movff	deplace@py,fsr2l
  2501  007CF6  C009  FFDA         	movff	deplace@py+1,fsr2h
  2502  007CFA  06DF               	decf	indf2,f,c
  2503  007CFC                     
  2504                           ;main.c: 225: if(*py <= 0){
  2505  007CFC  C008  FFD9         	movff	deplace@py,fsr2l
  2506  007D00  C009  FFDA         	movff	deplace@py+1,fsr2h
  2507  007D04  50DF               	movf	indf2,w,c
  2508  007D06  A4D8               	btfss	status,2,c
  2509  007D08  EF88  F03E         	goto	u1031
  2510  007D0C  EF8A  F03E         	goto	u1030
  2511  007D10                     u1031:
  2512  007D10  EF90  F03E         	goto	l2144
  2513  007D14                     u1030:
  2514  007D14                     
  2515                           ;main.c: 226: *py = 4;
  2516  007D14  C008  FFD9         	movff	deplace@py,fsr2l
  2517  007D18  C009  FFDA         	movff	deplace@py+1,fsr2h
  2518  007D1C  0E04               	movlw	4
  2519  007D1E  6EDF               	movwf	indf2,c
  2520  007D20                     l2144:
  2521                           
  2522                           ;main.c: 228: };main.c: 229: lcd_gotoXY((*px), (*py));
  2523  007D20  C008  FFD9         	movff	deplace@py,fsr2l
  2524  007D24  C009  FFDA         	movff	deplace@py+1,fsr2h
  2525  007D28  50DF               	movf	indf2,w,c
  2526  007D2A  6E04               	movwf	lcd_gotoXY@y^0,c
  2527  007D2C  C006  FFD9         	movff	deplace@px,fsr2l
  2528  007D30  C007  FFDA         	movff	deplace@px+1,fsr2h
  2529  007D34  50DF               	movf	indf2,w,c
  2530  007D36  EC49  F039         	call	_lcd_gotoXY
  2531  007D3A  EF9F  F03E         	goto	l149
  2532  007D3E                     l143:
  2533  007D3E                     l149:
  2534  007D3E  0012               	return		;funcret
  2535  007D40                     __end_of_deplace:
  2536                           	opt callstack 0
  2537                           
  2538 ;; *************** function _getAnalog *****************
  2539 ;; Defined at:
  2540 ;;		line 312 in file "main.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  canal           1    wreg     unsigned char 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;  canal           1    1[COMRAM] unsigned char 
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      unsigned char 
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2554 ;;      Params:         0       0       0       0       0       0       0
  2555 ;;      Locals:         1       0       0       0       0       0       0
  2556 ;;      Temps:          1       0       0       0       0       0       0
  2557 ;;      Totals:         2       0       0       0       0       0       0
  2558 ;;Total ram usage:        2 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_deplace
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text16
  2568  006E52                     __ptext16:
  2569                           	opt callstack 0
  2570  006E52                     _getAnalog:
  2571                           	opt callstack 29
  2572                           
  2573                           ;incstack = 0
  2574                           ;getAnalog@canal stored from wreg
  2575  006E52  6E02               	movwf	getAnalog@canal^0,c
  2576  006E54                     
  2577                           ;main.c: 314: ADCON0bits.CHS = canal;
  2578  006E54  C002  F001         	movff	getAnalog@canal,??_getAnalog
  2579  006E58  4601               	rlncf	??_getAnalog^0,f,c
  2580  006E5A  4601               	rlncf	??_getAnalog^0,f,c
  2581  006E5C  50C2               	movf	194,w,c	;volatile
  2582  006E5E  1801               	xorwf	??_getAnalog^0,w,c
  2583  006E60  0BC3               	andlw	-61
  2584  006E62  1801               	xorwf	??_getAnalog^0,w,c
  2585  006E64  6EC2               	movwf	194,c	;volatile
  2586  006E66                     
  2587                           ;main.c: 316: ADCON0bits.GO_DONE = 1;
  2588  006E66  82C2               	bsf	194,1,c	;volatile
  2589  006E68                     l178:
  2590  006E68  B2C2               	btfsc	194,1,c	;volatile
  2591  006E6A  EF39  F037         	goto	u181
  2592  006E6E  EF3B  F037         	goto	u180
  2593  006E72                     u181:
  2594  006E72  EF34  F037         	goto	l178
  2595  006E76                     u180:
  2596  006E76                     
  2597                           ;main.c: 319: return ADRESH;
  2598  006E76  50C4               	movf	196,w,c	;volatile
  2599  006E78  0012               	return		;funcret
  2600  006E7A                     __end_of_getAnalog:
  2601                           	opt callstack 0
  2602                           
  2603 ;; *************** function _demine *****************
  2604 ;; Defined at:
  2605 ;;		line 243 in file "main.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;  x               1    wreg     unsigned char 
  2608 ;;  y               1   12[COMRAM] unsigned char 
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;  x               1   17[COMRAM] unsigned char 
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      unsigned char 
  2613 ;; Registers used:
  2614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2620 ;;      Params:         1       0       0       0       0       0       0
  2621 ;;      Locals:         1       0       0       0       0       0       0
  2622 ;;      Temps:          4       0       0       0       0       0       0
  2623 ;;      Totals:         6       0       0       0       0       0       0
  2624 ;;Total ram usage:        6 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; Hardware stack levels required when called:    6
  2627 ;; This function calls:
  2628 ;;		_afficheTabVue
  2629 ;;		_enleveTuilesAutour
  2630 ;;		_lcd_gotoXY
  2631 ;; This function is called by:
  2632 ;;		_main
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           	psect	text17
  2637  0077EE                     __ptext17:
  2638                           	opt callstack 0
  2639  0077EE                     _demine:
  2640                           	opt callstack 24
  2641                           
  2642                           ;incstack = 0
  2643                           ;demine@x stored from wreg
  2644  0077EE  6E12               	movwf	demine@x^0,c
  2645  0077F0                     l152:
  2646  0077F0  A281               	btfss	129,1,c	;volatile
  2647  0077F2  EFFD  F03B         	goto	u1041
  2648  0077F6  EFFF  F03B         	goto	u1040
  2649  0077FA                     u1041:
  2650  0077FA  EFF8  F03B         	goto	l152
  2651  0077FE                     u1040:
  2652  0077FE                     
  2653                           ;main.c: 247: x--;
  2654  0077FE  0612               	decf	demine@x^0,f,c
  2655  007800                     
  2656                           ;main.c: 248: y--;
  2657  007800  060D               	decf	demine@y^0,f,c
  2658  007802                     
  2659                           ;main.c: 250: if(m_tabMines[y][x] == 3){
  2660  007802  500D               	movf	demine@y^0,w,c
  2661  007804  0D15               	mullw	21
  2662  007806  0E60               	movlw	low _m_tabMines
  2663  007808  6E0E               	movwf	??_demine^0,c
  2664  00780A  0E00               	movlw	high _m_tabMines
  2665  00780C  6E0F               	movwf	(??_demine+1)^0,c
  2666  00780E  50F3               	movf	243,w,c
  2667  007810  260E               	addwf	??_demine^0,f,c
  2668  007812  50F4               	movf	244,w,c
  2669  007814  220F               	addwfc	(??_demine+1)^0,f,c
  2670  007816  5012               	movf	demine@x^0,w,c
  2671  007818  240E               	addwf	??_demine^0,w,c
  2672  00781A  6ED9               	movwf	fsr2l,c
  2673  00781C  0E00               	movlw	0
  2674  00781E  200F               	addwfc	(??_demine+1)^0,w,c
  2675  007820  6EDA               	movwf	fsr2h,c
  2676  007822  0E03               	movlw	3
  2677  007824  18DE               	xorwf	postinc2,w,c
  2678  007826  A4D8               	btfss	status,2,c
  2679  007828  EF18  F03C         	goto	u1051
  2680  00782C  EF1A  F03C         	goto	u1050
  2681  007830                     u1051:
  2682  007830  EF22  F03C         	goto	l2160
  2683  007834                     u1050:
  2684  007834                     
  2685                           ;main.c: 251: lcd_gotoXY(x+1, y+1);
  2686  007834  280D               	incf	demine@y^0,w,c
  2687  007836  6E04               	movwf	lcd_gotoXY@y^0,c
  2688  007838  2812               	incf	demine@x^0,w,c
  2689  00783A  EC49  F039         	call	_lcd_gotoXY
  2690  00783E                     
  2691                           ;main.c: 252: return 0;
  2692  00783E  0E00               	movlw	0
  2693  007840  EF84  F03C         	goto	l156
  2694  007844                     l2160:
  2695                           
  2696                           ;main.c: 253: };main.c: 254: if(m_tabMines[y][x] == 32){
  2697  007844  500D               	movf	demine@y^0,w,c
  2698  007846  0D15               	mullw	21
  2699  007848  0E60               	movlw	low _m_tabMines
  2700  00784A  6E0E               	movwf	??_demine^0,c
  2701  00784C  0E00               	movlw	high _m_tabMines
  2702  00784E  6E0F               	movwf	(??_demine+1)^0,c
  2703  007850  50F3               	movf	243,w,c
  2704  007852  260E               	addwf	??_demine^0,f,c
  2705  007854  50F4               	movf	244,w,c
  2706  007856  220F               	addwfc	(??_demine+1)^0,f,c
  2707  007858  5012               	movf	demine@x^0,w,c
  2708  00785A  240E               	addwf	??_demine^0,w,c
  2709  00785C  6ED9               	movwf	fsr2l,c
  2710  00785E  0E00               	movlw	0
  2711  007860  200F               	addwfc	(??_demine+1)^0,w,c
  2712  007862  6EDA               	movwf	fsr2h,c
  2713  007864  0E20               	movlw	32
  2714  007866  18DE               	xorwf	postinc2,w,c
  2715  007868  A4D8               	btfss	status,2,c
  2716  00786A  EF39  F03C         	goto	u1061
  2717  00786E  EF3B  F03C         	goto	u1060
  2718  007872                     u1061:
  2719  007872  EF42  F03C         	goto	l2164
  2720  007876                     u1060:
  2721  007876                     
  2722                           ;main.c: 255: enleveTuilesAutour(x, y);
  2723  007876  C00D  F001         	movff	demine@y,enleveTuilesAutour@y
  2724  00787A  5012               	movf	demine@x^0,w,c
  2725  00787C  ECB1  F039         	call	_enleveTuilesAutour
  2726                           
  2727                           ;main.c: 256: }else if(m_tabMines[y][x] >= 48){
  2728  007880  EF7C  F03C         	goto	l2168
  2729  007884                     l2164:
  2730  007884  500D               	movf	demine@y^0,w,c
  2731  007886  0D15               	mullw	21
  2732  007888  0E60               	movlw	low _m_tabMines
  2733  00788A  6E0E               	movwf	??_demine^0,c
  2734  00788C  0E00               	movlw	high _m_tabMines
  2735  00788E  6E0F               	movwf	(??_demine+1)^0,c
  2736  007890  50F3               	movf	243,w,c
  2737  007892  260E               	addwf	??_demine^0,f,c
  2738  007894  50F4               	movf	244,w,c
  2739  007896  220F               	addwfc	(??_demine+1)^0,f,c
  2740  007898  5012               	movf	demine@x^0,w,c
  2741  00789A  240E               	addwf	??_demine^0,w,c
  2742  00789C  6ED9               	movwf	fsr2l,c
  2743  00789E  0E00               	movlw	0
  2744  0078A0  200F               	addwfc	(??_demine+1)^0,w,c
  2745  0078A2  6EDA               	movwf	fsr2h,c
  2746  0078A4  0E2F               	movlw	47
  2747  0078A6  64DF               	cpfsgt	indf2,c
  2748  0078A8  EF58  F03C         	goto	u1071
  2749  0078AC  EF5A  F03C         	goto	u1070
  2750  0078B0                     u1071:
  2751  0078B0  EF7C  F03C         	goto	l2168
  2752  0078B4                     u1070:
  2753  0078B4                     
  2754                           ;main.c: 257: m_tabVue[y][x] = m_tabMines[y][x];
  2755  0078B4  500D               	movf	demine@y^0,w,c
  2756  0078B6  0D15               	mullw	21
  2757  0078B8  0E60               	movlw	low _m_tabMines
  2758  0078BA  6E0E               	movwf	??_demine^0,c
  2759  0078BC  0E00               	movlw	high _m_tabMines
  2760  0078BE  6E0F               	movwf	(??_demine+1)^0,c
  2761  0078C0  50F3               	movf	243,w,c
  2762  0078C2  260E               	addwf	??_demine^0,f,c
  2763  0078C4  50F4               	movf	244,w,c
  2764  0078C6  220F               	addwfc	(??_demine+1)^0,f,c
  2765  0078C8  5012               	movf	demine@x^0,w,c
  2766  0078CA  240E               	addwf	??_demine^0,w,c
  2767  0078CC  6ED9               	movwf	fsr2l,c
  2768  0078CE  0E00               	movlw	0
  2769  0078D0  200F               	addwfc	(??_demine+1)^0,w,c
  2770  0078D2  6EDA               	movwf	fsr2h,c
  2771  0078D4  500D               	movf	demine@y^0,w,c
  2772  0078D6  0D15               	mullw	21
  2773  0078D8  0E00               	movlw	low _m_tabVue
  2774  0078DA  6E10               	movwf	(??_demine+2)^0,c
  2775  0078DC  0E01               	movlw	high _m_tabVue
  2776  0078DE  6E11               	movwf	(??_demine+3)^0,c
  2777  0078E0  50F3               	movf	243,w,c
  2778  0078E2  2610               	addwf	(??_demine+2)^0,f,c
  2779  0078E4  50F4               	movf	244,w,c
  2780  0078E6  2211               	addwfc	(??_demine+3)^0,f,c
  2781  0078E8  5012               	movf	demine@x^0,w,c
  2782  0078EA  2410               	addwf	(??_demine+2)^0,w,c
  2783  0078EC  6EE1               	movwf	fsr1l,c
  2784  0078EE  0E00               	movlw	0
  2785  0078F0  2011               	addwfc	(??_demine+3)^0,w,c
  2786  0078F2  6EE2               	movwf	fsr1h,c
  2787  0078F4  CFDF FFE7          	movff	indf2,indf1
  2788  0078F8                     l2168:
  2789                           
  2790                           ;main.c: 258: };main.c: 259: afficheTabVue();
  2791  0078F8  EC58  F038         	call	_afficheTabVue	;wreg free
  2792  0078FC                     
  2793                           ;main.c: 260: lcd_gotoXY(x+1, y+1);
  2794  0078FC  280D               	incf	demine@y^0,w,c
  2795  0078FE  6E04               	movwf	lcd_gotoXY@y^0,c
  2796  007900  2812               	incf	demine@x^0,w,c
  2797  007902  EC49  F039         	call	_lcd_gotoXY
  2798  007906                     
  2799                           ;main.c: 261: return 1;
  2800  007906  0E01               	movlw	1
  2801  007908                     l156:
  2802  007908  0012               	return		;funcret
  2803  00790A                     __end_of_demine:
  2804                           	opt callstack 0
  2805                           
  2806 ;; *************** function _enleveTuilesAutour *****************
  2807 ;; Defined at:
  2808 ;;		line 270 in file "main.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  x               1    wreg     unsigned char 
  2811 ;;  y               1    0[COMRAM] unsigned char 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  x               1    5[COMRAM] unsigned char 
  2814 ;;  j               2   10[COMRAM] int 
  2815 ;;  i               2    8[COMRAM] int 
  2816 ;;  ligne           1    7[COMRAM] unsigned char 
  2817 ;;  colonne         1    6[COMRAM] unsigned char 
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      void 
  2820 ;; Registers used:
  2821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2827 ;;      Params:         1       0       0       0       0       0       0
  2828 ;;      Locals:         7       0       0       0       0       0       0
  2829 ;;      Temps:          4       0       0       0       0       0       0
  2830 ;;      Totals:        12       0       0       0       0       0       0
  2831 ;;Total ram usage:       12 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; This function calls:
  2834 ;;		Nothing
  2835 ;; This function is called by:
  2836 ;;		_demine
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           	psect	text18
  2841  007362                     __ptext18:
  2842                           	opt callstack 0
  2843  007362                     _enleveTuilesAutour:
  2844                           	opt callstack 29
  2845                           
  2846                           ;incstack = 0
  2847                           ;enleveTuilesAutour@x stored from wreg
  2848  007362  6E06               	movwf	enleveTuilesAutour@x^0,c
  2849  007364                     
  2850                           ;main.c: 273: char ligne = 0;
  2851  007364  0E00               	movlw	0
  2852  007366  6E08               	movwf	enleveTuilesAutour@ligne^0,c
  2853  007368                     
  2854                           ;main.c: 275: for(int i = -1; i < 2; i++){
  2855  007368  6809               	setf	enleveTuilesAutour@i^0,c
  2856  00736A  680A               	setf	(enleveTuilesAutour@i+1)^0,c
  2857  00736C                     l162:
  2858                           
  2859                           ;main.c: 276: for(int j = -1; j < 2; j++){
  2860  00736C  680B               	setf	enleveTuilesAutour@j^0,c
  2861  00736E  680C               	setf	(enleveTuilesAutour@j+1)^0,c
  2862  007370                     l1888:
  2863                           
  2864                           ;main.c: 277: colonne = x + i;
  2865  007370  5006               	movf	enleveTuilesAutour@x^0,w,c
  2866  007372  2409               	addwf	enleveTuilesAutour@i^0,w,c
  2867  007374  6E07               	movwf	enleveTuilesAutour@colonne^0,c
  2868                           
  2869                           ;main.c: 278: ligne = y + j;
  2870  007376  5001               	movf	enleveTuilesAutour@y^0,w,c
  2871  007378  240B               	addwf	enleveTuilesAutour@j^0,w,c
  2872  00737A  6E08               	movwf	enleveTuilesAutour@ligne^0,c
  2873  00737C                     
  2874                           ;main.c: 279: m_tabVue[ligne][colonne] = m_tabMines[ligne][colonne];
  2875  00737C  5008               	movf	enleveTuilesAutour@ligne^0,w,c
  2876  00737E  0D15               	mullw	21
  2877  007380  0E60               	movlw	low _m_tabMines
  2878  007382  6E02               	movwf	??_enleveTuilesAutour^0,c
  2879  007384  0E00               	movlw	high _m_tabMines
  2880  007386  6E03               	movwf	(??_enleveTuilesAutour+1)^0,c
  2881  007388  50F3               	movf	243,w,c
  2882  00738A  2602               	addwf	??_enleveTuilesAutour^0,f,c
  2883  00738C  50F4               	movf	244,w,c
  2884  00738E  2203               	addwfc	(??_enleveTuilesAutour+1)^0,f,c
  2885  007390  5007               	movf	enleveTuilesAutour@colonne^0,w,c
  2886  007392  2402               	addwf	??_enleveTuilesAutour^0,w,c
  2887  007394  6ED9               	movwf	fsr2l,c
  2888  007396  0E00               	movlw	0
  2889  007398  2003               	addwfc	(??_enleveTuilesAutour+1)^0,w,c
  2890  00739A  6EDA               	movwf	fsr2h,c
  2891  00739C  5008               	movf	enleveTuilesAutour@ligne^0,w,c
  2892  00739E  0D15               	mullw	21
  2893  0073A0  0E00               	movlw	low _m_tabVue
  2894  0073A2  6E04               	movwf	(??_enleveTuilesAutour+2)^0,c
  2895  0073A4  0E01               	movlw	high _m_tabVue
  2896  0073A6  6E05               	movwf	(??_enleveTuilesAutour+3)^0,c
  2897  0073A8  50F3               	movf	243,w,c
  2898  0073AA  2604               	addwf	(??_enleveTuilesAutour+2)^0,f,c
  2899  0073AC  50F4               	movf	244,w,c
  2900  0073AE  2205               	addwfc	(??_enleveTuilesAutour+3)^0,f,c
  2901  0073B0  5007               	movf	enleveTuilesAutour@colonne^0,w,c
  2902  0073B2  2404               	addwf	(??_enleveTuilesAutour+2)^0,w,c
  2903  0073B4  6EE1               	movwf	fsr1l,c
  2904  0073B6  0E00               	movlw	0
  2905  0073B8  2005               	addwfc	(??_enleveTuilesAutour+3)^0,w,c
  2906  0073BA  6EE2               	movwf	fsr1h,c
  2907  0073BC  CFDF FFE7          	movff	indf2,indf1
  2908  0073C0  4A0B               	infsnz	enleveTuilesAutour@j^0,f,c
  2909  0073C2  2A0C               	incf	(enleveTuilesAutour@j+1)^0,f,c
  2910  0073C4  BE0C               	btfsc	(enleveTuilesAutour@j+1)^0,7,c
  2911  0073C6  EFEE  F039         	goto	u771
  2912  0073CA  500C               	movf	(enleveTuilesAutour@j+1)^0,w,c
  2913  0073CC  E109               	bnz	u770
  2914  0073CE  0E02               	movlw	2
  2915  0073D0  5C0B               	subwf	enleveTuilesAutour@j^0,w,c
  2916  0073D2  A0D8               	btfss	status,0,c
  2917  0073D4  EFEE  F039         	goto	u771
  2918  0073D8  EFF0  F039         	goto	u770
  2919  0073DC                     u771:
  2920  0073DC  EFB8  F039         	goto	l1888
  2921  0073E0                     u770:
  2922  0073E0  4A09               	infsnz	enleveTuilesAutour@i^0,f,c
  2923  0073E2  2A0A               	incf	(enleveTuilesAutour@i+1)^0,f,c
  2924  0073E4  BE0A               	btfsc	(enleveTuilesAutour@i+1)^0,7,c
  2925  0073E6  EFFE  F039         	goto	u781
  2926  0073EA  500A               	movf	(enleveTuilesAutour@i+1)^0,w,c
  2927  0073EC  E109               	bnz	u780
  2928  0073EE  0E02               	movlw	2
  2929  0073F0  5C09               	subwf	enleveTuilesAutour@i^0,w,c
  2930  0073F2  A0D8               	btfss	status,0,c
  2931  0073F4  EFFE  F039         	goto	u781
  2932  0073F8  EF00  F03A         	goto	u780
  2933  0073FC                     u781:
  2934  0073FC  EFB6  F039         	goto	l162
  2935  007400                     u780:
  2936  007400  0012               	return		;funcret
  2937  007402                     __end_of_enleveTuilesAutour:
  2938                           	opt callstack 0
  2939                           
  2940 ;; *************** function _afficheTabVue *****************
  2941 ;; Defined at:
  2942 ;;		line 89 in file "main.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;		None
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  i               2    9[COMRAM] int 
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      void 
  2949 ;; Registers used:
  2950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2956 ;;      Params:         0       0       0       0       0       0       0
  2957 ;;      Locals:         2       0       0       0       0       0       0
  2958 ;;      Temps:          0       0       0       0       0       0       0
  2959 ;;      Totals:         2       0       0       0       0       0       0
  2960 ;;Total ram usage:        2 bytes
  2961 ;; Hardware stack levels used:    1
  2962 ;; Hardware stack levels required when called:    5
  2963 ;; This function calls:
  2964 ;;		___wmul
  2965 ;;		_lcd_effaceAffichage
  2966 ;;		_lcd_gotoXY
  2967 ;;		_lcd_putMessage
  2968 ;; This function is called by:
  2969 ;;		_main
  2970 ;;		_demine
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           	psect	text19
  2975  0070B0                     __ptext19:
  2976                           	opt callstack 0
  2977  0070B0                     _afficheTabVue:
  2978                           	opt callstack 24
  2979  0070B0                     
  2980                           ;main.c: 90: lcd_effaceAffichage();
  2981  0070B0  ECFE  F036         	call	_lcd_effaceAffichage	;wreg free
  2982  0070B4                     
  2983                           ;main.c: 91: for(int i = 0; i < 4; i++){
  2984  0070B4  0E00               	movlw	0
  2985  0070B6  6E0B               	movwf	(afficheTabVue@i+1)^0,c
  2986  0070B8  0E00               	movlw	0
  2987  0070BA  6E0A               	movwf	afficheTabVue@i^0,c
  2988  0070BC                     l1816:
  2989                           
  2990                           ;main.c: 92: lcd_gotoXY(1, i+1);
  2991  0070BC  280A               	incf	afficheTabVue@i^0,w,c
  2992  0070BE  6E04               	movwf	lcd_gotoXY@y^0,c
  2993  0070C0  0E01               	movlw	1
  2994  0070C2  EC49  F039         	call	_lcd_gotoXY
  2995  0070C6                     
  2996                           ;main.c: 93: lcd_putMessage(m_tabVue[i]);
  2997  0070C6  C00A  F001         	movff	afficheTabVue@i,___wmul@multiplier
  2998  0070CA  C00B  F002         	movff	afficheTabVue@i+1,___wmul@multiplier+1
  2999  0070CE  0E00               	movlw	0
  3000  0070D0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3001  0070D2  0E15               	movlw	21
  3002  0070D4  6E03               	movwf	___wmul@multiplicand^0,c
  3003  0070D6  EC16  F037         	call	___wmul	;wreg free
  3004  0070DA  0E00               	movlw	low _m_tabVue
  3005  0070DC  2401               	addwf	?___wmul^0,w,c
  3006  0070DE  6E07               	movwf	lcd_putMessage@chaine^0,c
  3007  0070E0  0E01               	movlw	high _m_tabVue
  3008  0070E2  2002               	addwfc	(?___wmul+1)^0,w,c
  3009  0070E4  6E08               	movwf	(lcd_putMessage@chaine+1)^0,c
  3010  0070E6  EC9E  F037         	call	_lcd_putMessage	;wreg free
  3011  0070EA  4A0A               	infsnz	afficheTabVue@i^0,f,c
  3012  0070EC  2A0B               	incf	(afficheTabVue@i+1)^0,f,c
  3013  0070EE  BE0B               	btfsc	(afficheTabVue@i+1)^0,7,c
  3014  0070F0  EF83  F038         	goto	u661
  3015  0070F4  500B               	movf	(afficheTabVue@i+1)^0,w,c
  3016  0070F6  E109               	bnz	u660
  3017  0070F8  0E04               	movlw	4
  3018  0070FA  5C0A               	subwf	afficheTabVue@i^0,w,c
  3019  0070FC  A0D8               	btfss	status,0,c
  3020  0070FE  EF83  F038         	goto	u661
  3021  007102  EF85  F038         	goto	u660
  3022  007106                     u661:
  3023  007106  EF5E  F038         	goto	l1816
  3024  00710A                     u660:
  3025  00710A  0012               	return		;funcret
  3026  00710C                     __end_of_afficheTabVue:
  3027                           	opt callstack 0
  3028                           
  3029 ;; *************** function _afficheTabMine *****************
  3030 ;; Defined at:
  3031 ;;		line 97 in file "main.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;		None
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  i               2    9[COMRAM] int 
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      void 
  3038 ;; Registers used:
  3039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3045 ;;      Params:         0       0       0       0       0       0       0
  3046 ;;      Locals:         2       0       0       0       0       0       0
  3047 ;;      Temps:          0       0       0       0       0       0       0
  3048 ;;      Totals:         2       0       0       0       0       0       0
  3049 ;;Total ram usage:        2 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:    5
  3052 ;; This function calls:
  3053 ;;		___wmul
  3054 ;;		_lcd_effaceAffichage
  3055 ;;		_lcd_gotoXY
  3056 ;;		_lcd_putMessage
  3057 ;; This function is called by:
  3058 ;;		_main
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text20
  3063  007054                     __ptext20:
  3064                           	opt callstack 0
  3065  007054                     _afficheTabMine:
  3066                           	opt callstack 25
  3067  007054                     
  3068                           ;main.c: 98: lcd_effaceAffichage();
  3069  007054  ECFE  F036         	call	_lcd_effaceAffichage	;wreg free
  3070  007058                     
  3071                           ;main.c: 99: for(int i = 0; i < 4; i++){
  3072  007058  0E00               	movlw	0
  3073  00705A  6E0B               	movwf	(afficheTabMine@i+1)^0,c
  3074  00705C  0E00               	movlw	0
  3075  00705E  6E0A               	movwf	afficheTabMine@i^0,c
  3076  007060                     l2218:
  3077                           
  3078                           ;main.c: 100: lcd_gotoXY(1, i+1);
  3079  007060  280A               	incf	afficheTabMine@i^0,w,c
  3080  007062  6E04               	movwf	lcd_gotoXY@y^0,c
  3081  007064  0E01               	movlw	1
  3082  007066  EC49  F039         	call	_lcd_gotoXY
  3083  00706A                     
  3084                           ;main.c: 101: lcd_putMessage(m_tabMines[i]);
  3085  00706A  C00A  F001         	movff	afficheTabMine@i,___wmul@multiplier
  3086  00706E  C00B  F002         	movff	afficheTabMine@i+1,___wmul@multiplier+1
  3087  007072  0E00               	movlw	0
  3088  007074  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3089  007076  0E15               	movlw	21
  3090  007078  6E03               	movwf	___wmul@multiplicand^0,c
  3091  00707A  EC16  F037         	call	___wmul	;wreg free
  3092  00707E  0E60               	movlw	low _m_tabMines
  3093  007080  2401               	addwf	?___wmul^0,w,c
  3094  007082  6E07               	movwf	lcd_putMessage@chaine^0,c
  3095  007084  0E00               	movlw	high _m_tabMines
  3096  007086  2002               	addwfc	(?___wmul+1)^0,w,c
  3097  007088  6E08               	movwf	(lcd_putMessage@chaine+1)^0,c
  3098  00708A  EC9E  F037         	call	_lcd_putMessage	;wreg free
  3099  00708E  4A0A               	infsnz	afficheTabMine@i^0,f,c
  3100  007090  2A0B               	incf	(afficheTabMine@i+1)^0,f,c
  3101  007092  BE0B               	btfsc	(afficheTabMine@i+1)^0,7,c
  3102  007094  EF55  F038         	goto	u1121
  3103  007098  500B               	movf	(afficheTabMine@i+1)^0,w,c
  3104  00709A  E109               	bnz	u1120
  3105  00709C  0E04               	movlw	4
  3106  00709E  5C0A               	subwf	afficheTabMine@i^0,w,c
  3107  0070A0  A0D8               	btfss	status,0,c
  3108  0070A2  EF55  F038         	goto	u1121
  3109  0070A6  EF57  F038         	goto	u1120
  3110  0070AA                     u1121:
  3111  0070AA  EF30  F038         	goto	l2218
  3112  0070AE                     u1120:
  3113  0070AE  0012               	return		;funcret
  3114  0070B0                     __end_of_afficheTabMine:
  3115                           	opt callstack 0
  3116                           
  3117 ;; *************** function _lcd_putMessage *****************
  3118 ;; Defined at:
  3119 ;;		line 411 in file "Lcd4Lignes.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;  chaine          2    6[COMRAM] PTR const unsigned char 
  3122 ;;		 -> m_tabMines(84), m_tabVue(84), 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  j               1    8[COMRAM] unsigned char 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      void 
  3127 ;; Registers used:
  3128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3134 ;;      Params:         2       0       0       0       0       0       0
  3135 ;;      Locals:         1       0       0       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0
  3137 ;;      Totals:         3       0       0       0       0       0       0
  3138 ;;Total ram usage:        3 bytes
  3139 ;; Hardware stack levels used:    1
  3140 ;; Hardware stack levels required when called:    4
  3141 ;; This function calls:
  3142 ;;		_lcd_ecritChar
  3143 ;; This function is called by:
  3144 ;;		_afficheTabVue
  3145 ;;		_afficheTabMine
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text21
  3150  006F3C                     __ptext21:
  3151                           	opt callstack 0
  3152  006F3C                     _lcd_putMessage:
  3153                           	opt callstack 24
  3154  006F3C                     
  3155                           ;Lcd4Lignes.c: 413: unsigned char j;;Lcd4Lignes.c: 415: for(j = 0; chaine[j] != 0; j++)
  3156  006F3C  0E00               	movlw	0
  3157  006F3E  6E09               	movwf	lcd_putMessage@j^0,c
  3158  006F40  EFAC  F037         	goto	l1790
  3159  006F44                     l1786:
  3160                           
  3161                           ;Lcd4Lignes.c: 416: lcd_ecritChar(chaine[j]);
  3162  006F44  5009               	movf	lcd_putMessage@j^0,w,c
  3163  006F46  2407               	addwf	lcd_putMessage@chaine^0,w,c
  3164  006F48  6ED9               	movwf	fsr2l,c
  3165  006F4A  0E00               	movlw	0
  3166  006F4C  2008               	addwfc	(lcd_putMessage@chaine+1)^0,w,c
  3167  006F4E  6EDA               	movwf	fsr2h,c
  3168  006F50  50DF               	movf	indf2,w,c
  3169  006F52  ECDB  F037         	call	_lcd_ecritChar
  3170  006F56  2A09               	incf	lcd_putMessage@j^0,f,c
  3171  006F58                     l1790:
  3172  006F58  5009               	movf	lcd_putMessage@j^0,w,c
  3173  006F5A  2407               	addwf	lcd_putMessage@chaine^0,w,c
  3174  006F5C  6ED9               	movwf	fsr2l,c
  3175  006F5E  0E00               	movlw	0
  3176  006F60  2008               	addwfc	(lcd_putMessage@chaine+1)^0,w,c
  3177  006F62  6EDA               	movwf	fsr2h,c
  3178  006F64  50DF               	movf	indf2,w,c
  3179  006F66  A4D8               	btfss	status,2,c
  3180  006F68  EFB8  F037         	goto	u631
  3181  006F6C  EFBA  F037         	goto	u630
  3182  006F70                     u631:
  3183  006F70  EFA2  F037         	goto	l1786
  3184  006F74                     u630:
  3185  006F74  0012               	return		;funcret
  3186  006F76                     __end_of_lcd_putMessage:
  3187                           	opt callstack 0
  3188                           
  3189 ;; *************** function _lcd_ecritChar *****************
  3190 ;; Defined at:
  3191 ;;		line 383 in file "Lcd4Lignes.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  car             1    wreg     unsigned char 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  car             1    3[COMRAM] unsigned char 
  3196 ;;  posRam          1    4[COMRAM] unsigned char 
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  1    wreg      void 
  3199 ;; Registers used:
  3200 ;;		wreg, status,2, status,0, cstack
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3206 ;;      Params:         0       0       0       0       0       0       0
  3207 ;;      Locals:         2       0       0       0       0       0       0
  3208 ;;      Temps:          0       0       0       0       0       0       0
  3209 ;;      Totals:         2       0       0       0       0       0       0
  3210 ;;Total ram usage:        2 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:    3
  3213 ;; This function calls:
  3214 ;;		_lcd_wrCom
  3215 ;;		_lcd_wrData
  3216 ;; This function is called by:
  3217 ;;		_lcd_putMessage
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           	psect	text22
  3222  006FB6                     __ptext22:
  3223                           	opt callstack 0
  3224  006FB6                     _lcd_ecritChar:
  3225                           	opt callstack 24
  3226                           
  3227                           ;incstack = 0
  3228                           ;lcd_ecritChar@car stored from wreg
  3229  006FB6  6E04               	movwf	lcd_ecritChar@car^0,c
  3230  006FB8                     
  3231                           ;Lcd4Lignes.c: 385: unsigned char posRam;;Lcd4Lignes.c: 387: posRam = lcd_wrData(car);
  3232  006FB8  5004               	movf	lcd_ecritChar@car^0,w,c
  3233  006FBA  EC51  F037         	call	_lcd_wrData
  3234  006FBE  6E05               	movwf	lcd_ecritChar@posRam^0,c
  3235                           
  3236                           ;Lcd4Lignes.c: 388: switch(posRam)
  3237  006FC0  EFF1  F037         	goto	l1764
  3238  006FC4                     l1756:
  3239                           
  3240                           ;Lcd4Lignes.c: 391: lcd_wrCom(0xC0|0x80);
  3241  006FC4  0EC0               	movlw	192
  3242  006FC6  ECB5  F038         	call	_lcd_wrCom
  3243                           
  3244                           ;Lcd4Lignes.c: 392: break;
  3245  006FCA  EF00  F038         	goto	l258
  3246  006FCE                     l1758:
  3247                           
  3248                           ;Lcd4Lignes.c: 394: lcd_wrCom(0x94|0x80);
  3249  006FCE  0E94               	movlw	148
  3250  006FD0  ECB5  F038         	call	_lcd_wrCom
  3251                           
  3252                           ;Lcd4Lignes.c: 395: break;
  3253  006FD4  EF00  F038         	goto	l258
  3254  006FD8                     l1760:
  3255                           
  3256                           ;Lcd4Lignes.c: 397: lcd_wrCom(0xD4|0x80);
  3257  006FD8  0ED4               	movlw	212
  3258  006FDA  ECB5  F038         	call	_lcd_wrCom
  3259                           
  3260                           ;Lcd4Lignes.c: 398: break;
  3261  006FDE  EF00  F038         	goto	l258
  3262  006FE2                     l1764:
  3263  006FE2  5005               	movf	lcd_ecritChar@posRam^0,w,c
  3264                           
  3265                           ; Switch size 1, requested type "simple"
  3266                           ; Number of cases is 3, Range of values is 148 to 212
  3267                           ; switch strategies available:
  3268                           ; Name         Instructions Cycles
  3269                           ; simple_byte           10     6 (average)
  3270                           ;	Chosen strategy is simple_byte
  3271  006FE4  0A94               	xorlw	148	; case 148
  3272  006FE6  B4D8               	btfsc	status,2,c
  3273  006FE8  EFE2  F037         	goto	l1756
  3274  006FEC  0A54               	xorlw	84	; case 192
  3275  006FEE  B4D8               	btfsc	status,2,c
  3276  006FF0  EFEC  F037         	goto	l1760
  3277  006FF4  0A14               	xorlw	20	; case 212
  3278  006FF6  B4D8               	btfsc	status,2,c
  3279  006FF8  EFE7  F037         	goto	l1758
  3280  006FFC  EF00  F038         	goto	l258
  3281  007000                     l258:
  3282  007000  0012               	return		;funcret
  3283  007002                     __end_of_lcd_ecritChar:
  3284                           	opt callstack 0
  3285                           
  3286 ;; *************** function _lcd_wrData *****************
  3287 ;; Defined at:
  3288 ;;		line 212 in file "Lcd4Lignes.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  caractere       1    wreg     unsigned char 
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;  caractere       1    2[COMRAM] unsigned char 
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  1    wreg      unsigned char 
  3295 ;; Registers used:
  3296 ;;		wreg, status,2, status,0, cstack
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3302 ;;      Params:         0       0       0       0       0       0       0
  3303 ;;      Locals:         1       0       0       0       0       0       0
  3304 ;;      Temps:          0       0       0       0       0       0       0
  3305 ;;      Totals:         1       0       0       0       0       0       0
  3306 ;;Total ram usage:        1 bytes
  3307 ;; Hardware stack levels used:    1
  3308 ;; Hardware stack levels required when called:    2
  3309 ;; This function calls:
  3310 ;;		_lcd_busy
  3311 ;;		_lcd_ecrireDonnees
  3312 ;;		_lcd_strobeEnableBit
  3313 ;; This function is called by:
  3314 ;;		_lcd_ecritChar
  3315 ;;		_lcd_initCGRam
  3316 ;;		_lcd_effaceChar
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text23
  3321  006EA2                     __ptext23:
  3322                           	opt callstack 0
  3323  006EA2                     _lcd_wrData:
  3324                           	opt callstack 26
  3325                           
  3326                           ;incstack = 0
  3327                           ;lcd_wrData@caractere stored from wreg
  3328  006EA2  6E03               	movwf	lcd_wrData@caractere^0,c
  3329  006EA4                     
  3330                           ;Lcd4Lignes.c: 214: lcd_busy();
  3331  006EA4  EC82  F037         	call	_lcd_busy	;wreg free
  3332  006EA8                     
  3333                           ;Lcd4Lignes.c: 215: TRISD = 0b00000000;
  3334  006EA8  0E00               	movlw	0
  3335  006EAA  6E95               	movwf	149,c	;volatile
  3336  006EAC                     
  3337                           ;Lcd4Lignes.c: 218: PORTAbits.RA0 = 1;
  3338  006EAC  8080               	bsf	128,0,c	;volatile
  3339  006EAE                     
  3340                           ;Lcd4Lignes.c: 219: PORTAbits.RA1 = 0;
  3341  006EAE  9280               	bcf	128,1,c	;volatile
  3342  006EB0                     
  3343                           ;Lcd4Lignes.c: 221: lcd_ecrireDonnees(caractere >> 4);
  3344  006EB0  3803               	swapf	lcd_wrData@caractere^0,w,c
  3345  006EB2  0B0F               	andlw	15
  3346  006EB4  EC0C  F037         	call	_lcd_ecrireDonnees
  3347  006EB8                     
  3348                           ;Lcd4Lignes.c: 222: lcd_strobeEnableBit();
  3349  006EB8  ECF6  F036         	call	_lcd_strobeEnableBit	;wreg free
  3350  006EBC                     
  3351                           ;Lcd4Lignes.c: 225: lcd_ecrireDonnees(caractere);
  3352  006EBC  5003               	movf	lcd_wrData@caractere^0,w,c
  3353  006EBE  EC0C  F037         	call	_lcd_ecrireDonnees
  3354  006EC2                     
  3355                           ;Lcd4Lignes.c: 226: lcd_strobeEnableBit();
  3356  006EC2  ECF6  F036         	call	_lcd_strobeEnableBit	;wreg free
  3357  006EC6                     
  3358                           ;Lcd4Lignes.c: 229: TRISD = 0b00001111;
  3359  006EC6  0E0F               	movlw	15
  3360  006EC8  6E95               	movwf	149,c	;volatile
  3361  006ECA                     
  3362                           ;Lcd4Lignes.c: 230: _delay((unsigned long)((2)*(1000000/4000000.0)));
  3363                           ;Lcd4Lignes.c: 231: return(lcd_busy());
  3364  006ECA  EC82  F037         	call	_lcd_busy	;wreg free
  3365  006ECE  0012               	return		;funcret
  3366  006ED0                     __end_of_lcd_wrData:
  3367                           	opt callstack 0
  3368                           
  3369 ;; *************** function _lcd_gotoXY *****************
  3370 ;; Defined at:
  3371 ;;		line 338 in file "Lcd4Lignes.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  x               1    wreg     unsigned char 
  3374 ;;  y               1    3[COMRAM] unsigned char 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;  x               1    4[COMRAM] unsigned char 
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0, cstack
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3386 ;;      Params:         1       0       0       0       0       0       0
  3387 ;;      Locals:         1       0       0       0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0       0       0
  3389 ;;      Totals:         2       0       0       0       0       0       0
  3390 ;;Total ram usage:        2 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:    3
  3393 ;; This function calls:
  3394 ;;		_lcd_wrCom
  3395 ;; This function is called by:
  3396 ;;		_main
  3397 ;;		_afficheTabVue
  3398 ;;		_afficheTabMine
  3399 ;;		_deplace
  3400 ;;		_demine
  3401 ;;		_lcd_effaceLigne
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           	psect	text24
  3406  007292                     __ptext24:
  3407                           	opt callstack 0
  3408  007292                     _lcd_gotoXY:
  3409                           	opt callstack 27
  3410                           
  3411                           ;incstack = 0
  3412                           ;lcd_gotoXY@x stored from wreg
  3413  007292  6E05               	movwf	lcd_gotoXY@x^0,c
  3414  007294                     
  3415                           ;Lcd4Lignes.c: 340: switch(y)
  3416  007294  EF68  F039         	goto	l1782
  3417  007298                     l1772:
  3418                           
  3419                           ;Lcd4Lignes.c: 343: lcd_wrCom((x-1+0x80)|0x80);
  3420  007298  5005               	movf	lcd_gotoXY@x^0,w,c
  3421  00729A  0F7F               	addlw	127
  3422  00729C  0980               	iorlw	128
  3423  00729E  ECB5  F038         	call	_lcd_wrCom
  3424                           
  3425                           ;Lcd4Lignes.c: 344: break;
  3426  0072A2  EF7B  F039         	goto	l247
  3427  0072A6                     l1774:
  3428                           
  3429                           ;Lcd4Lignes.c: 346: lcd_wrCom((x-1+0xC0)|0x80);
  3430  0072A6  5005               	movf	lcd_gotoXY@x^0,w,c
  3431  0072A8  0FBF               	addlw	191
  3432  0072AA  0980               	iorlw	128
  3433  0072AC  ECB5  F038         	call	_lcd_wrCom
  3434                           
  3435                           ;Lcd4Lignes.c: 347: break;
  3436  0072B0  EF7B  F039         	goto	l247
  3437  0072B4                     l1776:
  3438                           
  3439                           ;Lcd4Lignes.c: 349: lcd_wrCom((x-1+0x94)|0x80);
  3440  0072B4  5005               	movf	lcd_gotoXY@x^0,w,c
  3441  0072B6  0F93               	addlw	147
  3442  0072B8  0980               	iorlw	128
  3443  0072BA  ECB5  F038         	call	_lcd_wrCom
  3444                           
  3445                           ;Lcd4Lignes.c: 350: break;
  3446  0072BE  EF7B  F039         	goto	l247
  3447  0072C2                     l1778:
  3448                           
  3449                           ;Lcd4Lignes.c: 352: lcd_wrCom((x-1+0xD4)|0x80);
  3450  0072C2  5005               	movf	lcd_gotoXY@x^0,w,c
  3451  0072C4  0FD3               	addlw	211
  3452  0072C6  0980               	iorlw	128
  3453  0072C8  ECB5  F038         	call	_lcd_wrCom
  3454                           
  3455                           ;Lcd4Lignes.c: 353: break;
  3456  0072CC  EF7B  F039         	goto	l247
  3457  0072D0                     l1782:
  3458  0072D0  5004               	movf	lcd_gotoXY@y^0,w,c
  3459                           
  3460                           ; Switch size 1, requested type "simple"
  3461                           ; Number of cases is 4, Range of values is 1 to 4
  3462                           ; switch strategies available:
  3463                           ; Name         Instructions Cycles
  3464                           ; simple_byte           13     7 (average)
  3465                           ;	Chosen strategy is simple_byte
  3466  0072D2  0A01               	xorlw	1	; case 1
  3467  0072D4  B4D8               	btfsc	status,2,c
  3468  0072D6  EF4C  F039         	goto	l1772
  3469  0072DA  0A03               	xorlw	3	; case 2
  3470  0072DC  B4D8               	btfsc	status,2,c
  3471  0072DE  EF53  F039         	goto	l1774
  3472  0072E2  0A01               	xorlw	1	; case 3
  3473  0072E4  B4D8               	btfsc	status,2,c
  3474  0072E6  EF5A  F039         	goto	l1776
  3475  0072EA  0A07               	xorlw	7	; case 4
  3476  0072EC  B4D8               	btfsc	status,2,c
  3477  0072EE  EF61  F039         	goto	l1778
  3478  0072F2  EF7B  F039         	goto	l247
  3479  0072F6                     l247:
  3480  0072F6  0012               	return		;funcret
  3481  0072F8                     __end_of_lcd_gotoXY:
  3482                           	opt callstack 0
  3483                           
  3484 ;; *************** function _lcd_effaceAffichage *****************
  3485 ;; Defined at:
  3486 ;;		line 300 in file "Lcd4Lignes.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;		None
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;		None
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  1    wreg      void 
  3493 ;; Registers used:
  3494 ;;		wreg, status,2, status,0, cstack
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3500 ;;      Params:         0       0       0       0       0       0       0
  3501 ;;      Locals:         0       0       0       0       0       0       0
  3502 ;;      Temps:          0       0       0       0       0       0       0
  3503 ;;      Totals:         0       0       0       0       0       0       0
  3504 ;;Total ram usage:        0 bytes
  3505 ;; Hardware stack levels used:    1
  3506 ;; Hardware stack levels required when called:    3
  3507 ;; This function calls:
  3508 ;;		_lcd_wrCom
  3509 ;; This function is called by:
  3510 ;;		_main
  3511 ;;		_afficheTabVue
  3512 ;;		_afficheTabMine
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text25
  3517  006DFC                     __ptext25:
  3518                           	opt callstack 0
  3519  006DFC                     _lcd_effaceAffichage:
  3520                           	opt callstack 27
  3521  006DFC                     
  3522                           ;Lcd4Lignes.c: 302: lcd_wrCom(0x01);
  3523  006DFC  0E01               	movlw	1
  3524  006DFE  ECB5  F038         	call	_lcd_wrCom
  3525                           
  3526                           ;Lcd4Lignes.c: 303: lcd_wrCom(0x80);
  3527  006E02  0E80               	movlw	128
  3528  006E04  ECB5  F038         	call	_lcd_wrCom
  3529  006E08  0012               	return		;funcret
  3530  006E0A                     __end_of_lcd_effaceAffichage:
  3531                           	opt callstack 0
  3532                           
  3533 ;; *************** function _lcd_wrCom *****************
  3534 ;; Defined at:
  3535 ;;		line 180 in file "Lcd4Lignes.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  commande        1    wreg     unsigned char 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;  commande        1    2[COMRAM] unsigned char 
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  1    wreg      unsigned char 
  3542 ;; Registers used:
  3543 ;;		wreg, status,2, status,0, cstack
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3549 ;;      Params:         0       0       0       0       0       0       0
  3550 ;;      Locals:         1       0       0       0       0       0       0
  3551 ;;      Temps:          0       0       0       0       0       0       0
  3552 ;;      Totals:         1       0       0       0       0       0       0
  3553 ;;Total ram usage:        1 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:    2
  3556 ;; This function calls:
  3557 ;;		_lcd_busy
  3558 ;;		_lcd_ecrireDonnees
  3559 ;;		_lcd_strobeEnableBit
  3560 ;; This function is called by:
  3561 ;;		_lcd_init
  3562 ;;		_lcd_effaceAffichage
  3563 ;;		_lcd_curseurHome
  3564 ;;		_lcd_gotoXY
  3565 ;;		_lcd_ecritChar
  3566 ;;		_lcd_initCGRam
  3567 ;;		_lcd_cacheCurseur
  3568 ;;		_lcd_montreCurseur
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text26
  3573  00716A                     __ptext26:
  3574                           	opt callstack 0
  3575  00716A                     _lcd_wrCom:
  3576                           	opt callstack 27
  3577                           
  3578                           ;incstack = 0
  3579                           ;lcd_wrCom@commande stored from wreg
  3580  00716A  6E03               	movwf	lcd_wrCom@commande^0,c
  3581  00716C                     
  3582                           ;Lcd4Lignes.c: 182: lcd_busy();
  3583  00716C  EC82  F037         	call	_lcd_busy	;wreg free
  3584  007170                     
  3585                           ;Lcd4Lignes.c: 184: TRISD = 0b00000000;
  3586  007170  0E00               	movlw	0
  3587  007172  6E95               	movwf	149,c	;volatile
  3588  007174                     
  3589                           ;Lcd4Lignes.c: 187: PORTAbits.RA0 = 0;
  3590  007174  9080               	bcf	128,0,c	;volatile
  3591  007176                     
  3592                           ;Lcd4Lignes.c: 188: PORTAbits.RA1 = 0;
  3593  007176  9280               	bcf	128,1,c	;volatile
  3594  007178                     
  3595                           ;Lcd4Lignes.c: 190: lcd_ecrireDonnees(commande >> 4);
  3596  007178  3803               	swapf	lcd_wrCom@commande^0,w,c
  3597  00717A  0B0F               	andlw	15
  3598  00717C  EC0C  F037         	call	_lcd_ecrireDonnees
  3599  007180                     
  3600                           ;Lcd4Lignes.c: 191: lcd_strobeEnableBit();
  3601  007180  ECF6  F036         	call	_lcd_strobeEnableBit	;wreg free
  3602  007184                     
  3603                           ;Lcd4Lignes.c: 194: lcd_ecrireDonnees(commande);
  3604  007184  5003               	movf	lcd_wrCom@commande^0,w,c
  3605  007186  EC0C  F037         	call	_lcd_ecrireDonnees
  3606  00718A                     
  3607                           ;Lcd4Lignes.c: 195: lcd_strobeEnableBit();
  3608  00718A  ECF6  F036         	call	_lcd_strobeEnableBit	;wreg free
  3609  00718E                     
  3610                           ;Lcd4Lignes.c: 196: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3611  00718E  0E03               	movlw	3
  3612  007190                     u1247:
  3613  007190  2EE8               	decfsz	wreg,f,c
  3614  007192  D7FE               	bra	u1247
  3615  007194  F000               	nop	
  3616  007196                     
  3617                           ;Lcd4Lignes.c: 198: if ((commande == 0x01) || commande == 0x02)
  3618  007196  0403               	decf	lcd_wrCom@commande^0,w,c
  3619  007198  B4D8               	btfsc	status,2,c
  3620  00719A  EFD1  F038         	goto	u611
  3621  00719E  EFD3  F038         	goto	u610
  3622  0071A2                     u611:
  3623  0071A2  EFDC  F038         	goto	l1716
  3624  0071A6                     u610:
  3625  0071A6  0E02               	movlw	2
  3626  0071A8  1803               	xorwf	lcd_wrCom@commande^0,w,c
  3627  0071AA  A4D8               	btfss	status,2,c
  3628  0071AC  EFDA  F038         	goto	u621
  3629  0071B0  EFDC  F038         	goto	u620
  3630  0071B4                     u621:
  3631  0071B4  EFE1  F038         	goto	l1718
  3632  0071B8                     u620:
  3633  0071B8                     l1716:
  3634                           
  3635                           ;Lcd4Lignes.c: 199: _delay((unsigned long)((2)*(1000000/4000.0)));
  3636  0071B8  0EA6               	movlw	166
  3637  0071BA                     u1257:
  3638  0071BA  2EE8               	decfsz	wreg,f,c
  3639  0071BC  D7FE               	bra	u1257
  3640  0071BE  F000 F000          	nop2	
  3641  0071C2                     l1718:
  3642                           
  3643                           ;Lcd4Lignes.c: 201: TRISD = 0b00001111;
  3644  0071C2  0E0F               	movlw	15
  3645  0071C4  6E95               	movwf	149,c	;volatile
  3646  0071C6                     
  3647                           ;Lcd4Lignes.c: 203: return(lcd_busy());;	Return value of _lcd_wrCom is never used
  3648  0071C6  EC82  F037         	call	_lcd_busy	;wreg free
  3649  0071CA  0012               	return		;funcret
  3650  0071CC                     __end_of_lcd_wrCom:
  3651                           	opt callstack 0
  3652                           
  3653 ;; *************** function _lcd_strobeEnableBit *****************
  3654 ;; Defined at:
  3655 ;;		line 455 in file "Lcd4Lignes.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;		None
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;		None
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  1    wreg      void 
  3662 ;; Registers used:
  3663 ;;		None
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3669 ;;      Params:         0       0       0       0       0       0       0
  3670 ;;      Locals:         0       0       0       0       0       0       0
  3671 ;;      Temps:          0       0       0       0       0       0       0
  3672 ;;      Totals:         0       0       0       0       0       0       0
  3673 ;;Total ram usage:        0 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		_lcd_wrCom
  3679 ;;		_lcd_wrData
  3680 ;;		_lcd_resetSequence
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           	psect	text27
  3685  006DEC                     __ptext27:
  3686                           	opt callstack 0
  3687  006DEC                     _lcd_strobeEnableBit:
  3688                           	opt callstack 28
  3689  006DEC                     
  3690                           ;Lcd4Lignes.c: 457: PORTAbits.RA2 = 1;
  3691  006DEC  8480               	bsf	128,2,c	;volatile
  3692                           
  3693                           ;Lcd4Lignes.c: 458: __nop();
  3694  006DEE  F000               	nop	
  3695                           
  3696                           ;Lcd4Lignes.c: 459: PORTAbits.RA2 = 0;
  3697  006DF0  9480               	bcf	128,2,c	;volatile
  3698  006DF2  0012               	return		;funcret
  3699  006DF4                     __end_of_lcd_strobeEnableBit:
  3700                           	opt callstack 0
  3701                           
  3702 ;; *************** function _lcd_ecrireDonnees *****************
  3703 ;; Defined at:
  3704 ;;		line 131 in file "Lcd4Lignes.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;  donnee          1    wreg     unsigned char 
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;  donnee          1    1[COMRAM] unsigned char 
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      void 
  3711 ;; Registers used:
  3712 ;;		wreg, status,2, status,0
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3718 ;;      Params:         0       0       0       0       0       0       0
  3719 ;;      Locals:         1       0       0       0       0       0       0
  3720 ;;      Temps:          1       0       0       0       0       0       0
  3721 ;;      Totals:         2       0       0       0       0       0       0
  3722 ;;Total ram usage:        2 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; This function calls:
  3725 ;;		Nothing
  3726 ;; This function is called by:
  3727 ;;		_lcd_wrCom
  3728 ;;		_lcd_wrData
  3729 ;;		_lcd_resetSequence
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           	psect	text28
  3734  006E18                     __ptext28:
  3735                           	opt callstack 0
  3736  006E18                     _lcd_ecrireDonnees:
  3737                           	opt callstack 28
  3738                           
  3739                           ;incstack = 0
  3740                           ;lcd_ecrireDonnees@donnee stored from wreg
  3741  006E18  6E02               	movwf	lcd_ecrireDonnees@donnee^0,c
  3742  006E1A                     
  3743                           ;Lcd4Lignes.c: 134: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  3744  006E1A  CF83 F001          	movff	3971,??_lcd_ecrireDonnees	;volatile
  3745  006E1E  0EF0               	movlw	240
  3746  006E20  1601               	andwf	??_lcd_ecrireDonnees^0,f,c
  3747  006E22  5002               	movf	lcd_ecrireDonnees@donnee^0,w,c
  3748  006E24  0B0F               	andlw	15
  3749  006E26  1001               	iorwf	??_lcd_ecrireDonnees^0,w,c
  3750  006E28  6E83               	movwf	131,c	;volatile
  3751  006E2A  0012               	return		;funcret
  3752  006E2C                     __end_of_lcd_ecrireDonnees:
  3753                           	opt callstack 0
  3754                           
  3755 ;; *************** function _lcd_busy *****************
  3756 ;; Defined at:
  3757 ;;		line 148 in file "Lcd4Lignes.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;		None
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  adresse         1    1[COMRAM] unsigned char 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      unsigned char 
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0, cstack
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3771 ;;      Params:         0       0       0       0       0       0       0
  3772 ;;      Locals:         1       0       0       0       0       0       0
  3773 ;;      Temps:          1       0       0       0       0       0       0
  3774 ;;      Totals:         2       0       0       0       0       0       0
  3775 ;;Total ram usage:        2 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; Hardware stack levels required when called:    1
  3778 ;; This function calls:
  3779 ;;		_lcd_lireDonnees
  3780 ;; This function is called by:
  3781 ;;		_lcd_wrCom
  3782 ;;		_lcd_wrData
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           	psect	text29
  3787  006F04                     __ptext29:
  3788                           	opt callstack 0
  3789  006F04                     _lcd_busy:
  3790                           	opt callstack 27
  3791  006F04                     
  3792                           ;Lcd4Lignes.c: 150: unsigned char adresse;;Lcd4Lignes.c: 152: PORTAbits.RA0 = 0;
  3793  006F04  9080               	bcf	128,0,c	;volatile
  3794                           
  3795                           ;Lcd4Lignes.c: 153: PORTAbits.RA1 = 1;
  3796  006F06  8280               	bsf	128,1,c	;volatile
  3797  006F08                     l209:
  3798                           
  3799                           ;Lcd4Lignes.c: 156: {;Lcd4Lignes.c: 157: PORTAbits.RA2 = 1;
  3800  006F08  8480               	bsf	128,2,c	;volatile
  3801                           
  3802                           ;Lcd4Lignes.c: 158: __nop();
  3803  006F0A  F000               	nop	
  3804  006F0C                     
  3805                           ;Lcd4Lignes.c: 159: adresse = lcd_lireDonnees() << 4;
  3806  006F0C  ECF3  F036         	call	_lcd_lireDonnees	;wreg free
  3807  006F10  6E01               	movwf	??_lcd_busy^0,c
  3808  006F12  3801               	swapf	??_lcd_busy^0,w,c
  3809  006F14  0BF0               	andlw	240
  3810  006F16  6E02               	movwf	lcd_busy@adresse^0,c
  3811  006F18                     
  3812                           ;Lcd4Lignes.c: 160: PORTAbits.RA2 = 0;
  3813  006F18  9480               	bcf	128,2,c	;volatile
  3814  006F1A                     
  3815                           ;Lcd4Lignes.c: 162: PORTAbits.RA2 = 1;
  3816  006F1A  8480               	bsf	128,2,c	;volatile
  3817  006F1C                     
  3818                           ;Lcd4Lignes.c: 163: __nop();
  3819  006F1C  F000               	nop	
  3820                           
  3821                           ;Lcd4Lignes.c: 164: adresse |= lcd_lireDonnees();
  3822  006F1E  ECF3  F036         	call	_lcd_lireDonnees	;wreg free
  3823  006F22  1202               	iorwf	lcd_busy@adresse^0,f,c
  3824  006F24                     
  3825                           ;Lcd4Lignes.c: 165: PORTAbits.RA2 = 0;
  3826  006F24  9480               	bcf	128,2,c	;volatile
  3827  006F26                     
  3828                           ;Lcd4Lignes.c: 167: };Lcd4Lignes.c: 168: while(adresse&0x80);
  3829  006F26  BE02               	btfsc	lcd_busy@adresse^0,7,c
  3830  006F28  EF98  F037         	goto	u601
  3831  006F2C  EF9A  F037         	goto	u600
  3832  006F30                     u601:
  3833  006F30  EF84  F037         	goto	l209
  3834  006F34                     u600:
  3835  006F34                     
  3836                           ;Lcd4Lignes.c: 170: PORTAbits.RA1 = 0;
  3837  006F34  9280               	bcf	128,1,c	;volatile
  3838  006F36                     
  3839                           ;Lcd4Lignes.c: 171: return(adresse&0x7f);
  3840  006F36  5002               	movf	lcd_busy@adresse^0,w,c
  3841  006F38  0B7F               	andlw	127
  3842  006F3A  0012               	return		;funcret
  3843  006F3C                     __end_of_lcd_busy:
  3844                           	opt callstack 0
  3845                           
  3846 ;; *************** function _lcd_lireDonnees *****************
  3847 ;; Defined at:
  3848 ;;		line 117 in file "Lcd4Lignes.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;		None
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      unsigned char 
  3855 ;; Registers used:
  3856 ;;		wreg, status,2, status,0
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3862 ;;      Params:         0       0       0       0       0       0       0
  3863 ;;      Locals:         0       0       0       0       0       0       0
  3864 ;;      Temps:          0       0       0       0       0       0       0
  3865 ;;      Totals:         0       0       0       0       0       0       0
  3866 ;;Total ram usage:        0 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_lcd_busy
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           	psect	text30
  3876  006DE6                     __ptext30:
  3877                           	opt callstack 0
  3878  006DE6                     _lcd_lireDonnees:
  3879                           	opt callstack 27
  3880  006DE6                     
  3881                           ;Lcd4Lignes.c: 120: return (PORTD & 0x0f);
  3882  006DE6  5083               	movf	131,w,c	;volatile
  3883  006DE8  0B0F               	andlw	15
  3884  006DEA  0012               	return		;funcret
  3885  006DEC                     __end_of_lcd_lireDonnees:
  3886                           	opt callstack 0
  3887                           
  3888 ;; *************** function ___wmul *****************
  3889 ;; Defined at:
  3890 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  multiplier      2    0[COMRAM] unsigned int 
  3893 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;  product         2    4[COMRAM] unsigned int 
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  2    0[COMRAM] unsigned int 
  3898 ;; Registers used:
  3899 ;;		wreg, status,2, status,0, prodl, prodh
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3905 ;;      Params:         4       0       0       0       0       0       0
  3906 ;;      Locals:         2       0       0       0       0       0       0
  3907 ;;      Temps:          0       0       0       0       0       0       0
  3908 ;;      Totals:         6       0       0       0       0       0       0
  3909 ;;Total ram usage:        6 bytes
  3910 ;; Hardware stack levels used:    1
  3911 ;; This function calls:
  3912 ;;		Nothing
  3913 ;; This function is called by:
  3914 ;;		_afficheTabVue
  3915 ;;		_afficheTabMine
  3916 ;;		_initTabVue
  3917 ;;		_rempliMines
  3918 ;;		_metToucheCombien
  3919 ;;		_calculToucheCombien
  3920 ;;		_gagne
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923                           
  3924                           	psect	text31
  3925  006E2C                     __ptext31:
  3926                           	opt callstack 0
  3927  006E2C                     ___wmul:
  3928                           	opt callstack 29
  3929  006E2C  5001               	movf	___wmul@multiplier^0,w,c
  3930  006E2E  0203               	mulwf	___wmul@multiplicand^0,c
  3931  006E30  CFF3 F005          	movff	prodl,___wmul@product
  3932  006E34  CFF4 F006          	movff	prodh,___wmul@product+1
  3933  006E38  5001               	movf	___wmul@multiplier^0,w,c
  3934  006E3A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3935  006E3C  50F3               	movf	243,w,c
  3936  006E3E  2606               	addwf	(___wmul@product+1)^0,f,c
  3937  006E40  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3938  006E42  0203               	mulwf	___wmul@multiplicand^0,c
  3939  006E44  50F3               	movf	243,w,c
  3940  006E46  2606               	addwf	(___wmul@product+1)^0,f,c
  3941  006E48  C005  F001         	movff	___wmul@product,?___wmul
  3942  006E4C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3943  006E50  0012               	return		;funcret
  3944  006E52                     __end_of___wmul:
  3945                           	opt callstack 0
  3946  0000                     
  3947                           	psect	rparam
  3948  0000                     tosu	equ	0xFFF
  3949                           tosh	equ	0xFFE
  3950                           tosl	equ	0xFFD
  3951                           stkptr	equ	0xFFC
  3952                           pclatu	equ	0xFFB
  3953                           pclath	equ	0xFFA
  3954                           pcl	equ	0xFF9
  3955                           tblptru	equ	0xFF8
  3956                           tblptrh	equ	0xFF7
  3957                           tblptrl	equ	0xFF6
  3958                           tablat	equ	0xFF5
  3959                           prodh	equ	0xFF4
  3960                           prodl	equ	0xFF3
  3961                           indf0	equ	0xFEF
  3962                           postinc0	equ	0xFEE
  3963                           postdec0	equ	0xFED
  3964                           preinc0	equ	0xFEC
  3965                           plusw0	equ	0xFEB
  3966                           fsr0h	equ	0xFEA
  3967                           fsr0l	equ	0xFE9
  3968                           wreg	equ	0xFE8
  3969                           indf1	equ	0xFE7
  3970                           postinc1	equ	0xFE6
  3971                           postdec1	equ	0xFE5
  3972                           preinc1	equ	0xFE4
  3973                           plusw1	equ	0xFE3
  3974                           fsr1h	equ	0xFE2
  3975                           fsr1l	equ	0xFE1
  3976                           bsr	equ	0xFE0
  3977                           indf2	equ	0xFDF
  3978                           postinc2	equ	0xFDE
  3979                           postdec2	equ	0xFDD
  3980                           preinc2	equ	0xFDC
  3981                           plusw2	equ	0xFDB
  3982                           fsr2h	equ	0xFDA
  3983                           fsr2l	equ	0xFD9
  3984                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      42
    BANK0           160      0     148
    BANK1           256      0      84
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(2) Largest target is 84
		 -> m_tabMines(BANK0[84]), m_tabVue(BANK1[84]), 

    gagne@pMines	PTR int  size(2) Largest target is 2
		 -> main@nbMines(COMRAM[2]), 

    deplace@py	PTR unsigned char  size(2) Largest target is 1
		 -> main@y(COMRAM[1]), 

    deplace@px	PTR unsigned char  size(2) Largest target is 1
		 -> main@x(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_rempliMines
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _initialisation->_srand
    _initTabVue->___wmul
    _gagne->___wmul
    _deplace->_lcd_gotoXY
    _demine->_enleveTuilesAutour
    _afficheTabVue->_lcd_putMessage
    _afficheTabMine->_lcd_putMessage
    _lcd_putMessage->___wmul
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_effaceAffichage->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   26550
                                             33 COMRAM     5     5      0
                     _afficheTabMine
                      _afficheTabVue
                             _demine
                            _deplace
                              _gagne
                         _initTabVue
                     _initialisation
                    _lcd_curseurHome
                _lcd_effaceAffichage
                         _lcd_gotoXY
                           _lcd_init
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                         13    11      2    2771
                                             20 COMRAM    13    11      2
                            ___awmod
                             ___wmul
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     7     7      0    3836
                                             22 COMRAM     7     7      0
                             ___wmul
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 16    12      4    2085
                                              6 COMRAM    16    12      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 COMRAM     1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 COMRAM     4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           6     6      0    1685
                                              6 COMRAM     6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _gagne                                               11     9      2    1807
                                              6 COMRAM    11     9      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _deplace                                              9     5      4    1799
                                              5 COMRAM     9     5      4
                          _getAnalog
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _demine                                               6     5      1    5310
                                             12 COMRAM     6     5      1
                      _afficheTabVue
                 _enleveTuilesAutour
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _enleveTuilesAutour                                  12    11      1     348
                                              0 COMRAM    12    11      1
 ---------------------------------------------------------------------------------
 (2) _afficheTabVue                                        2     2      0    3430
                                              9 COMRAM     2     2      0
                             ___wmul
                _lcd_effaceAffichage
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _afficheTabMine                                       2     2      0    3430
                                              9 COMRAM     2     2      0
                             ___wmul
                _lcd_effaceAffichage
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (3) _lcd_putMessage                                       3     1      2     555
                                              6 COMRAM     3     1      2
                             ___wmul (ARG)
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (4) _lcd_ecritChar                                        2     2      0     313
                                              3 COMRAM     2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 COMRAM     1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoXY                                           2     1      1    1102
                                              3 COMRAM     2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _lcd_effaceAffichage                                  0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_wrCom                                            1     1      0     156
                                              2 COMRAM     1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             2     2      0      46
                                              0 COMRAM     2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (4) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1527
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheTabMine
     ___wmul
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _afficheTabVue
     ___wmul
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _demine
     _afficheTabVue
       ___wmul
       _lcd_effaceAffichage
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_gotoXY
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_putMessage
         ___wmul (ARG)
         _lcd_ecritChar (ARG)
           _lcd_wrCom
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
           _lcd_wrData
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
     _enleveTuilesAutour
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _deplace
     _getAnalog
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _gagne
     ___wmul
   _initTabVue
     ___wmul
   _initialisation
     _srand
   _lcd_curseurHome
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_effaceAffichage
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_gotoXY
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _metToucheCombien
     ___wmul
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     ___wmul
     _rand
       ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      54       6       32.8%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      94       4       92.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     26      2A       1       44.2%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     112      14        0.0%
DATA                 0      0     112      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 05 11:02:33 2019

 __end_of_calculToucheCombien 7B82                            l80 77A4                            l90 710A  
                          l95 70AE          ??_enleveTuilesAutour 0002           ___wmul@multiplicand 0003  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000  __size_of_lcd_strobeEnableBit 0008                           l102 74AA  
                         l210 6F34                           l122 770E                           l114 7A3C  
                         l203 6DEA                           l211 6F3A                           l220 6ECE  
                         l125 7A4E                           l206 6E2A                           l143 7D3E  
                         l223 7290                           l135 7B80                           l152 77F0  
                         l232 6DFA                           l209 6F08                           l217 71CA  
                         l129 7B26                           l162 736C                           l226 6EA0  
                         l156 7908                           l229 6E08                           l181 6E78  
                         l149 7D3E                           l173 75B4                           l166 7400  
                         l247 72F6                           l175 7630                           l280 6DF2  
                         l264 6F74                           l184 6F02                           l258 7000  
                         l178 6E68                           l283 6E50                           l277 7168  
                         l294 7350                           l527 755A                           l295 7360  
                         l950 7052                           l947 6E16                  __CFG_CPB$OFF 000000  
                         u180 6E76                           u181 6E72                           u600 6F34  
                         u601 6F30                           u610 71A6                  __CFG_CPD$OFF 000000  
                         u611 71A2                           u620 71B8                           u700 7AB8  
                         u621 71B4                           u701 7AB4                           u630 6F74  
                         u710 7AC6                           u631 6F70                           u711 7AC2  
                         u800 7164                           u720 7AE2                           u640 7316  
                         u801 7160                           u721 7ADE                           u641 7312  
                         u730 7B24                           u810 74BE                           u650 7350  
                         u731 7B20                           u811 74BA                           u651 734C  
                         u660 710A                           u740 7B46                           u820 74D8  
                         u900 7992                           u661 7106                           u741 7B42  
                         u821 74D4                           u901 798E                           u750 7B66  
                         u670 7A64                           u830 74F2                           u910 79F6  
                         u751 7B62                           u671 7A60                           u831 74EE  
                         u911 79F2                           u760 7B76                           u680 7A76  
                         u840 7510                           u920 7A3C                           u761 7B72  
                         u681 7A72                           u841 750C                           u921 7A38  
                         u770 73E0                           u690 7A9C                           u930 7684  
                         u850 7526                           u771 73DC                           u691 7A98  
                         u931 7680                           u851 7522                           u780 7400  
                         u940 76EE                           u860 754A                           u781 73FC  
                         u941 76EA                           u861 7546                           u870 7466  
                         u790 7152                           u950 770E                           u871 7462  
                         u791 714E                           u951 770A                           u960 7BBA  
                         u880 74AA                           u961 7BB6                           u881 74A6  
                         u970 7BDC                           u890 7972                           u971 7BD8  
                         u891 796E                           u980 7C22                           u981 7C1E  
                         u990 7C44                           u991 7C40                  __CFG_BORV$18 000000  
                ___awmod@sign 0014                   lcd_gotoXY@x 0005                           wreg 000FE8  
                 lcd_gotoXY@y 0004  __size_of_lcd_effaceAffichage 000E                   main@nbMines 0023  
                __CFG_LVP$OFF 000000                          l2000 6ED8                          l2010 6EF4  
                        l2002 6EE2                          l2012 6EF8                          l2004 6EE4  
                        l2020 6E9C                          l2100 76EE                          l2110 7BC4  
                        l2022 7402                          l2014 6EFA                          l2006 6EF0  
                        l2102 76F2                          l2120 7C2C                          l2112 7BDC  
                        l2104 7B82                          l2200 761A                          l2040 7466  
                        l2016 6EFE                          l2008 6EF2                          l2210 7054  
                        l2130 7C94                          l2122 7C44                          l2114 7BE8  
                        l2106 7B9E                          l2202 7628                          l2042 748A  
                        l2034 7412                          l2018 6E7A                          l2220 706A  
                        l2212 7058                          l1252 6E54                          l2140 7CFC  
                        l2132 7CAC                          l2124 7C50                          l2108 7BBA  
                        l2116 7C06                          l2044 748E                          l2036 7446  
                        l2028 740A                          l2060 7952                          l2052 7916  
                        l2222 708E                          l2150 7800                          l1254 6E66  
                        l2142 7D14                          l2134 7CB8                          l2118 7C22  
                        l2126 7C6E                          l2206 762E                          l2038 744A  
                        l2070 799E                          l2062 7956                          l2046 790A  
                        l2224 7092                          l2160 7844                          l2152 7802  
                        l1256 6E66                          l2144 7D20                          l2128 7C8A  
                        l2136 7CD6                          l2080 7632                          l2072 79C4  
                        l2064 7972                          l2240 7728                          l2218 7060  
                        l2170 78FC                          l2162 7876                          l2154 7834  
                        l2146 77F0                          l1258 6E76                          l2138 7CF2  
                        l2074 79F6                          l2066 7976                          l2058 791E  
                        l2250 7744                          l2242 772C                          l2234 7710  
                        l1700 7178                          l2172 7906                          l2164 7884  
                        l2156 783E                          l2148 77FE                          l2092 7642  
                        l2076 7A1A                          l2068 7992                          l2260 77A0  
                        l2252 7748                          l2244 7730                          l2236 7720  
                        l1710 718E                          l1702 7180                          l2166 78B4  
                        l2190 75B2                          l2182 7568                          l2094 7684  
                        l2086 763A                          l2078 7A1E                          l2262 77B2  
                        l2254 775C                          l2246 7734                          l2238 7724  
                        l1720 71C6                          l1712 7196                          l1704 7184  
                        l2168 78F8                          l2192 75B8                          l2176 755C  
                        l2096 76CE                          l1800 7308                          l2264 77CA  
                        l2256 776A                          l2248 7740                          l1722 71C6  
                        l1714 71A6                          l1706 7184                          l1730 6EAC  
                        l1810 70B4                          l2194 75D4                          l2098 76D2  
                        l1802 7316                          l2258 7784                          l2266 77D4  
                        l1660 6DE6                          l1716 71B8                          l1708 718A  
                        l1740 6EBC                          l1732 6EAC                          l1820 70EA  
                        l2196 75D8                          l2188 7570                          l1900 6E0A  
                        l1804 7326                          l1670 6F18                          l1718 71C2  
                        l1750 6ECA                          l1742 6EBC                          l1734 6EAE  
                        l1726 6EA4                          l1822 70EE                          l2198 75F4  
                        l1910 7244                          l1902 722E                          l1806 7330  
                        l1680 6F26                          l1672 6F1A                          l1664 6E1A  
                        l1744 6EC2                          l1736 6EB0                          l1728 6EA8  
                        l1760 6FD8                          l1816 70BC                          l1808 70B0  
                        l1920 7260                          l1912 724A                          l1904 7232  
                        l1832 7A3E                          l1824 7002                          l1682 6F26  
                        l1674 6F1A                          l1666 6F04                          l1690 716C  
                        l1770 7294                          l1746 6EC6                          l1738 6EB8  
                        l1754 6FB8                          l1818 70C6                          l1930 7280  
                        l1922 7268                          l1914 724E                          l1906 7240  
                        l1850 7A9C                          l1834 7A4A                          l1826 7036  
                        l1684 6F36                          l1676 6F1C                          l1668 6F0C  
                        l1692 7170                          l1772 7298                          l1748 6EC6  
                        l1756 6FC4                          l1764 6FE2                          l1932 7284  
                        l1924 726E                          l1916 7256                          l1908 7242  
                        l1860 7B2A                          l1852 7AB8                          l1844 7A52  
                        l1828 7046                          l1678 6F24                          l1694 7174  
                        l1766 6DFC                          l1774 72A6                          l1782 72D0  
                        l1758 6FCE                          l1790 6F58                          l1950 711A  
                        l1934 728C                          l1926 7272                          l1918 725C  
                        l1862 7B46                          l1854 7AC6                          l1846 7A64  
                        l1792 6E2C                          l1688 6DEC                          l1696 7174  
                        l1776 72B4                          l1784 6F3C                          l1768 6DF4  
                        l1960 7164                          l1952 7140                          l1944 7116  
                        l1936 710C                          l1928 727A                          l1872 7B7C  
                        l1864 7B4A                          l1856 7AE2                          l1848 7A76  
                        l1794 6E48                          l1698 7176                          l1778 72C2  
                        l1786 6F44                          l1890 737C                          l1954 7142  
                        l1938 7112                          l1866 7B66                          l1858 7B24  
                        l1970 74CA                          l1962 74AC                          l1788 6F56  
                        l1892 73C0                          l1876 7364                          l1956 7152  
                        l1868 7B76                          l1980 7502                          l1972 74D8  
                        l1964 74B0                          l1894 73C4                          l1878 7368  
                        l1958 7154                          l1982 7510                          l1990 753A  
                        l1974 74E0                          l1966 74BE                          l1798 72F8  
                        l1896 73E0                          l1888 7370                          l1992 754A  
                        l1984 7526                          l1976 74F2                          l1968 74C6  
                        l1898 73E4                          l1994 7552                          l1986 752E  
                        l1978 74FA                          l1988 7534                          l1998 6ED0  
                        u1000 7C8A                          u1001 7C86                          u1010 7CAC  
                        u1011 7CA8                          u1020 7CF2                          u1100 75F4  
                        u1021 7CEE                          u1101 75F0                          u1030 7D14  
                        u1110 761A                          u1031 7D10                          u1111 7616  
                        u1120 70AE                          u1040 77FE                          u1121 70AA  
                        u1041 77FA                          u1050 7834                          u1051 7830  
                        u1060 7876                          u1140 776A                          u1061 7872  
                        u1141 7766                          u1070 78B4                          u1150 7784  
                        u1071 78B0                          u1207 7250                          u1151 7780  
                        u1080 75B2                          u1160 77A0                          u1081 75AE  
                        u1217 7262                          u1161 779C                          u1090 75D4  
                        u1170 77B2                          u1091 75D0                          u1227 7274  
                        u1171 77AE                          u1237 7286                          u1247 7190  
                        u1257 71BA                          u1187 77DA                          u1197 7238  
                        _TMR1 000FCE              ??_initialisation 0003                          _main 7710  
                        _rand 7002                          fsr2h 000FDA                          indf1 000FE7  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        prodh 000FF4                          prodl 000FF3                          start 0000  
             ?_lcd_putMessage 0007                 __CFG_IESO$OFF 000000              ??_afficheTabMine 000A  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000               ??_lcd_ecritChar 0004  
                       ?_main 0001                         ?_rand 000D               __end_of___awmod 755C  
                       _ANSEL 000F7E                         _PORTD 000F83                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISD 000F95                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
             __end_of_deplace 7D40           ___lmul@multiplicand 0005                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
             ??_lcd_initCGRam 0004                         _gagne 755C                         _randx 0027  
                       _srand 6E0A                         main@x 0025                         main@y 0026  
                       tablat 000FF5                         status 000FD8                __CFG_HFOFST$ON 000000  
              __CFG_PBADEN$ON 000000              _metToucheCombien 7632               __initialization 71CC  
                __end_of_main 77EE                  __end_of_rand 7054           enleveTuilesAutour@i 0009  
         enleveTuilesAutour@j 000B           enleveTuilesAutour@x 0006           enleveTuilesAutour@y 0001  
        lcd_putMessage@chaine 0007    calculToucheCombien@colonne 0009                        ??_main 0022  
                      ??_rand 000F                 __activetblptr 000002                        ?_gagne 0007  
                      _ADCON1 000FC1                        _ADRESH 000FC4                        ?_srand 0001  
                      _ANSELH 000F7F                   initTabVue@i 000B                   initTabVue@j 0009  
              __CFG_WDTEN$OFF 000000                  ?_rempliMines 0015                __CFG_XINST$OFF 000000  
              lcd_initCGRam@i 0006                lcd_initCGRam@j 0007                getAnalog@canal 0002  
            __end_of_lcd_busy 6F3C              __end_of_lcd_init 6EA2                        ___lmul 72F8  
                      ___wmul 6E2C                __CFG_STVREN$ON 000000                     ??___awmod 0013  
                      _demine 77EE                rempliMines@col 001C                        gagne@i 000E  
                      gagne@j 0010                        clear_0 7212                        clear_1 721E  
             ___awmod@divisor 0011                     ??_deplace 000A               ___awmod@counter 0013  
                __pdataCOMRAM 0027                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                        srand@x 0001        __size_of_afficheTabVue 005C  
           _lcd_resetSequence 722E                    __accesstop 0060       __end_of__initialization 7224  
         _lcd_strobeEnableBit 6DEC            ?_lcd_resetSequence 0001                 ___rparam_used 000001  
              __pcstackCOMRAM 0001           _lcd_effaceAffichage 6DFC                  __pidataBANK0 6F76  
         ??_lcd_resetSequence 0003                 __end_of_gagne 7632       enleveTuilesAutour@ligne 0008  
               __end_of_srand 6E18          ?_lcd_strobeEnableBit 0001            __size_of_getAnalog 0028  
        ?_lcd_effaceAffichage 0001            __size_of_lcd_wrCom 0062                       ??_gagne 0009  
   __end_of_lcd_resetSequence 7292                       ??_srand 0003      __size_of_lcd_lireDonnees 0006  
           _lcd_ecrireDonnees 6E18                    __pbssBANK0 0060                    __pbssBANK1 0100  
            ??_lcd_putMessage 0009            ?_lcd_ecrireDonnees 0001      __size_of_lcd_curseurHome 0008  
         ??_lcd_ecrireDonnees 0001                       ?___lmul 0001                       ?___wmul 0001  
                     ?_demine 000D                 _afficheTabVue 70B0                ___lmul@product 0009  
 __size_of_enleveTuilesAutour 00A0         ??_lcd_strobeEnableBit 0001  __size_of_calculToucheCombien 0144  
    __end_of_metToucheCombien 7710                    _lcd_gotoXY 7292         ??_lcd_effaceAffichage 0004  
                  _lcd_wrData 6EA2     __end_of_lcd_ecrireDonnees 6E2C                     ?_lcd_busy 0001  
                   ?_lcd_init 0001       lcd_ecrireDonnees@donnee 0002                    _m_tabMines 0060  
           __end_of_getAnalog 6E7A          __size_of_rempliMines 0134                       __Hparam 0000  
                     __Lparam 0000                    _initTabVue 7402             __end_of_lcd_wrCom 71CC  
              ?_afficheTabVue 0001               __size_of___lmul 006A                       ___awmod 74AC  
             __size_of___wmul 0026               __size_of_demine 011C                       __pcinit 71CC  
                   _ANSELbits 000F7E                       __ramtop 0600                       _deplace 7B82  
                     __ptext0 7710                       __ptext1 790A                       __ptext2 7002  
                     __ptext3 72F8                       __ptext4 74AC                       __ptext5 7632  
                     __ptext6 7A3E                       __ptext7 6E7A                       __ptext8 722E  
                     __ptext9 710C         __end_of_lcd_ecritChar 7002               lcd_busy@adresse 0002  
                   _T1CONbits 000FCD              ___awmod@dividend 000F                       demine@x 0012  
                     demine@y 000D              lcd_ecritChar@car 0004                    ??_lcd_busy 0001  
                  ??_lcd_init 0008    __size_of_lcd_resetSequence 0064          end_of_initialization 7224  
       __end_of_lcd_initCGRam 716A                 __Lmediumconst 0000             ??_lcd_lireDonnees 0001  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc2 000FDE       __size_of_initialisation 0034             ??_lcd_curseurHome 0004  
         lcd_ecritChar@posRam 0005                     _PORTAbits 000F80                     _PORTBbits 000F81  
     __size_of_afficheTabMine 005C                   ?_lcd_gotoXY 0004                   ?_lcd_wrData 0001  
  __size_of_lcd_ecrireDonnees 0014               ??_afficheTabVue 000A                   ?_initTabVue 0001  
              __end_of___lmul 7362                __end_of___wmul 6E52                __end_of_demine 790A  
               __pidataCOMRAM 6DE2           start_initialization 71CC           _calculToucheCombien 7A3E  
         __size_of_lcd_gotoXY 0066                      ??___lmul 0009                      ??___wmul 0005  
               rempliMines@nb 0015           __size_of_lcd_wrData 002E                      ??_demine 000E  
                 __pdataBANK0 00B4              __CFG_LPT1OSC$OFF 000000          ?_calculToucheCombien 0007  
           ?_metToucheCombien 0001           __size_of_initTabVue 00AA            ??_metToucheCombien 0017  
           __size_of_lcd_busy 0038             __size_of_lcd_init 0028             __CFG_CCP2MX$PORTC 000000  
                   _getAnalog 6E52   __end_of_lcd_strobeEnableBit 6DF4                _initialisation 6ED0  
  __end_of_enleveTuilesAutour 7402                      ?___awmod 000F                      ?_deplace 0006  
 __end_of_lcd_effaceAffichage 6E0A                _afficheTabMine 7054                     _lcd_wrCom 716A  
       ??_calculToucheCombien 000B     enleveTuilesAutour@colonne 0007                __size_of_gagne 00D6  
             _lcd_lireDonnees 6DE6           lcd_wrData@caractere 0003                __size_of_srand 000E  
               ??_rempliMines 0017               _lcd_curseurHome 6DF4                ___wmul@product 0005  
                   deplace@aX 000B                     deplace@aY 000D                     deplace@px 0006  
                   deplace@py 0008        __end_of_initialisation 6F04                    ?_getAnalog 0001  
            __CFG_WDTPS$32768 000000       __size_of_lcd_putMessage 003A        __end_of_afficheTabMine 70B0  
                  ?_lcd_wrCom 0001                    _ADCON0bits 000FC2                    _ADCON2bits 000FC0  
           ___wmul@multiplier 0001                  ??_lcd_gotoXY 0005                  ??_lcd_wrData 0003  
           lcd_wrCom@commande 0003             ___lmul@multiplier 0001                     copy_data0 71E0  
                   copy_data1 7200        __size_of_lcd_ecritChar 004C                      __Hrparam 0000  
             ?_initialisation 0001           __end_of_rempliMines 7A3E                      __Lrparam 0000  
                ??_initTabVue 0007            __CFG_BOREN$SBORDIS 000000                  rempliMines@i 001E  
                rempliMines@j 0020            __end_of_lcd_gotoXY 72F8            __end_of_lcd_wrData 6ED0  
             ?_afficheTabMine 0001              __size_of___awmod 00B0        __size_of_lcd_initCGRam 005E  
             lcd_putMessage@j 0009               afficheTabMine@i 000A              __size_of_deplace 01BE  
     __end_of_lcd_lireDonnees 6DEC                      _matCGRAM 00B4       __end_of_lcd_curseurHome 6DFC  
                    __ptext10 6DF4                      __ptext11 6ED0                      __ptext20 7054  
                    __ptext12 6E0A                      __ptext21 6F3C                      __ptext13 7402  
                    __ptext30 6DE6                      __ptext22 6FB6                      __ptext14 755C  
                    __ptext31 6E2C                      __ptext23 6EA2                      __ptext15 7B82  
                    __ptext24 7292                      __ptext16 6E52                      __ptext25 6DFC  
                    __ptext17 77EE                      __ptext26 716A                      __ptext18 7362  
                    __ptext27 6DEC                      __ptext19 70B0                      __ptext28 6E18  
                    __ptext29 6F04             metToucheCombien@i 001A             metToucheCombien@j 001C  
                    _lcd_busy 6F04                      _lcd_init 6E7A            __end_of_initTabVue 74AC  
            rempliMines@i_417 001A      calculToucheCombien@ligne 0007                      _m_tabVue 0100  
    calculToucheCombien@total 000E              rempliMines@ligne 001D                 __size_of_main 00DE  
               __size_of_rand 0052                   gagne@pMines 0007                      gagne@ttl 000D  
                 ??_getAnalog 0001         __end_of_afficheTabVue 710C                   ??_lcd_wrCom 0003  
               _lcd_ecritChar 6FB6                afficheTabVue@i 000A                 _lcd_initCGRam 710C  
                 _rempliMines 790A          calculToucheCombien@i 0013          calculToucheCombien@j 0015  
        calculToucheCombien@x 000F          calculToucheCombien@y 0011     __size_of_metToucheCombien 00DE  
              _lcd_putMessage 6F3C                ?_lcd_ecritChar 0001              ?_lcd_lireDonnees 0001  
          _enleveTuilesAutour 7362              ?_lcd_curseurHome 0001                ?_lcd_initCGRam 0001  
         ?_enleveTuilesAutour 0001             __CFG_FOSC$INTIO67 000000        __end_of_lcd_putMessage 6F76  
