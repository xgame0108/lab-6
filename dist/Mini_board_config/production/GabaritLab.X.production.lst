

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 05 10:18:09 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47  0000                     
    48                           ; Version 2.10
    49                           ; Generated 31/07/2019 GMT
    50                           ; 
    51                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F45K20 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataCOMRAM
    84  0070F4                     __pidataCOMRAM:
    85                           	opt callstack 0
    86                           
    87                           ;initializer for _randx
    88  0070F4  0001               	dw	1
    89  0070F6  0000               	dw	0
    90                           
    91                           	psect	idataBANK0
    92  007288                     __pidataBANK0:
    93                           	opt callstack 0
    94                           
    95                           ;initializer for _matCGRAM
    96  007288  08                 	db	8
    97  007289  04                 	db	4
    98  00728A  04                 	db	4
    99  00728B  0A                 	db	10
   100  00728C  11                 	db	17
   101  00728D  1F                 	db	31
   102  00728E  11                 	db	17
   103  00728F  00                 	db	0
   104  007290  04                 	db	4
   105  007291  04                 	db	4
   106  007292  1B                 	db	27
   107  007293  04                 	db	4
   108  007294  04                 	db	4
   109  007295  1B                 	db	27
   110  007296  04                 	db	4
   111  007297  04                 	db	4
   112  007298  00                 	db	0
   113  007299  0E                 	db	14
   114  00729A  1F                 	db	31
   115  00729B  1F                 	db	31
   116  00729C  1F                 	db	31
   117  00729D  1F                 	db	31
   118  00729E  0E                 	db	14
   119  00729F  00                 	db	0
   120  0072A0  00                 	db	0
   121  0072A1  00                 	db	0
   122  0072A2  15                 	db	21
   123  0072A3  0E                 	db	14
   124  0072A4  1B                 	db	27
   125  0072A5  0E                 	db	14
   126  0072A6  15                 	db	21
   127  0072A7  00                 	db	0
   128  0072A8  08                 	db	8
   129  0072A9  04                 	db	4
   130  0072AA  1F                 	db	31
   131  0072AB  10                 	db	16
   132  0072AC  1E                 	db	30
   133  0072AD  10                 	db	16
   134  0072AE  1F                 	db	31
   135  0072AF  00                 	db	0
   136  0072B0  04                 	db	4
   137  0072B1  0A                 	db	10
   138  0072B2  0E                 	db	14
   139  0072B3  11                 	db	17
   140  0072B4  1F                 	db	31
   141  0072B5  10                 	db	16
   142  0072B6  0E                 	db	14
   143  0072B7  00                 	db	0
   144  0072B8  08                 	db	8
   145  0072B9  04                 	db	4
   146  0072BA  0E                 	db	14
   147  0072BB  01                 	db	1
   148  0072BC  0F                 	db	15
   149  0072BD  11                 	db	17
   150  0072BE  0F                 	db	15
   151  0072BF  00                 	db	0
   152  0072C0  04                 	db	4
   153  0072C1  0A                 	db	10
   154  0072C2  0E                 	db	14
   155  0072C3  01                 	db	1
   156  0072C4  0F                 	db	15
   157  0072C5  11                 	db	17
   158  0072C6  0F                 	db	15
   159  0072C7  00                 	db	0
   160  0000                     _TMR1	set	4046
   161  0000                     _PORTAbits	set	3968
   162  0000                     _PORTD	set	3971
   163  0000                     _ADCON2bits	set	4032
   164  0000                     _ADCON1	set	4033
   165  0000                     _ANSELbits	set	3966
   166  0000                     _T1CONbits	set	4045
   167  0000                     _TRISA	set	3986
   168  0000                     _ANSEL	set	3966
   169  0000                     _TRISB	set	3987
   170  0000                     _ANSELH	set	3967
   171  0000                     _TRISD	set	3989
   172  0000                     _ADRESH	set	4036
   173  0000                     _ADCON0bits	set	4034
   174  0000                     _PORTBbits	set	3969
   175                           
   176                           ; #config settings
   177  0000                     
   178                           	psect	cinit
   179  0074DE                     __pcinit:
   180                           	opt callstack 0
   181  0074DE                     start_initialization:
   182                           	opt callstack 0
   183  0074DE                     __initialization:
   184                           	opt callstack 0
   185                           
   186                           ; Initialize objects allocated to BANK0 (64 bytes)
   187                           ; load TBLPTR registers with __pidataBANK0
   188  0074DE  0E88               	movlw	low __pidataBANK0
   189  0074E0  6EF6               	movwf	tblptrl,c
   190  0074E2  0E72               	movlw	high __pidataBANK0
   191  0074E4  6EF7               	movwf	tblptrh,c
   192  0074E6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   193  0074E8  6EF8               	movwf	tblptru,c
   194  0074EA  EE00  F0B4         	lfsr	0,__pdataBANK0
   195  0074EE  EE10 F040          	lfsr	1,64
   196  0074F2                     copy_data0:
   197  0074F2  0009               	tblrd		*+
   198  0074F4  CFF5 FFEE          	movff	tablat,postinc0
   199  0074F8  50E5               	movf	postdec1,w,c
   200  0074FA  50E1               	movf	fsr1l,w,c
   201  0074FC  E1FA               	bnz	copy_data0
   202                           
   203                           ; Initialize objects allocated to COMRAM (4 bytes)
   204                           ; load TBLPTR registers with __pidataCOMRAM
   205  0074FE  0EF4               	movlw	low __pidataCOMRAM
   206  007500  6EF6               	movwf	tblptrl,c
   207  007502  0E70               	movlw	high __pidataCOMRAM
   208  007504  6EF7               	movwf	tblptrh,c
   209  007506  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   210  007508  6EF8               	movwf	tblptru,c
   211  00750A  EE00  F027         	lfsr	0,__pdataCOMRAM
   212  00750E  EE10 F004          	lfsr	1,4
   213  007512                     copy_data1:
   214  007512  0009               	tblrd		*+
   215  007514  CFF5 FFEE          	movff	tablat,postinc0
   216  007518  50E5               	movf	postdec1,w,c
   217  00751A  50E1               	movf	fsr1l,w,c
   218  00751C  E1FA               	bnz	copy_data1
   219                           
   220                           ; Clear objects allocated to BANK1 (84 bytes)
   221  00751E  EE01  F000         	lfsr	0,__pbssBANK1
   222  007522  0E54               	movlw	84
   223  007524                     clear_0:
   224  007524  6AEE               	clrf	postinc0,c
   225  007526  06E8               	decf	wreg,f,c
   226  007528  E1FD               	bnz	clear_0
   227                           
   228                           ; Clear objects allocated to BANK0 (84 bytes)
   229  00752A  EE00  F060         	lfsr	0,__pbssBANK0
   230  00752E  0E54               	movlw	84
   231  007530                     clear_1:
   232  007530  6AEE               	clrf	postinc0,c
   233  007532  06E8               	decf	wreg,f,c
   234  007534  E1FD               	bnz	clear_1
   235  007536                     end_of_initialization:
   236                           	opt callstack 0
   237  007536                     __end_of__initialization:
   238                           	opt callstack 0
   239  007536  0E00               	movlw	low (__Lmediumconst shr (0+16))
   240  007538  6EF8               	movwf	tblptru,c
   241  00753A  0100               	movlb	0
   242  00753C  EF3A  F03B         	goto	_main	;jump to C main() function
   243                           
   244                           	psect	dataCOMRAM
   245  000027                     __pdataCOMRAM:
   246                           	opt callstack 0
   247  000027                     _randx:
   248                           	opt callstack 0
   249  000027                     	ds	4
   250                           
   251                           	psect	bssBANK0
   252  000060                     __pbssBANK0:
   253                           	opt callstack 0
   254  000060                     _m_tabMines:
   255                           	opt callstack 0
   256  000060                     	ds	84
   257                           
   258                           	psect	dataBANK0
   259  0000B4                     __pdataBANK0:
   260                           	opt callstack 0
   261  0000B4                     _matCGRAM:
   262                           	opt callstack 0
   263  0000B4                     	ds	64
   264                           
   265                           	psect	bssBANK1
   266  000100                     __pbssBANK1:
   267                           	opt callstack 0
   268  000100                     _m_tabVue:
   269                           	opt callstack 0
   270  000100                     	ds	84
   271                           
   272                           	psect	cstackCOMRAM
   273  000001                     __pcstackCOMRAM:
   274                           	opt callstack 0
   275  000001                     ??_getAnalog:
   276  000001                     ??_lcd_ecrireDonnees:
   277  000001                     ??_lcd_busy:
   278  000001                     ?___wmul:
   279                           	opt callstack 0
   280  000001                     ?___lmul:
   281                           	opt callstack 0
   282  000001                     enleveTuilesAutour@y:
   283                           	opt callstack 0
   284  000001                     ___wmul@multiplier:
   285                           	opt callstack 0
   286  000001                     srand@x:
   287                           	opt callstack 0
   288  000001                     ___lmul@multiplier:
   289                           	opt callstack 0
   290                           
   291                           ; 4 bytes @ 0x0
   292  000001                     	ds	1
   293  000002                     ??_enleveTuilesAutour:
   294  000002                     getAnalog@canal:
   295                           	opt callstack 0
   296  000002                     lcd_ecrireDonnees@donnee:
   297                           	opt callstack 0
   298  000002                     lcd_busy@adresse:
   299                           	opt callstack 0
   300                           
   301                           ; 1 bytes @ 0x1
   302  000002                     	ds	1
   303  000003                     ??_lcd_resetSequence:
   304  000003                     lcd_wrCom@commande:
   305                           	opt callstack 0
   306  000003                     lcd_wrData@caractere:
   307                           	opt callstack 0
   308  000003                     ___wmul@multiplicand:
   309                           	opt callstack 0
   310                           
   311                           ; 2 bytes @ 0x2
   312  000003                     	ds	1
   313  000004                     ??_lcd_initCGRam:
   314  000004                     lcd_gotoXY@y:
   315                           	opt callstack 0
   316  000004                     lcd_ecritChar@car:
   317                           	opt callstack 0
   318                           
   319                           ; 1 bytes @ 0x3
   320  000004                     	ds	1
   321  000005                     lcd_gotoXY@x:
   322                           	opt callstack 0
   323  000005                     lcd_ecritChar@posRam:
   324                           	opt callstack 0
   325  000005                     ___wmul@product:
   326                           	opt callstack 0
   327  000005                     ___lmul@multiplicand:
   328                           	opt callstack 0
   329                           
   330                           ; 4 bytes @ 0x4
   331  000005                     	ds	1
   332  000006                     enleveTuilesAutour@x:
   333                           	opt callstack 0
   334  000006                     lcd_initCGRam@i:
   335                           	opt callstack 0
   336  000006                     deplace@px:
   337                           	opt callstack 0
   338                           
   339                           ; 2 bytes @ 0x5
   340  000006                     	ds	1
   341  000007                     ??_initTabVue:
   342  000007                     enleveTuilesAutour@colonne:
   343                           	opt callstack 0
   344  000007                     lcd_initCGRam@j:
   345                           	opt callstack 0
   346  000007                     calculToucheCombien@ligne:
   347                           	opt callstack 0
   348  000007                     gagne@pMines:
   349                           	opt callstack 0
   350  000007                     lcd_putMessage@chaine:
   351                           	opt callstack 0
   352                           
   353                           ; 2 bytes @ 0x6
   354  000007                     	ds	1
   355  000008                     enleveTuilesAutour@ligne:
   356                           	opt callstack 0
   357  000008                     deplace@py:
   358                           	opt callstack 0
   359                           
   360                           ; 2 bytes @ 0x7
   361  000008                     	ds	1
   362  000009                     ??_gagne:
   363  000009                     lcd_putMessage@j:
   364                           	opt callstack 0
   365  000009                     initTabVue@j:
   366                           	opt callstack 0
   367  000009                     calculToucheCombien@colonne:
   368                           	opt callstack 0
   369  000009                     enleveTuilesAutour@i:
   370                           	opt callstack 0
   371  000009                     ___lmul@product:
   372                           	opt callstack 0
   373                           
   374                           ; 4 bytes @ 0x8
   375  000009                     	ds	1
   376  00000A                     ??_deplace:
   377  00000A                     afficheTabVue@i:
   378                           	opt callstack 0
   379  00000A                     afficheTabMine@i:
   380                           	opt callstack 0
   381                           
   382                           ; 2 bytes @ 0x9
   383  00000A                     	ds	1
   384  00000B                     ??_calculToucheCombien:
   385  00000B                     initTabVue@i:
   386                           	opt callstack 0
   387  00000B                     deplace@aX:
   388                           	opt callstack 0
   389  00000B                     enleveTuilesAutour@j:
   390                           	opt callstack 0
   391                           
   392                           ; 2 bytes @ 0xA
   393  00000B                     	ds	2
   394  00000D                     ?_rand:
   395                           	opt callstack 0
   396  00000D                     demine@y:
   397                           	opt callstack 0
   398  00000D                     gagne@ttl:
   399                           	opt callstack 0
   400  00000D                     deplace@aY:
   401                           	opt callstack 0
   402                           
   403                           ; 2 bytes @ 0xC
   404  00000D                     	ds	1
   405  00000E                     ??_demine:
   406  00000E                     calculToucheCombien@total:
   407                           	opt callstack 0
   408  00000E                     gagne@i:
   409                           	opt callstack 0
   410                           
   411                           ; 2 bytes @ 0xD
   412  00000E                     	ds	1
   413  00000F                     ?___awmod:
   414                           	opt callstack 0
   415  00000F                     calculToucheCombien@x:
   416                           	opt callstack 0
   417  00000F                     ___awmod@dividend:
   418                           	opt callstack 0
   419                           
   420                           ; 2 bytes @ 0xE
   421  00000F                     	ds	1
   422  000010                     gagne@j:
   423                           	opt callstack 0
   424                           
   425                           ; 2 bytes @ 0xF
   426  000010                     	ds	1
   427  000011                     calculToucheCombien@y:
   428                           	opt callstack 0
   429  000011                     ___awmod@divisor:
   430                           	opt callstack 0
   431                           
   432                           ; 2 bytes @ 0x10
   433  000011                     	ds	1
   434  000012                     demine@x:
   435                           	opt callstack 0
   436                           
   437                           ; 1 bytes @ 0x11
   438  000012                     	ds	1
   439  000013                     ___awmod@counter:
   440                           	opt callstack 0
   441  000013                     calculToucheCombien@i:
   442                           	opt callstack 0
   443                           
   444                           ; 2 bytes @ 0x12
   445  000013                     	ds	1
   446  000014                     ___awmod@sign:
   447                           	opt callstack 0
   448                           
   449                           ; 1 bytes @ 0x13
   450  000014                     	ds	1
   451  000015                     rempliMines@nb:
   452                           	opt callstack 0
   453  000015                     calculToucheCombien@j:
   454                           	opt callstack 0
   455                           
   456                           ; 2 bytes @ 0x14
   457  000015                     	ds	2
   458  000017                     ??_rempliMines:
   459  000017                     ??_metToucheCombien:
   460                           
   461                           ; 1 bytes @ 0x16
   462  000017                     	ds	3
   463  00001A                     rempliMines@i_417:
   464                           	opt callstack 0
   465  00001A                     metToucheCombien@i:
   466                           	opt callstack 0
   467                           
   468                           ; 2 bytes @ 0x19
   469  00001A                     	ds	2
   470  00001C                     rempliMines@col:
   471                           	opt callstack 0
   472  00001C                     metToucheCombien@j:
   473                           	opt callstack 0
   474                           
   475                           ; 2 bytes @ 0x1B
   476  00001C                     	ds	1
   477  00001D                     rempliMines@ligne:
   478                           	opt callstack 0
   479                           
   480                           ; 1 bytes @ 0x1C
   481  00001D                     	ds	1
   482  00001E                     rempliMines@i:
   483                           	opt callstack 0
   484                           
   485                           ; 2 bytes @ 0x1D
   486  00001E                     	ds	2
   487  000020                     rempliMines@j:
   488                           	opt callstack 0
   489                           
   490                           ; 2 bytes @ 0x1F
   491  000020                     	ds	2
   492  000022                     ??_main:
   493                           
   494                           ; 1 bytes @ 0x21
   495  000022                     	ds	1
   496  000023                     main@nbMines:
   497                           	opt callstack 0
   498                           
   499                           ; 2 bytes @ 0x22
   500  000023                     	ds	2
   501  000025                     main@x:
   502                           	opt callstack 0
   503                           
   504                           ; 1 bytes @ 0x24
   505  000025                     	ds	1
   506  000026                     main@y:
   507                           	opt callstack 0
   508                           
   509                           ; 1 bytes @ 0x25
   510  000026                     	ds	1
   511                           
   512 ;;
   513 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   514 ;;
   515 ;; *************** function _main *****************
   516 ;; Defined at:
   517 ;;		line 54 in file "main.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;		None
   520 ;; Auto vars:     Size  Location     Type
   521 ;;  nbMines         2   34[COMRAM] int 
   522 ;;  y               1   37[COMRAM] unsigned char 
   523 ;;  x               1   36[COMRAM] unsigned char 
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   533 ;;      Params:         0       0       0       0       0       0       0
   534 ;;      Locals:         4       0       0       0       0       0       0
   535 ;;      Temps:          1       0       0       0       0       0       0
   536 ;;      Totals:         5       0       0       0       0       0       0
   537 ;;Total ram usage:        5 bytes
   538 ;; Hardware stack levels required when called:    7
   539 ;; This function calls:
   540 ;;		_afficheTabMine
   541 ;;		_afficheTabVue
   542 ;;		_demine
   543 ;;		_deplace
   544 ;;		_gagne
   545 ;;		_initTabVue
   546 ;;		_initialisation
   547 ;;		_lcd_curseurHome
   548 ;;		_lcd_effaceAffichage
   549 ;;		_lcd_init
   550 ;;		_metToucheCombien
   551 ;;		_rempliMines
   552 ;; This function is called by:
   553 ;;		Startup code after reset
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           	psect	text0
   558  007674                     __ptext0:
   559                           	opt callstack 0
   560  007674                     _main:
   561                           	opt callstack 24
   562  007674                     
   563                           ;main.c: 56: char x = 1;
   564  007674  0E01               	movlw	1
   565  007676  6E25               	movwf	main@x^0,c
   566                           
   567                           ;main.c: 57: char y = 1;
   568  007678  0E01               	movlw	1
   569  00767A  6E26               	movwf	main@y^0,c
   570                           
   571                           ;main.c: 58: int nbMines = 4;
   572  00767C  0E00               	movlw	0
   573  00767E  6E24               	movwf	(main@nbMines+1)^0,c
   574  007680  0E04               	movlw	4
   575  007682  6E23               	movwf	main@nbMines^0,c
   576  007684                     
   577                           ;main.c: 60: initialisation();
   578  007684  ECF1  F038         	call	_initialisation	;wreg free
   579  007688                     
   580                           ;main.c: 61: lcd_init();
   581  007688  ECC6  F038         	call	_lcd_init	;wreg free
   582  00768C                     
   583                           ;main.c: 63: lcd_effaceAffichage();
   584  00768C  EC87  F038         	call	_lcd_effaceAffichage	;wreg free
   585  007690                     
   586                           ;main.c: 64: lcd_curseurHome();
   587  007690  EC83  F038         	call	_lcd_curseurHome	;wreg free
   588  007694                     
   589                           ;main.c: 66: initTabVue();
   590  007694  ECD9  F03B         	call	_initTabVue	;wreg free
   591  007698                     
   592                           ;main.c: 67: rempliMines(nbMines);
   593  007698  C023  F015         	movff	main@nbMines,rempliMines@nb
   594  00769C  C024  F016         	movff	main@nbMines+1,rempliMines@nb+1
   595  0076A0  ECE5  F03D         	call	_rempliMines	;wreg free
   596  0076A4                     
   597                           ;main.c: 68: metToucheCombien();
   598  0076A4  ECEA  F03C         	call	_metToucheCombien	;wreg free
   599  0076A8                     
   600                           ;main.c: 69: afficheTabVue();
   601  0076A8  ECE1  F039         	call	_afficheTabVue	;wreg free
   602  0076AC                     l2231:
   603                           
   604                           ;main.c: 72: {;main.c: 73: deplace(&x, &y);
   605  0076AC  0E25               	movlw	low main@x
   606  0076AE  6E06               	movwf	deplace@px^0,c
   607  0076B0  0E00               	movlw	high main@x
   608  0076B2  6E07               	movwf	(deplace@px+1)^0,c
   609  0076B4  0E26               	movlw	low main@y
   610  0076B6  6E08               	movwf	deplace@py^0,c
   611  0076B8  0E00               	movlw	high main@y
   612  0076BA  6E09               	movwf	(deplace@py+1)^0,c
   613  0076BC  EC21  F03F         	call	_deplace	;wreg free
   614  0076C0                     
   615                           ;main.c: 74: _delay((unsigned long)((100)*(1000000/4000.0)));
   616  0076C0  0E21               	movlw	33
   617  0076C2  6E22               	movwf	??_main^0,c
   618  0076C4  0E76               	movlw	118
   619  0076C6                     u1147:
   620  0076C6  2EE8               	decfsz	wreg,f,c
   621  0076C8  D7FE               	bra	u1147
   622  0076CA  2E22               	decfsz	??_main^0,f,c
   623  0076CC  D7FC               	bra	u1147
   624  0076CE  F000 F000          	nop2	
   625  0076D2                     
   626                           ;main.c: 75: if(PORTBbits.RB1 == 0){
   627  0076D2  B281               	btfsc	129,1,c	;volatile
   628  0076D4  EF6E  F03B         	goto	u1121
   629  0076D8  EF70  F03B         	goto	u1120
   630  0076DC                     u1121:
   631  0076DC  EF75  F03B         	goto	l2239
   632  0076E0                     u1120:
   633  0076E0                     
   634                           ;main.c: 76: demine(x, y);
   635  0076E0  C026  F00D         	movff	main@y,demine@y
   636  0076E4  5025               	movf	main@x^0,w,c
   637  0076E6  EC59  F03D         	call	_demine
   638  0076EA                     l2239:
   639                           
   640                           ;main.c: 77: };main.c: 78: if(gagne(&nbMines)){
   641  0076EA  0E23               	movlw	low main@nbMines
   642  0076EC  6E07               	movwf	gagne@pMines^0,c
   643  0076EE  0E00               	movlw	high main@nbMines
   644  0076F0  6E08               	movwf	(gagne@pMines+1)^0,c
   645  0076F2  EC86  F03C         	call	_gagne	;wreg free
   646  0076F6  0900               	iorlw	0
   647  0076F8  B4D8               	btfsc	status,2,c
   648  0076FA  EF81  F03B         	goto	u1131
   649  0076FE  EF83  F03B         	goto	u1130
   650  007702                     u1131:
   651  007702  EF56  F03B         	goto	l2231
   652  007706                     u1130:
   653  007706                     
   654                           ;main.c: 79: afficheTabMine();
   655  007706  ECB3  F039         	call	_afficheTabMine	;wreg free
   656  00770A  EF56  F03B         	goto	l2231
   657  00770E  EF00  F000         	goto	start
   658  007712                     __end_of_main:
   659                           	opt callstack 0
   660                           
   661 ;; *************** function _rempliMines *****************
   662 ;; Defined at:
   663 ;;		line 123 in file "main.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;  nb              2   20[COMRAM] int 
   666 ;; Auto vars:     Size  Location     Type
   667 ;;  j               2   31[COMRAM] int 
   668 ;;  i               2   25[COMRAM] int 
   669 ;;  i               2   29[COMRAM] int 
   670 ;;  ligne           1   28[COMRAM] unsigned char 
   671 ;;  col             1   27[COMRAM] unsigned char 
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   681 ;;      Params:         2       0       0       0       0       0       0
   682 ;;      Locals:         8       0       0       0       0       0       0
   683 ;;      Temps:          3       0       0       0       0       0       0
   684 ;;      Totals:        13       0       0       0       0       0       0
   685 ;;Total ram usage:       13 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; Hardware stack levels required when called:    2
   688 ;; This function calls:
   689 ;;		___awmod
   690 ;;		___wmul
   691 ;;		_rand
   692 ;; This function is called by:
   693 ;;		_main
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697                           	psect	text1
   698  007BCA                     __ptext1:
   699                           	opt callstack 0
   700  007BCA                     _rempliMines:
   701                           	opt callstack 28
   702  007BCA                     
   703                           ;main.c: 125: char ligne = 0;
   704  007BCA  0E00               	movlw	0
   705  007BCC  6E1D               	movwf	rempliMines@ligne^0,c
   706                           
   707                           ;main.c: 127: for(int i = 0; i < 20; i++){
   708  007BCE  0E00               	movlw	0
   709  007BD0  6E1F               	movwf	(rempliMines@i+1)^0,c
   710  007BD2  0E00               	movlw	0
   711  007BD4  6E1E               	movwf	rempliMines@i^0,c
   712  007BD6                     l2037:
   713                           
   714                           ;main.c: 128: for(int j = 0; j < 4; j++){
   715  007BD6  0E00               	movlw	0
   716  007BD8  6E21               	movwf	(rempliMines@j+1)^0,c
   717  007BDA  0E00               	movlw	0
   718  007BDC  6E20               	movwf	rempliMines@j^0,c
   719  007BDE                     l2043:
   720                           
   721                           ;main.c: 129: m_tabMines[j][i] = 32;
   722  007BDE  C020  F001         	movff	rempliMines@j,___wmul@multiplier
   723  007BE2  C021  F002         	movff	rempliMines@j+1,___wmul@multiplier+1
   724  007BE6  0E00               	movlw	0
   725  007BE8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   726  007BEA  0E15               	movlw	21
   727  007BEC  6E03               	movwf	___wmul@multiplicand^0,c
   728  007BEE  EC9F  F038         	call	___wmul	;wreg free
   729  007BF2  0E60               	movlw	low _m_tabMines
   730  007BF4  6E17               	movwf	??_rempliMines^0,c
   731  007BF6  0E00               	movlw	high _m_tabMines
   732  007BF8  6E18               	movwf	(??_rempliMines+1)^0,c
   733  007BFA  5001               	movf	?___wmul^0,w,c
   734  007BFC  2617               	addwf	??_rempliMines^0,f,c
   735  007BFE  5002               	movf	(?___wmul+1)^0,w,c
   736  007C00  2218               	addwfc	(??_rempliMines+1)^0,f,c
   737  007C02  501E               	movf	rempliMines@i^0,w,c
   738  007C04  2417               	addwf	??_rempliMines^0,w,c
   739  007C06  6ED9               	movwf	fsr2l,c
   740  007C08  501F               	movf	(rempliMines@i+1)^0,w,c
   741  007C0A  2018               	addwfc	(??_rempliMines+1)^0,w,c
   742  007C0C  6EDA               	movwf	fsr2h,c
   743  007C0E  0E20               	movlw	32
   744  007C10  6EDF               	movwf	indf2,c
   745  007C12  4A20               	infsnz	rempliMines@j^0,f,c
   746  007C14  2A21               	incf	(rempliMines@j+1)^0,f,c
   747  007C16  BE21               	btfsc	(rempliMines@j+1)^0,7,c
   748  007C18  EF17  F03E         	goto	u871
   749  007C1C  5021               	movf	(rempliMines@j+1)^0,w,c
   750  007C1E  E109               	bnz	u870
   751  007C20  0E04               	movlw	4
   752  007C22  5C20               	subwf	rempliMines@j^0,w,c
   753  007C24  A0D8               	btfss	status,0,c
   754  007C26  EF17  F03E         	goto	u871
   755  007C2A  EF19  F03E         	goto	u870
   756  007C2E                     u871:
   757  007C2E  EFEF  F03D         	goto	l2043
   758  007C32                     u870:
   759  007C32  4A1E               	infsnz	rempliMines@i^0,f,c
   760  007C34  2A1F               	incf	(rempliMines@i+1)^0,f,c
   761  007C36  BE1F               	btfsc	(rempliMines@i+1)^0,7,c
   762  007C38  EF27  F03E         	goto	u881
   763  007C3C  501F               	movf	(rempliMines@i+1)^0,w,c
   764  007C3E  E109               	bnz	u880
   765  007C40  0E14               	movlw	20
   766  007C42  5C1E               	subwf	rempliMines@i^0,w,c
   767  007C44  A0D8               	btfss	status,0,c
   768  007C46  EF27  F03E         	goto	u881
   769  007C4A  EF29  F03E         	goto	u880
   770  007C4E                     u881:
   771  007C4E  EFEB  F03D         	goto	l2037
   772  007C52                     u880:
   773  007C52                     
   774                           ;main.c: 130: };main.c: 131: };main.c: 133: for(int i = 0; i < nb; i++){
   775  007C52  0E00               	movlw	0
   776  007C54  6E1B               	movwf	(rempliMines@i_417+1)^0,c
   777  007C56  0E00               	movlw	0
   778  007C58  6E1A               	movwf	rempliMines@i_417^0,c
   779  007C5A  EF6F  F03E         	goto	l2063
   780  007C5E                     l2055:
   781                           
   782                           ;main.c: 135: col = rand()%20;
   783  007C5E  EC8A  F039         	call	_rand	;wreg free
   784  007C62  C00D  F00F         	movff	?_rand,___awmod@dividend
   785  007C66  C00E  F010         	movff	?_rand+1,___awmod@dividend+1
   786  007C6A  0E00               	movlw	0
   787  007C6C  6E12               	movwf	(___awmod@divisor+1)^0,c
   788  007C6E  0E14               	movlw	20
   789  007C70  6E11               	movwf	___awmod@divisor^0,c
   790  007C72  EC2E  F03C         	call	___awmod	;wreg free
   791  007C76  500F               	movf	?___awmod^0,w,c
   792  007C78  6E1C               	movwf	rempliMines@col^0,c
   793                           
   794                           ;main.c: 136: ligne = rand()%4;
   795  007C7A  EC8A  F039         	call	_rand	;wreg free
   796  007C7E  500D               	movf	?_rand^0,w,c
   797  007C80  0B03               	andlw	3
   798  007C82  6E1D               	movwf	rempliMines@ligne^0,c
   799  007C84                     
   800                           ;main.c: 137: }while(m_tabMines[ligne][col] != 32);
   801  007C84  501D               	movf	rempliMines@ligne^0,w,c
   802  007C86  0D15               	mullw	21
   803  007C88  0E60               	movlw	low _m_tabMines
   804  007C8A  6E17               	movwf	??_rempliMines^0,c
   805  007C8C  0E00               	movlw	high _m_tabMines
   806  007C8E  6E18               	movwf	(??_rempliMines+1)^0,c
   807  007C90  50F3               	movf	243,w,c
   808  007C92  2617               	addwf	??_rempliMines^0,f,c
   809  007C94  50F4               	movf	244,w,c
   810  007C96  2218               	addwfc	(??_rempliMines+1)^0,f,c
   811  007C98  501C               	movf	rempliMines@col^0,w,c
   812  007C9A  2417               	addwf	??_rempliMines^0,w,c
   813  007C9C  6ED9               	movwf	fsr2l,c
   814  007C9E  0E00               	movlw	0
   815  007CA0  2018               	addwfc	(??_rempliMines+1)^0,w,c
   816  007CA2  6EDA               	movwf	fsr2h,c
   817  007CA4  0E20               	movlw	32
   818  007CA6  18DE               	xorwf	postinc2,w,c
   819  007CA8  A4D8               	btfss	status,2,c
   820  007CAA  EF59  F03E         	goto	u891
   821  007CAE  EF5B  F03E         	goto	u890
   822  007CB2                     u891:
   823  007CB2  EF2F  F03E         	goto	l2055
   824  007CB6                     u890:
   825  007CB6                     
   826                           ;main.c: 138: m_tabMines[ligne][col] = 3;
   827  007CB6  501D               	movf	rempliMines@ligne^0,w,c
   828  007CB8  0D15               	mullw	21
   829  007CBA  0E60               	movlw	low _m_tabMines
   830  007CBC  6E17               	movwf	??_rempliMines^0,c
   831  007CBE  0E00               	movlw	high _m_tabMines
   832  007CC0  6E18               	movwf	(??_rempliMines+1)^0,c
   833  007CC2  50F3               	movf	243,w,c
   834  007CC4  2617               	addwf	??_rempliMines^0,f,c
   835  007CC6  50F4               	movf	244,w,c
   836  007CC8  2218               	addwfc	(??_rempliMines+1)^0,f,c
   837  007CCA  501C               	movf	rempliMines@col^0,w,c
   838  007CCC  2417               	addwf	??_rempliMines^0,w,c
   839  007CCE  6ED9               	movwf	fsr2l,c
   840  007CD0  0E00               	movlw	0
   841  007CD2  2018               	addwfc	(??_rempliMines+1)^0,w,c
   842  007CD4  6EDA               	movwf	fsr2h,c
   843  007CD6  0E03               	movlw	3
   844  007CD8  6EDF               	movwf	indf2,c
   845  007CDA  4A1A               	infsnz	rempliMines@i_417^0,f,c
   846  007CDC  2A1B               	incf	(rempliMines@i_417+1)^0,f,c
   847  007CDE                     l2063:
   848  007CDE  5015               	movf	rempliMines@nb^0,w,c
   849  007CE0  5C1A               	subwf	rempliMines@i_417^0,w,c
   850  007CE2  501B               	movf	(rempliMines@i_417+1)^0,w,c
   851  007CE4  0A80               	xorlw	128
   852  007CE6  6E17               	movwf	??_rempliMines^0,c
   853  007CE8  5016               	movf	(rempliMines@nb+1)^0,w,c
   854  007CEA  0A80               	xorlw	128
   855  007CEC  5817               	subwfb	??_rempliMines^0,w,c
   856  007CEE  A0D8               	btfss	status,0,c
   857  007CF0  EF7C  F03E         	goto	u901
   858  007CF4  EF7E  F03E         	goto	u900
   859  007CF8                     u901:
   860  007CF8  EF2F  F03E         	goto	l2055
   861  007CFC                     u900:
   862  007CFC  0012               	return		;funcret
   863  007CFE                     __end_of_rempliMines:
   864                           	opt callstack 0
   865                           
   866 ;; *************** function _rand *****************
   867 ;; Defined at:
   868 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  2   12[COMRAM] int 
   875 ;; Registers used:
   876 ;;		wreg, status,2, status,0, cstack
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   882 ;;      Params:         2       0       0       0       0       0       0
   883 ;;      Locals:         0       0       0       0       0       0       0
   884 ;;      Temps:          0       0       0       0       0       0       0
   885 ;;      Totals:         2       0       0       0       0       0       0
   886 ;;Total ram usage:        2 bytes
   887 ;; Hardware stack levels used:    1
   888 ;; Hardware stack levels required when called:    1
   889 ;; This function calls:
   890 ;;		___lmul
   891 ;; This function is called by:
   892 ;;		_rempliMines
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896                           	psect	text2
   897  007314                     __ptext2:
   898                           	opt callstack 0
   899  007314                     _rand:
   900                           	opt callstack 28
   901  007314  C027  F001         	movff	_randx,___lmul@multiplier
   902  007318  C028  F002         	movff	_randx+1,___lmul@multiplier+1
   903  00731C  C029  F003         	movff	_randx+2,___lmul@multiplier+2
   904  007320  C02A  F004         	movff	_randx+3,___lmul@multiplier+3
   905  007324  0E6D               	movlw	109
   906  007326  6E05               	movwf	___lmul@multiplicand^0,c
   907  007328  0E4E               	movlw	78
   908  00732A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   909  00732C  0EC6               	movlw	198
   910  00732E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
   911  007330  0E41               	movlw	65
   912  007332  6E08               	movwf	(___lmul@multiplicand+3)^0,c
   913  007334  EC05  F03B         	call	___lmul	;wreg free
   914  007338  C001  F027         	movff	?___lmul,_randx
   915  00733C  C002  F028         	movff	?___lmul+1,_randx+1
   916  007340  C003  F029         	movff	?___lmul+2,_randx+2
   917  007344  C004  F02A         	movff	?___lmul+3,_randx+3
   918  007348  0E39               	movlw	57
   919  00734A  2627               	addwf	_randx^0,f,c
   920  00734C  0E30               	movlw	48
   921  00734E  2228               	addwfc	(_randx+1)^0,f,c
   922  007350  0E00               	movlw	0
   923  007352  2229               	addwfc	(_randx+2)^0,f,c
   924  007354  0E00               	movlw	0
   925  007356  222A               	addwfc	(_randx+3)^0,f,c
   926  007358  0EFF               	movlw	255
   927  00735A  1429               	andwf	(_randx+2)^0,w,c
   928  00735C  6E0D               	movwf	?_rand^0,c
   929  00735E  0E7F               	movlw	127
   930  007360  142A               	andwf	(_randx+3)^0,w,c
   931  007362  6E0E               	movwf	(?_rand+1)^0,c
   932  007364  0012               	return		;funcret
   933  007366                     __end_of_rand:
   934                           	opt callstack 0
   935                           
   936 ;; *************** function ___lmul *****************
   937 ;; Defined at:
   938 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  multiplier      4    0[COMRAM] unsigned long 
   941 ;;  multiplicand    4    4[COMRAM] unsigned long 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  product         4    8[COMRAM] unsigned long 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  4    0[COMRAM] unsigned long 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   953 ;;      Params:         8       0       0       0       0       0       0
   954 ;;      Locals:         4       0       0       0       0       0       0
   955 ;;      Temps:          0       0       0       0       0       0       0
   956 ;;      Totals:        12       0       0       0       0       0       0
   957 ;;Total ram usage:       12 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; This function calls:
   960 ;;		Nothing
   961 ;; This function is called by:
   962 ;;		_rand
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           	psect	text3
   967  00760A                     __ptext3:
   968                           	opt callstack 0
   969  00760A                     ___lmul:
   970                           	opt callstack 28
   971  00760A  0E00               	movlw	0
   972  00760C  6E09               	movwf	___lmul@product^0,c
   973  00760E  0E00               	movlw	0
   974  007610  6E0A               	movwf	(___lmul@product+1)^0,c
   975  007612  0E00               	movlw	0
   976  007614  6E0B               	movwf	(___lmul@product+2)^0,c
   977  007616  0E00               	movlw	0
   978  007618  6E0C               	movwf	(___lmul@product+3)^0,c
   979  00761A                     l1785:
   980  00761A  A001               	btfss	___lmul@multiplier^0,0,c
   981  00761C  EF12  F03B         	goto	u621
   982  007620  EF14  F03B         	goto	u620
   983  007624                     u621:
   984  007624  EF1C  F03B         	goto	l1789
   985  007628                     u620:
   986  007628  5005               	movf	___lmul@multiplicand^0,w,c
   987  00762A  2609               	addwf	___lmul@product^0,f,c
   988  00762C  5006               	movf	(___lmul@multiplicand+1)^0,w,c
   989  00762E  220A               	addwfc	(___lmul@product+1)^0,f,c
   990  007630  5007               	movf	(___lmul@multiplicand+2)^0,w,c
   991  007632  220B               	addwfc	(___lmul@product+2)^0,f,c
   992  007634  5008               	movf	(___lmul@multiplicand+3)^0,w,c
   993  007636  220C               	addwfc	(___lmul@product+3)^0,f,c
   994  007638                     l1789:
   995  007638  90D8               	bcf	status,0,c
   996  00763A  3605               	rlcf	___lmul@multiplicand^0,f,c
   997  00763C  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
   998  00763E  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
   999  007640  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1000  007642  90D8               	bcf	status,0,c
  1001  007644  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  1002  007646  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  1003  007648  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  1004  00764A  3201               	rrcf	___lmul@multiplier^0,f,c
  1005  00764C  5001               	movf	___lmul@multiplier^0,w,c
  1006  00764E  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  1007  007650  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  1008  007652  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  1009  007654  A4D8               	btfss	status,2,c
  1010  007656  EF2F  F03B         	goto	u631
  1011  00765A  EF31  F03B         	goto	u630
  1012  00765E                     u631:
  1013  00765E  EF0D  F03B         	goto	l1785
  1014  007662                     u630:
  1015  007662  C009  F001         	movff	___lmul@product,?___lmul
  1016  007666  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1017  00766A  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1018  00766E  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1019  007672  0012               	return		;funcret
  1020  007674                     __end_of___lmul:
  1021                           	opt callstack 0
  1022                           
  1023 ;; *************** function ___awmod *****************
  1024 ;; Defined at:
  1025 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;  dividend        2   14[COMRAM] int 
  1028 ;;  divisor         2   16[COMRAM] int 
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;  sign            1   19[COMRAM] unsigned char 
  1031 ;;  counter         1   18[COMRAM] unsigned char 
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  2   14[COMRAM] int 
  1034 ;; Registers used:
  1035 ;;		wreg, status,2, status,0
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1041 ;;      Params:         4       0       0       0       0       0       0
  1042 ;;      Locals:         2       0       0       0       0       0       0
  1043 ;;      Temps:          0       0       0       0       0       0       0
  1044 ;;      Totals:         6       0       0       0       0       0       0
  1045 ;;Total ram usage:        6 bytes
  1046 ;; Hardware stack levels used:    1
  1047 ;; This function calls:
  1048 ;;		Nothing
  1049 ;; This function is called by:
  1050 ;;		_rempliMines
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text4
  1055  00785C                     __ptext4:
  1056                           	opt callstack 0
  1057  00785C                     ___awmod:
  1058                           	opt callstack 29
  1059  00785C  0E00               	movlw	0
  1060  00785E  6E14               	movwf	___awmod@sign^0,c
  1061  007860  BE10               	btfsc	(___awmod@dividend+1)^0,7,c
  1062  007862  EF37  F03C         	goto	u790
  1063  007866  EF35  F03C         	goto	u791
  1064  00786A                     u791:
  1065  00786A  EF3D  F03C         	goto	l1955
  1066  00786E                     u790:
  1067  00786E  6C0F               	negf	___awmod@dividend^0,c
  1068  007870  1E10               	comf	(___awmod@dividend+1)^0,f,c
  1069  007872  B0D8               	btfsc	status,0,c
  1070  007874  2A10               	incf	(___awmod@dividend+1)^0,f,c
  1071  007876  0E01               	movlw	1
  1072  007878  6E14               	movwf	___awmod@sign^0,c
  1073  00787A                     l1955:
  1074  00787A  BE12               	btfsc	(___awmod@divisor+1)^0,7,c
  1075  00787C  EF44  F03C         	goto	u800
  1076  007880  EF42  F03C         	goto	u801
  1077  007884                     u801:
  1078  007884  EF48  F03C         	goto	l1959
  1079  007888                     u800:
  1080  007888  6C11               	negf	___awmod@divisor^0,c
  1081  00788A  1E12               	comf	(___awmod@divisor+1)^0,f,c
  1082  00788C  B0D8               	btfsc	status,0,c
  1083  00788E  2A12               	incf	(___awmod@divisor+1)^0,f,c
  1084  007890                     l1959:
  1085  007890  5011               	movf	___awmod@divisor^0,w,c
  1086  007892  1012               	iorwf	(___awmod@divisor+1)^0,w,c
  1087  007894  B4D8               	btfsc	status,2,c
  1088  007896  EF4F  F03C         	goto	u811
  1089  00789A  EF51  F03C         	goto	u810
  1090  00789E                     u811:
  1091  00789E  EF75  F03C         	goto	l1975
  1092  0078A2                     u810:
  1093  0078A2  0E01               	movlw	1
  1094  0078A4  6E13               	movwf	___awmod@counter^0,c
  1095  0078A6  EF59  F03C         	goto	l1965
  1096  0078AA                     l1963:
  1097  0078AA  90D8               	bcf	status,0,c
  1098  0078AC  3611               	rlcf	___awmod@divisor^0,f,c
  1099  0078AE  3612               	rlcf	(___awmod@divisor+1)^0,f,c
  1100  0078B0  2A13               	incf	___awmod@counter^0,f,c
  1101  0078B2                     l1965:
  1102  0078B2  AE12               	btfss	(___awmod@divisor+1)^0,7,c
  1103  0078B4  EF5E  F03C         	goto	u821
  1104  0078B8  EF60  F03C         	goto	u820
  1105  0078BC                     u821:
  1106  0078BC  EF55  F03C         	goto	l1963
  1107  0078C0                     u820:
  1108  0078C0                     l1967:
  1109  0078C0  5011               	movf	___awmod@divisor^0,w,c
  1110  0078C2  5C0F               	subwf	___awmod@dividend^0,w,c
  1111  0078C4  5012               	movf	(___awmod@divisor+1)^0,w,c
  1112  0078C6  5810               	subwfb	(___awmod@dividend+1)^0,w,c
  1113  0078C8  A0D8               	btfss	status,0,c
  1114  0078CA  EF69  F03C         	goto	u831
  1115  0078CE  EF6B  F03C         	goto	u830
  1116  0078D2                     u831:
  1117  0078D2  EF6F  F03C         	goto	l1971
  1118  0078D6                     u830:
  1119  0078D6  5011               	movf	___awmod@divisor^0,w,c
  1120  0078D8  5E0F               	subwf	___awmod@dividend^0,f,c
  1121  0078DA  5012               	movf	(___awmod@divisor+1)^0,w,c
  1122  0078DC  5A10               	subwfb	(___awmod@dividend+1)^0,f,c
  1123  0078DE                     l1971:
  1124  0078DE  90D8               	bcf	status,0,c
  1125  0078E0  3212               	rrcf	(___awmod@divisor+1)^0,f,c
  1126  0078E2  3211               	rrcf	___awmod@divisor^0,f,c
  1127  0078E4  2E13               	decfsz	___awmod@counter^0,f,c
  1128  0078E6  EF60  F03C         	goto	l1967
  1129  0078EA                     l1975:
  1130  0078EA  5014               	movf	___awmod@sign^0,w,c
  1131  0078EC  B4D8               	btfsc	status,2,c
  1132  0078EE  EF7B  F03C         	goto	u841
  1133  0078F2  EF7D  F03C         	goto	u840
  1134  0078F6                     u841:
  1135  0078F6  EF81  F03C         	goto	l1979
  1136  0078FA                     u840:
  1137  0078FA  6C0F               	negf	___awmod@dividend^0,c
  1138  0078FC  1E10               	comf	(___awmod@dividend+1)^0,f,c
  1139  0078FE  B0D8               	btfsc	status,0,c
  1140  007900  2A10               	incf	(___awmod@dividend+1)^0,f,c
  1141  007902                     l1979:
  1142  007902  C00F  F00F         	movff	___awmod@dividend,?___awmod
  1143  007906  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  1144  00790A  0012               	return		;funcret
  1145  00790C                     __end_of___awmod:
  1146                           	opt callstack 0
  1147                           
  1148 ;; *************** function _metToucheCombien *****************
  1149 ;; Defined at:
  1150 ;;		line 151 in file "main.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;  j               2   27[COMRAM] int 
  1155 ;;  i               2   25[COMRAM] int 
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1165 ;;      Params:         0       0       0       0       0       0       0
  1166 ;;      Locals:         4       0       0       0       0       0       0
  1167 ;;      Temps:          3       0       0       0       0       0       0
  1168 ;;      Totals:         7       0       0       0       0       0       0
  1169 ;;Total ram usage:        7 bytes
  1170 ;; Hardware stack levels used:    1
  1171 ;; Hardware stack levels required when called:    2
  1172 ;; This function calls:
  1173 ;;		___wmul
  1174 ;;		_calculToucheCombien
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text5
  1181  0079D4                     __ptext5:
  1182                           	opt callstack 0
  1183  0079D4                     _metToucheCombien:
  1184                           	opt callstack 28
  1185  0079D4                     
  1186                           ;main.c: 152: for(int i = 0; i<20; i++){
  1187  0079D4  0E00               	movlw	0
  1188  0079D6  6E1B               	movwf	(metToucheCombien@i+1)^0,c
  1189  0079D8  0E00               	movlw	0
  1190  0079DA  6E1A               	movwf	metToucheCombien@i^0,c
  1191  0079DC                     l2071:
  1192                           
  1193                           ;main.c: 153: for(int j = 0; j<4; j++){
  1194  0079DC  0E00               	movlw	0
  1195  0079DE  6E1D               	movwf	(metToucheCombien@j+1)^0,c
  1196  0079E0  0E00               	movlw	0
  1197  0079E2  6E1C               	movwf	metToucheCombien@j^0,c
  1198  0079E4                     l2077:
  1199                           
  1200                           ;main.c: 154: if(m_tabMines[j][i] != 3){
  1201  0079E4  C01C  F001         	movff	metToucheCombien@j,___wmul@multiplier
  1202  0079E8  C01D  F002         	movff	metToucheCombien@j+1,___wmul@multiplier+1
  1203  0079EC  0E00               	movlw	0
  1204  0079EE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1205  0079F0  0E15               	movlw	21
  1206  0079F2  6E03               	movwf	___wmul@multiplicand^0,c
  1207  0079F4  EC9F  F038         	call	___wmul	;wreg free
  1208  0079F8  0E60               	movlw	low _m_tabMines
  1209  0079FA  6E17               	movwf	??_metToucheCombien^0,c
  1210  0079FC  0E00               	movlw	high _m_tabMines
  1211  0079FE  6E18               	movwf	(??_metToucheCombien+1)^0,c
  1212  007A00  5001               	movf	?___wmul^0,w,c
  1213  007A02  2617               	addwf	??_metToucheCombien^0,f,c
  1214  007A04  5002               	movf	(?___wmul+1)^0,w,c
  1215  007A06  2218               	addwfc	(??_metToucheCombien+1)^0,f,c
  1216  007A08  501A               	movf	metToucheCombien@i^0,w,c
  1217  007A0A  2417               	addwf	??_metToucheCombien^0,w,c
  1218  007A0C  6ED9               	movwf	fsr2l,c
  1219  007A0E  501B               	movf	(metToucheCombien@i+1)^0,w,c
  1220  007A10  2018               	addwfc	(??_metToucheCombien+1)^0,w,c
  1221  007A12  6EDA               	movwf	fsr2h,c
  1222  007A14  0E03               	movlw	3
  1223  007A16  18DE               	xorwf	postinc2,w,c
  1224  007A18  B4D8               	btfsc	status,2,c
  1225  007A1A  EF11  F03D         	goto	u911
  1226  007A1E  EF13  F03D         	goto	u910
  1227  007A22                     u911:
  1228  007A22  EF38  F03D         	goto	l2081
  1229  007A26                     u910:
  1230  007A26                     
  1231                           ;main.c: 155: m_tabMines[j][i] = calculToucheCombien(j, i);
  1232  007A26  C01C  F007         	movff	metToucheCombien@j,calculToucheCombien@ligne
  1233  007A2A  C01D  F008         	movff	metToucheCombien@j+1,calculToucheCombien@ligne+1
  1234  007A2E  C01A  F009         	movff	metToucheCombien@i,calculToucheCombien@colonne
  1235  007A32  C01B  F00A         	movff	metToucheCombien@i+1,calculToucheCombien@colonne+1
  1236  007A36  EC7F  F03E         	call	_calculToucheCombien	;wreg free
  1237  007A3A  6E17               	movwf	??_metToucheCombien^0,c
  1238  007A3C  C01C  F001         	movff	metToucheCombien@j,___wmul@multiplier
  1239  007A40  C01D  F002         	movff	metToucheCombien@j+1,___wmul@multiplier+1
  1240  007A44  0E00               	movlw	0
  1241  007A46  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1242  007A48  0E15               	movlw	21
  1243  007A4A  6E03               	movwf	___wmul@multiplicand^0,c
  1244  007A4C  EC9F  F038         	call	___wmul	;wreg free
  1245  007A50  0E60               	movlw	low _m_tabMines
  1246  007A52  6E18               	movwf	(??_metToucheCombien+1)^0,c
  1247  007A54  0E00               	movlw	high _m_tabMines
  1248  007A56  6E19               	movwf	(??_metToucheCombien+2)^0,c
  1249  007A58  5001               	movf	?___wmul^0,w,c
  1250  007A5A  2618               	addwf	(??_metToucheCombien+1)^0,f,c
  1251  007A5C  5002               	movf	(?___wmul+1)^0,w,c
  1252  007A5E  2219               	addwfc	(??_metToucheCombien+2)^0,f,c
  1253  007A60  501A               	movf	metToucheCombien@i^0,w,c
  1254  007A62  2418               	addwf	(??_metToucheCombien+1)^0,w,c
  1255  007A64  6ED9               	movwf	fsr2l,c
  1256  007A66  501B               	movf	(metToucheCombien@i+1)^0,w,c
  1257  007A68  2019               	addwfc	(??_metToucheCombien+2)^0,w,c
  1258  007A6A  6EDA               	movwf	fsr2h,c
  1259  007A6C  C017  FFDF         	movff	??_metToucheCombien,indf2
  1260  007A70                     l2081:
  1261  007A70  4A1C               	infsnz	metToucheCombien@j^0,f,c
  1262  007A72  2A1D               	incf	(metToucheCombien@j+1)^0,f,c
  1263  007A74  BE1D               	btfsc	(metToucheCombien@j+1)^0,7,c
  1264  007A76  EF46  F03D         	goto	u921
  1265  007A7A  501D               	movf	(metToucheCombien@j+1)^0,w,c
  1266  007A7C  E109               	bnz	u920
  1267  007A7E  0E04               	movlw	4
  1268  007A80  5C1C               	subwf	metToucheCombien@j^0,w,c
  1269  007A82  A0D8               	btfss	status,0,c
  1270  007A84  EF46  F03D         	goto	u921
  1271  007A88  EF48  F03D         	goto	u920
  1272  007A8C                     u921:
  1273  007A8C  EFF2  F03C         	goto	l2077
  1274  007A90                     u920:
  1275  007A90  4A1A               	infsnz	metToucheCombien@i^0,f,c
  1276  007A92  2A1B               	incf	(metToucheCombien@i+1)^0,f,c
  1277  007A94  BE1B               	btfsc	(metToucheCombien@i+1)^0,7,c
  1278  007A96  EF56  F03D         	goto	u931
  1279  007A9A  501B               	movf	(metToucheCombien@i+1)^0,w,c
  1280  007A9C  E109               	bnz	u930
  1281  007A9E  0E14               	movlw	20
  1282  007AA0  5C1A               	subwf	metToucheCombien@i^0,w,c
  1283  007AA2  A0D8               	btfss	status,0,c
  1284  007AA4  EF56  F03D         	goto	u931
  1285  007AA8  EF58  F03D         	goto	u930
  1286  007AAC                     u931:
  1287  007AAC  EFEE  F03C         	goto	l2071
  1288  007AB0                     u930:
  1289  007AB0  0012               	return		;funcret
  1290  007AB2                     __end_of_metToucheCombien:
  1291                           	opt callstack 0
  1292                           
  1293 ;; *************** function _calculToucheCombien *****************
  1294 ;; Defined at:
  1295 ;;		line 166 in file "main.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;  ligne           2    6[COMRAM] int 
  1298 ;;  colonne         2    8[COMRAM] int 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  j               2   20[COMRAM] int 
  1301 ;;  i               2   18[COMRAM] int 
  1302 ;;  y               2   16[COMRAM] int 
  1303 ;;  x               2   14[COMRAM] int 
  1304 ;;  total           1   13[COMRAM] unsigned char 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      unsigned char 
  1307 ;; Registers used:
  1308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1314 ;;      Params:         4       0       0       0       0       0       0
  1315 ;;      Locals:         9       0       0       0       0       0       0
  1316 ;;      Temps:          3       0       0       0       0       0       0
  1317 ;;      Totals:        16       0       0       0       0       0       0
  1318 ;;Total ram usage:       16 bytes
  1319 ;; Hardware stack levels used:    1
  1320 ;; Hardware stack levels required when called:    1
  1321 ;; This function calls:
  1322 ;;		___wmul
  1323 ;; This function is called by:
  1324 ;;		_metToucheCombien
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           	psect	text6
  1329  007CFE                     __ptext6:
  1330                           	opt callstack 0
  1331  007CFE                     _calculToucheCombien:
  1332                           	opt callstack 28
  1333  007CFE                     
  1334                           ;main.c: 168: int y = 0;
  1335  007CFE  0E00               	movlw	0
  1336  007D00  6E12               	movwf	(calculToucheCombien@y+1)^0,c
  1337  007D02  0E00               	movlw	0
  1338  007D04  6E11               	movwf	calculToucheCombien@y^0,c
  1339                           
  1340                           ;main.c: 169: char total = 0;
  1341  007D06  0E00               	movlw	0
  1342  007D08  6E0E               	movwf	calculToucheCombien@total^0,c
  1343  007D0A                     
  1344                           ;main.c: 171: for(int i = -1; i < 2; i++){
  1345  007D0A  6813               	setf	calculToucheCombien@i^0,c
  1346  007D0C  6814               	setf	(calculToucheCombien@i+1)^0,c
  1347  007D0E                     l120:
  1348                           
  1349                           ;main.c: 172: for(int j = -1; j < 2; j++){
  1350  007D0E  6815               	setf	calculToucheCombien@j^0,c
  1351  007D10  6816               	setf	(calculToucheCombien@j+1)^0,c
  1352  007D12                     l1829:
  1353                           
  1354                           ;main.c: 173: if(j != 0 || i != 0){
  1355  007D12  5015               	movf	calculToucheCombien@j^0,w,c
  1356  007D14  1016               	iorwf	(calculToucheCombien@j+1)^0,w,c
  1357  007D16  A4D8               	btfss	status,2,c
  1358  007D18  EF90  F03E         	goto	u651
  1359  007D1C  EF92  F03E         	goto	u650
  1360  007D20                     u651:
  1361  007D20  EF9B  F03E         	goto	l1833
  1362  007D24                     u650:
  1363  007D24  5013               	movf	calculToucheCombien@i^0,w,c
  1364  007D26  1014               	iorwf	(calculToucheCombien@i+1)^0,w,c
  1365  007D28  B4D8               	btfsc	status,2,c
  1366  007D2A  EF99  F03E         	goto	u661
  1367  007D2E  EF9B  F03E         	goto	u660
  1368  007D32                     u661:
  1369  007D32  EFF3  F03E         	goto	l124
  1370  007D36                     u660:
  1371  007D36                     l1833:
  1372                           
  1373                           ;main.c: 174: x = colonne + i;
  1374  007D36  5013               	movf	calculToucheCombien@i^0,w,c
  1375  007D38  2409               	addwf	calculToucheCombien@colonne^0,w,c
  1376  007D3A  6E0F               	movwf	calculToucheCombien@x^0,c
  1377  007D3C  5014               	movf	(calculToucheCombien@i+1)^0,w,c
  1378  007D3E  200A               	addwfc	(calculToucheCombien@colonne+1)^0,w,c
  1379  007D40  6E10               	movwf	(calculToucheCombien@x+1)^0,c
  1380                           
  1381                           ;main.c: 175: y = ligne + j;
  1382  007D42  5015               	movf	calculToucheCombien@j^0,w,c
  1383  007D44  2407               	addwf	calculToucheCombien@ligne^0,w,c
  1384  007D46  6E11               	movwf	calculToucheCombien@y^0,c
  1385  007D48  5016               	movf	(calculToucheCombien@j+1)^0,w,c
  1386  007D4A  2008               	addwfc	(calculToucheCombien@ligne+1)^0,w,c
  1387  007D4C  6E12               	movwf	(calculToucheCombien@y+1)^0,c
  1388                           
  1389                           ;main.c: 176: if(x >= 0 && x < 20 && y >= 0 && y < 4){
  1390  007D4E  BE10               	btfsc	(calculToucheCombien@x+1)^0,7,c
  1391  007D50  EFAC  F03E         	goto	u671
  1392  007D54  EFAE  F03E         	goto	u670
  1393  007D58                     u671:
  1394  007D58  EFF3  F03E         	goto	l124
  1395  007D5C                     u670:
  1396  007D5C  BE10               	btfsc	(calculToucheCombien@x+1)^0,7,c
  1397  007D5E  EFBC  F03E         	goto	u680
  1398  007D62  5010               	movf	(calculToucheCombien@x+1)^0,w,c
  1399  007D64  E107               	bnz	u681
  1400  007D66  0E14               	movlw	20
  1401  007D68  5C0F               	subwf	calculToucheCombien@x^0,w,c
  1402  007D6A  B0D8               	btfsc	status,0,c
  1403  007D6C  EFBA  F03E         	goto	u681
  1404  007D70  EFBC  F03E         	goto	u680
  1405  007D74                     u681:
  1406  007D74  EFF3  F03E         	goto	l124
  1407  007D78                     u680:
  1408  007D78  BE12               	btfsc	(calculToucheCombien@y+1)^0,7,c
  1409  007D7A  EFC1  F03E         	goto	u691
  1410  007D7E  EFC3  F03E         	goto	u690
  1411  007D82                     u691:
  1412  007D82  EFF3  F03E         	goto	l124
  1413  007D86                     u690:
  1414  007D86  BE12               	btfsc	(calculToucheCombien@y+1)^0,7,c
  1415  007D88  EFD1  F03E         	goto	u700
  1416  007D8C  5012               	movf	(calculToucheCombien@y+1)^0,w,c
  1417  007D8E  E107               	bnz	u701
  1418  007D90  0E04               	movlw	4
  1419  007D92  5C11               	subwf	calculToucheCombien@y^0,w,c
  1420  007D94  B0D8               	btfsc	status,0,c
  1421  007D96  EFCF  F03E         	goto	u701
  1422  007D9A  EFD1  F03E         	goto	u700
  1423  007D9E                     u701:
  1424  007D9E  EFF3  F03E         	goto	l124
  1425  007DA2                     u700:
  1426  007DA2                     
  1427                           ;main.c: 177: if(m_tabMines[y][x] == 3){
  1428  007DA2  C011  F001         	movff	calculToucheCombien@y,___wmul@multiplier
  1429  007DA6  C012  F002         	movff	calculToucheCombien@y+1,___wmul@multiplier+1
  1430  007DAA  0E00               	movlw	0
  1431  007DAC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1432  007DAE  0E15               	movlw	21
  1433  007DB0  6E03               	movwf	___wmul@multiplicand^0,c
  1434  007DB2  EC9F  F038         	call	___wmul	;wreg free
  1435  007DB6  0E60               	movlw	low _m_tabMines
  1436  007DB8  6E0B               	movwf	??_calculToucheCombien^0,c
  1437  007DBA  0E00               	movlw	high _m_tabMines
  1438  007DBC  6E0C               	movwf	(??_calculToucheCombien+1)^0,c
  1439  007DBE  5001               	movf	?___wmul^0,w,c
  1440  007DC0  260B               	addwf	??_calculToucheCombien^0,f,c
  1441  007DC2  5002               	movf	(?___wmul+1)^0,w,c
  1442  007DC4  220C               	addwfc	(??_calculToucheCombien+1)^0,f,c
  1443  007DC6  500F               	movf	calculToucheCombien@x^0,w,c
  1444  007DC8  240B               	addwf	??_calculToucheCombien^0,w,c
  1445  007DCA  6ED9               	movwf	fsr2l,c
  1446  007DCC  5010               	movf	(calculToucheCombien@x+1)^0,w,c
  1447  007DCE  200C               	addwfc	(??_calculToucheCombien+1)^0,w,c
  1448  007DD0  6EDA               	movwf	fsr2h,c
  1449  007DD2  0E03               	movlw	3
  1450  007DD4  18DE               	xorwf	postinc2,w,c
  1451  007DD6  A4D8               	btfss	status,2,c
  1452  007DD8  EFF0  F03E         	goto	u711
  1453  007DDC  EFF2  F03E         	goto	u710
  1454  007DE0                     u711:
  1455  007DE0  EFF3  F03E         	goto	l124
  1456  007DE4                     u710:
  1457  007DE4                     
  1458                           ;main.c: 178: total++;
  1459  007DE4  2A0E               	incf	calculToucheCombien@total^0,f,c
  1460  007DE6                     l124:
  1461  007DE6  4A15               	infsnz	calculToucheCombien@j^0,f,c
  1462  007DE8  2A16               	incf	(calculToucheCombien@j+1)^0,f,c
  1463  007DEA  BE16               	btfsc	(calculToucheCombien@j+1)^0,7,c
  1464  007DEC  EF01  F03F         	goto	u721
  1465  007DF0  5016               	movf	(calculToucheCombien@j+1)^0,w,c
  1466  007DF2  E109               	bnz	u720
  1467  007DF4  0E02               	movlw	2
  1468  007DF6  5C15               	subwf	calculToucheCombien@j^0,w,c
  1469  007DF8  A0D8               	btfss	status,0,c
  1470  007DFA  EF01  F03F         	goto	u721
  1471  007DFE  EF03  F03F         	goto	u720
  1472  007E02                     u721:
  1473  007E02  EF89  F03E         	goto	l1829
  1474  007E06                     u720:
  1475  007E06  4A13               	infsnz	calculToucheCombien@i^0,f,c
  1476  007E08  2A14               	incf	(calculToucheCombien@i+1)^0,f,c
  1477  007E0A  BE14               	btfsc	(calculToucheCombien@i+1)^0,7,c
  1478  007E0C  EF11  F03F         	goto	u731
  1479  007E10  5014               	movf	(calculToucheCombien@i+1)^0,w,c
  1480  007E12  E109               	bnz	u730
  1481  007E14  0E02               	movlw	2
  1482  007E16  5C13               	subwf	calculToucheCombien@i^0,w,c
  1483  007E18  A0D8               	btfss	status,0,c
  1484  007E1A  EF11  F03F         	goto	u731
  1485  007E1E  EF13  F03F         	goto	u730
  1486  007E22                     u731:
  1487  007E22  EF87  F03E         	goto	l120
  1488  007E26                     u730:
  1489  007E26                     
  1490                           ;main.c: 179: };main.c: 180: };main.c: 181: };main.c: 182: };main.c: 183: };main.c: 184:
      +                           if(total == 0){
  1491  007E26  500E               	movf	calculToucheCombien@total^0,w,c
  1492  007E28  A4D8               	btfss	status,2,c
  1493  007E2A  EF19  F03F         	goto	u741
  1494  007E2E  EF1B  F03F         	goto	u740
  1495  007E32                     u741:
  1496  007E32  EF1E  F03F         	goto	l1857
  1497  007E36                     u740:
  1498  007E36                     
  1499                           ;main.c: 185: return 32;
  1500  007E36  0E20               	movlw	32
  1501  007E38  EF20  F03F         	goto	l130
  1502  007E3C                     l1857:
  1503                           
  1504                           ;main.c: 186: };main.c: 187: return total+48;
  1505  007E3C  500E               	movf	calculToucheCombien@total^0,w,c
  1506  007E3E  0F30               	addlw	48
  1507  007E40                     l130:
  1508  007E40  0012               	return		;funcret
  1509  007E42                     __end_of_calculToucheCombien:
  1510                           	opt callstack 0
  1511                           
  1512 ;; *************** function _lcd_init *****************
  1513 ;; Defined at:
  1514 ;;		line 282 in file "Lcd4Lignes.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;		None
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;		None
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      void 
  1521 ;; Registers used:
  1522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1528 ;;      Params:         0       0       0       0       0       0       0
  1529 ;;      Locals:         0       0       0       0       0       0       0
  1530 ;;      Temps:          0       0       0       0       0       0       0
  1531 ;;      Totals:         0       0       0       0       0       0       0
  1532 ;;Total ram usage:        0 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; Hardware stack levels required when called:    5
  1535 ;; This function calls:
  1536 ;;		_lcd_initCGRam
  1537 ;;		_lcd_resetSequence
  1538 ;;		_lcd_wrCom
  1539 ;; This function is called by:
  1540 ;;		_main
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           	psect	text7
  1545  00718C                     __ptext7:
  1546                           	opt callstack 0
  1547  00718C                     _lcd_init:
  1548                           	opt callstack 25
  1549  00718C                     
  1550                           ;Lcd4Lignes.c: 285: lcd_resetSequence();
  1551  00718C  ECA0  F03A         	call	_lcd_resetSequence	;wreg free
  1552                           
  1553                           ;Lcd4Lignes.c: 286: lcd_wrCom(0x28);
  1554  007190  0E28               	movlw	40
  1555  007192  EC3E  F03A         	call	_lcd_wrCom
  1556                           
  1557                           ;Lcd4Lignes.c: 287: lcd_wrCom(0x0F);
  1558  007196  0E0F               	movlw	15
  1559  007198  EC3E  F03A         	call	_lcd_wrCom
  1560                           
  1561                           ;Lcd4Lignes.c: 288: lcd_wrCom(0x01);
  1562  00719C  0E01               	movlw	1
  1563  00719E  EC3E  F03A         	call	_lcd_wrCom
  1564                           
  1565                           ;Lcd4Lignes.c: 289: lcd_wrCom(0x06);
  1566  0071A2  0E06               	movlw	6
  1567  0071A4  EC3E  F03A         	call	_lcd_wrCom
  1568                           
  1569                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x80);
  1570  0071A8  0E80               	movlw	128
  1571  0071AA  EC3E  F03A         	call	_lcd_wrCom
  1572  0071AE                     
  1573                           ;Lcd4Lignes.c: 291: lcd_initCGRam();
  1574  0071AE  EC0F  F03A         	call	_lcd_initCGRam	;wreg free
  1575  0071B2  0012               	return		;funcret
  1576  0071B4                     __end_of_lcd_init:
  1577                           	opt callstack 0
  1578                           
  1579 ;; *************** function _lcd_resetSequence *****************
  1580 ;; Defined at:
  1581 ;;		line 245 in file "Lcd4Lignes.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;		None
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;		None
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1595 ;;      Params:         0       0       0       0       0       0       0
  1596 ;;      Locals:         0       0       0       0       0       0       0
  1597 ;;      Temps:          1       0       0       0       0       0       0
  1598 ;;      Totals:         1       0       0       0       0       0       0
  1599 ;;Total ram usage:        1 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; Hardware stack levels required when called:    1
  1602 ;; This function calls:
  1603 ;;		_lcd_ecrireDonnees
  1604 ;;		_lcd_strobeEnableBit
  1605 ;; This function is called by:
  1606 ;;		_lcd_init
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           	psect	text8
  1611  007540                     __ptext8:
  1612                           	opt callstack 0
  1613  007540                     _lcd_resetSequence:
  1614                           	opt callstack 28
  1615  007540                     
  1616                           ;Lcd4Lignes.c: 250: TRISD = 0b00000000;
  1617  007540  0E00               	movlw	0
  1618  007542  6E95               	movwf	149,c	;volatile
  1619  007544                     
  1620                           ;Lcd4Lignes.c: 252: _delay((unsigned long)((40)*(1000000/4000.0)));
  1621  007544  0E0D               	movlw	13
  1622  007546  6E03               	movwf	??_lcd_resetSequence^0,c
  1623  007548  0EFC               	movlw	252
  1624  00754A                     u1157:
  1625  00754A  2EE8               	decfsz	wreg,f,c
  1626  00754C  D7FE               	bra	u1157
  1627  00754E  2E03               	decfsz	??_lcd_resetSequence^0,f,c
  1628  007550  D7FC               	bra	u1157
  1629  007552                     
  1630                           ;Lcd4Lignes.c: 253: PORTAbits.RA0 = 0;
  1631  007552  9080               	bcf	128,0,c	;volatile
  1632  007554                     
  1633                           ;Lcd4Lignes.c: 254: PORTAbits.RA1 = 0;
  1634  007554  9280               	bcf	128,1,c	;volatile
  1635  007556                     
  1636                           ;Lcd4Lignes.c: 256: lcd_ecrireDonnees(0x03);
  1637  007556  0E03               	movlw	3
  1638  007558  EC95  F038         	call	_lcd_ecrireDonnees
  1639  00755C                     
  1640                           ;Lcd4Lignes.c: 257: lcd_strobeEnableBit();
  1641  00755C  EC7F  F038         	call	_lcd_strobeEnableBit	;wreg free
  1642  007560                     
  1643                           ;Lcd4Lignes.c: 258: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1644  007560  0E03               	movlw	3
  1645  007562                     u1167:
  1646  007562  2EE8               	decfsz	wreg,f,c
  1647  007564  D7FE               	bra	u1167
  1648  007566  F000               	nop	
  1649  007568                     
  1650                           ;Lcd4Lignes.c: 261: lcd_ecrireDonnees(0x03);
  1651  007568  0E03               	movlw	3
  1652  00756A  EC95  F038         	call	_lcd_ecrireDonnees
  1653  00756E                     
  1654                           ;Lcd4Lignes.c: 262: lcd_strobeEnableBit();
  1655  00756E  EC7F  F038         	call	_lcd_strobeEnableBit	;wreg free
  1656  007572                     
  1657                           ;Lcd4Lignes.c: 263: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1658  007572  0E03               	movlw	3
  1659  007574                     u1177:
  1660  007574  2EE8               	decfsz	wreg,f,c
  1661  007576  D7FE               	bra	u1177
  1662  007578  F000               	nop	
  1663  00757A                     
  1664                           ;Lcd4Lignes.c: 265: lcd_ecrireDonnees(0x03);
  1665  00757A  0E03               	movlw	3
  1666  00757C  EC95  F038         	call	_lcd_ecrireDonnees
  1667  007580                     
  1668                           ;Lcd4Lignes.c: 266: lcd_strobeEnableBit();
  1669  007580  EC7F  F038         	call	_lcd_strobeEnableBit	;wreg free
  1670  007584                     
  1671                           ;Lcd4Lignes.c: 267: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1672  007584  0E03               	movlw	3
  1673  007586                     u1187:
  1674  007586  2EE8               	decfsz	wreg,f,c
  1675  007588  D7FE               	bra	u1187
  1676  00758A  F000               	nop	
  1677  00758C                     
  1678                           ;Lcd4Lignes.c: 269: lcd_ecrireDonnees(0x02);
  1679  00758C  0E02               	movlw	2
  1680  00758E  EC95  F038         	call	_lcd_ecrireDonnees
  1681  007592                     
  1682                           ;Lcd4Lignes.c: 270: lcd_strobeEnableBit();
  1683  007592  EC7F  F038         	call	_lcd_strobeEnableBit	;wreg free
  1684  007596                     
  1685                           ;Lcd4Lignes.c: 271: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1686  007596  0E03               	movlw	3
  1687  007598                     u1197:
  1688  007598  2EE8               	decfsz	wreg,f,c
  1689  00759A  D7FE               	bra	u1197
  1690  00759C  F000               	nop	
  1691  00759E                     
  1692                           ;Lcd4Lignes.c: 273: TRISD = 0b00001111;
  1693  00759E  0E0F               	movlw	15
  1694  0075A0  6E95               	movwf	149,c	;volatile
  1695  0075A2  0012               	return		;funcret
  1696  0075A4                     __end_of_lcd_resetSequence:
  1697                           	opt callstack 0
  1698                           
  1699 ;; *************** function _lcd_initCGRam *****************
  1700 ;; Defined at:
  1701 ;;		line 441 in file "Lcd4Lignes.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;  j               1    6[COMRAM] unsigned char 
  1706 ;;  i               1    5[COMRAM] unsigned char 
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1716 ;;      Params:         0       0       0       0       0       0       0
  1717 ;;      Locals:         2       0       0       0       0       0       0
  1718 ;;      Temps:          2       0       0       0       0       0       0
  1719 ;;      Totals:         4       0       0       0       0       0       0
  1720 ;;Total ram usage:        4 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:    4
  1723 ;; This function calls:
  1724 ;;		_lcd_curseurHome
  1725 ;;		_lcd_wrCom
  1726 ;;		_lcd_wrData
  1727 ;; This function is called by:
  1728 ;;		_lcd_init
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text9
  1733  00741E                     __ptext9:
  1734                           	opt callstack 0
  1735  00741E                     _lcd_initCGRam:
  1736                           	opt callstack 25
  1737  00741E                     
  1738                           ;Lcd4Lignes.c: 443: char i,j;;Lcd4Lignes.c: 445: lcd_wrCom(0x40);
  1739  00741E  0E40               	movlw	64
  1740  007420  EC3E  F03A         	call	_lcd_wrCom
  1741  007424                     
  1742                           ;Lcd4Lignes.c: 446: for(i=0;i<8;i++)
  1743  007424  0E00               	movlw	0
  1744  007426  6E06               	movwf	lcd_initCGRam@i^0,c
  1745  007428                     l1929:
  1746                           
  1747                           ;Lcd4Lignes.c: 447: {;Lcd4Lignes.c: 448: for(j=0;j<8;j++)
  1748  007428  0E00               	movlw	0
  1749  00742A  6E07               	movwf	lcd_initCGRam@j^0,c
  1750  00742C                     l1935:
  1751                           
  1752                           ;Lcd4Lignes.c: 449: lcd_wrData(matCGRAM[i][j]);
  1753  00742C  5006               	movf	lcd_initCGRam@i^0,w,c
  1754  00742E  0D08               	mullw	8
  1755  007430  0EB4               	movlw	low _matCGRAM
  1756  007432  6E04               	movwf	??_lcd_initCGRam^0,c
  1757  007434  0E00               	movlw	high _matCGRAM
  1758  007436  6E05               	movwf	(??_lcd_initCGRam+1)^0,c
  1759  007438  50F3               	movf	243,w,c
  1760  00743A  2604               	addwf	??_lcd_initCGRam^0,f,c
  1761  00743C  50F4               	movf	244,w,c
  1762  00743E  2205               	addwfc	(??_lcd_initCGRam+1)^0,f,c
  1763  007440  5007               	movf	lcd_initCGRam@j^0,w,c
  1764  007442  2404               	addwf	??_lcd_initCGRam^0,w,c
  1765  007444  6ED9               	movwf	fsr2l,c
  1766  007446  0E00               	movlw	0
  1767  007448  2005               	addwfc	(??_lcd_initCGRam+1)^0,w,c
  1768  00744A  6EDA               	movwf	fsr2h,c
  1769  00744C  50DF               	movf	indf2,w,c
  1770  00744E  ECDA  F038         	call	_lcd_wrData
  1771  007452  2A07               	incf	lcd_initCGRam@j^0,f,c
  1772  007454  0E07               	movlw	7
  1773  007456  6407               	cpfsgt	lcd_initCGRam@j^0,c
  1774  007458  EF30  F03A         	goto	u771
  1775  00745C  EF32  F03A         	goto	u770
  1776  007460                     u771:
  1777  007460  EF16  F03A         	goto	l1935
  1778  007464                     u770:
  1779  007464  2A06               	incf	lcd_initCGRam@i^0,f,c
  1780  007466  0E07               	movlw	7
  1781  007468  6406               	cpfsgt	lcd_initCGRam@i^0,c
  1782  00746A  EF39  F03A         	goto	u781
  1783  00746E  EF3B  F03A         	goto	u780
  1784  007472                     u781:
  1785  007472  EF14  F03A         	goto	l1929
  1786  007476                     u780:
  1787  007476                     
  1788                           ;Lcd4Lignes.c: 450: };Lcd4Lignes.c: 451: lcd_curseurHome();
  1789  007476  EC83  F038         	call	_lcd_curseurHome	;wreg free
  1790  00747A  0012               	return		;funcret
  1791  00747C                     __end_of_lcd_initCGRam:
  1792                           	opt callstack 0
  1793                           
  1794 ;; *************** function _lcd_curseurHome *****************
  1795 ;; Defined at:
  1796 ;;		line 312 in file "Lcd4Lignes.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;		None
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;		None
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  1    wreg      void 
  1803 ;; Registers used:
  1804 ;;		wreg, status,2, status,0, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1810 ;;      Params:         0       0       0       0       0       0       0
  1811 ;;      Locals:         0       0       0       0       0       0       0
  1812 ;;      Temps:          0       0       0       0       0       0       0
  1813 ;;      Totals:         0       0       0       0       0       0       0
  1814 ;;Total ram usage:        0 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:    3
  1817 ;; This function calls:
  1818 ;;		_lcd_wrCom
  1819 ;; This function is called by:
  1820 ;;		_main
  1821 ;;		_lcd_initCGRam
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text10
  1826  007106                     __ptext10:
  1827                           	opt callstack 0
  1828  007106                     _lcd_curseurHome:
  1829                           	opt callstack 25
  1830  007106                     
  1831                           ;Lcd4Lignes.c: 314: lcd_wrCom(0x02);
  1832  007106  0E02               	movlw	2
  1833  007108  EC3E  F03A         	call	_lcd_wrCom
  1834  00710C  0012               	return		;funcret
  1835  00710E                     __end_of_lcd_curseurHome:
  1836                           	opt callstack 0
  1837                           
  1838 ;; *************** function _initialisation *****************
  1839 ;; Defined at:
  1840 ;;		line 321 in file "main.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;		None
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;		None
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      void 
  1847 ;; Registers used:
  1848 ;;		wreg, status,2, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1854 ;;      Params:         0       0       0       0       0       0       0
  1855 ;;      Locals:         0       0       0       0       0       0       0
  1856 ;;      Temps:          0       0       0       0       0       0       0
  1857 ;;      Totals:         0       0       0       0       0       0       0
  1858 ;;Total ram usage:        0 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    1
  1861 ;; This function calls:
  1862 ;;		_srand
  1863 ;; This function is called by:
  1864 ;;		_main
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text11
  1869  0071E2                     __ptext11:
  1870                           	opt callstack 0
  1871  0071E2                     _initialisation:
  1872                           	opt callstack 29
  1873  0071E2                     
  1874                           ;main.c: 324: TRISD = 0;
  1875  0071E2  0E00               	movlw	0
  1876  0071E4  6E95               	movwf	149,c	;volatile
  1877                           
  1878                           ;main.c: 326: ANSELH = 0;
  1879  0071E6  0E00               	movlw	0
  1880  0071E8  6E7F               	movwf	127,c	;volatile
  1881  0071EA                     
  1882                           ;main.c: 327: TRISB = 0xFF;
  1883  0071EA  6893               	setf	147,c	;volatile
  1884                           
  1885                           ;main.c: 329: ANSEL = 0;
  1886  0071EC  0E00               	movlw	0
  1887  0071EE  6E7E               	movwf	126,c	;volatile
  1888                           
  1889                           ;main.c: 330: TRISA = 0;
  1890  0071F0  0E00               	movlw	0
  1891  0071F2  6E92               	movwf	146,c	;volatile
  1892  0071F4                     
  1893                           ;main.c: 334: T1CONbits.TMR1ON = 1;
  1894  0071F4  80CD               	bsf	205,0,c	;volatile
  1895  0071F6                     
  1896                           ;main.c: 335: srand(TMR1);
  1897  0071F6  CFCE F001          	movff	4046,srand@x	;volatile
  1898  0071FA  CFCF F002          	movff	4047,srand@x+1	;volatile
  1899  0071FE  EC8E  F038         	call	_srand	;wreg free
  1900  007202                     
  1901                           ;main.c: 338: ANSELbits.ANS7 = 1;
  1902  007202  8E7E               	bsf	126,7,c	;volatile
  1903  007204                     
  1904                           ;main.c: 340: ADCON0bits.ADON = 1;
  1905  007204  80C2               	bsf	194,0,c	;volatile
  1906  007206                     
  1907                           ;main.c: 341: ADCON1 = 0;
  1908  007206  0E00               	movlw	0
  1909  007208  6EC1               	movwf	193,c	;volatile
  1910  00720A                     
  1911                           ;main.c: 343: ADCON2bits.ADFM = 0;
  1912  00720A  9EC0               	bcf	192,7,c	;volatile
  1913  00720C                     
  1914                           ;main.c: 344: ADCON2bits.ACQT = 0;
  1915  00720C  0EC7               	movlw	-57
  1916  00720E  16C0               	andwf	192,f,c	;volatile
  1917  007210                     
  1918                           ;main.c: 345: ADCON2bits.ADCS = 0;
  1919  007210  0EF8               	movlw	-8
  1920  007212  16C0               	andwf	192,f,c	;volatile
  1921  007214  0012               	return		;funcret
  1922  007216                     __end_of_initialisation:
  1923                           	opt callstack 0
  1924                           
  1925 ;; *************** function _srand *****************
  1926 ;; Defined at:
  1927 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  x               2    0[COMRAM] unsigned int 
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;		None
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  1    wreg      void 
  1934 ;; Registers used:
  1935 ;;		status,2
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1941 ;;      Params:         2       0       0       0       0       0       0
  1942 ;;      Locals:         0       0       0       0       0       0       0
  1943 ;;      Temps:          0       0       0       0       0       0       0
  1944 ;;      Totals:         2       0       0       0       0       0       0
  1945 ;;Total ram usage:        2 bytes
  1946 ;; Hardware stack levels used:    1
  1947 ;; This function calls:
  1948 ;;		Nothing
  1949 ;; This function is called by:
  1950 ;;		_initialisation
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text12
  1955  00711C                     __ptext12:
  1956                           	opt callstack 0
  1957  00711C                     _srand:
  1958                           	opt callstack 29
  1959  00711C  C001  F027         	movff	srand@x,_randx
  1960  007120  C002  F028         	movff	srand@x+1,_randx+1
  1961  007124  6A29               	clrf	(_randx+2)^0,c
  1962  007126  6A2A               	clrf	(_randx+3)^0,c
  1963  007128  0012               	return		;funcret
  1964  00712A                     __end_of_srand:
  1965                           	opt callstack 0
  1966                           
  1967 ;; *************** function _initTabVue *****************
  1968 ;; Defined at:
  1969 ;;		line 107 in file "main.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;		None
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  j               2    8[COMRAM] int 
  1974 ;;  i               2   10[COMRAM] int 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      void 
  1977 ;; Registers used:
  1978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1984 ;;      Params:         0       0       0       0       0       0       0
  1985 ;;      Locals:         4       0       0       0       0       0       0
  1986 ;;      Temps:          2       0       0       0       0       0       0
  1987 ;;      Totals:         6       0       0       0       0       0       0
  1988 ;;Total ram usage:        6 bytes
  1989 ;; Hardware stack levels used:    1
  1990 ;; Hardware stack levels required when called:    1
  1991 ;; This function calls:
  1992 ;;		___wmul
  1993 ;; This function is called by:
  1994 ;;		_main
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text13
  1999  0077B2                     __ptext13:
  2000                           	opt callstack 0
  2001  0077B2                     _initTabVue:
  2002                           	opt callstack 29
  2003  0077B2                     
  2004                           ;main.c: 108: for(int i = 0; i<4; i++){
  2005  0077B2  0E00               	movlw	0
  2006  0077B4  6E0C               	movwf	(initTabVue@i+1)^0,c
  2007  0077B6  0E00               	movlw	0
  2008  0077B8  6E0B               	movwf	initTabVue@i^0,c
  2009  0077BA                     l2013:
  2010                           
  2011                           ;main.c: 109: for(int j = 0; j<20; j++){
  2012  0077BA  0E00               	movlw	0
  2013  0077BC  6E0A               	movwf	(initTabVue@j+1)^0,c
  2014  0077BE  0E00               	movlw	0
  2015  0077C0  6E09               	movwf	initTabVue@j^0,c
  2016  0077C2                     l2019:
  2017                           
  2018                           ;main.c: 110: m_tabVue[i][j] = 2;
  2019  0077C2  C00B  F001         	movff	initTabVue@i,___wmul@multiplier
  2020  0077C6  C00C  F002         	movff	initTabVue@i+1,___wmul@multiplier+1
  2021  0077CA  0E00               	movlw	0
  2022  0077CC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2023  0077CE  0E15               	movlw	21
  2024  0077D0  6E03               	movwf	___wmul@multiplicand^0,c
  2025  0077D2  EC9F  F038         	call	___wmul	;wreg free
  2026  0077D6  0E00               	movlw	low _m_tabVue
  2027  0077D8  6E07               	movwf	??_initTabVue^0,c
  2028  0077DA  0E01               	movlw	high _m_tabVue
  2029  0077DC  6E08               	movwf	(??_initTabVue+1)^0,c
  2030  0077DE  5001               	movf	?___wmul^0,w,c
  2031  0077E0  2607               	addwf	??_initTabVue^0,f,c
  2032  0077E2  5002               	movf	(?___wmul+1)^0,w,c
  2033  0077E4  2208               	addwfc	(??_initTabVue+1)^0,f,c
  2034  0077E6  5009               	movf	initTabVue@j^0,w,c
  2035  0077E8  2407               	addwf	??_initTabVue^0,w,c
  2036  0077EA  6ED9               	movwf	fsr2l,c
  2037  0077EC  500A               	movf	(initTabVue@j+1)^0,w,c
  2038  0077EE  2008               	addwfc	(??_initTabVue+1)^0,w,c
  2039  0077F0  6EDA               	movwf	fsr2h,c
  2040  0077F2  0E02               	movlw	2
  2041  0077F4  6EDF               	movwf	indf2,c
  2042  0077F6  4A09               	infsnz	initTabVue@j^0,f,c
  2043  0077F8  2A0A               	incf	(initTabVue@j+1)^0,f,c
  2044  0077FA  BE0A               	btfsc	(initTabVue@j+1)^0,7,c
  2045  0077FC  EF09  F03C         	goto	u851
  2046  007800  500A               	movf	(initTabVue@j+1)^0,w,c
  2047  007802  E109               	bnz	u850
  2048  007804  0E14               	movlw	20
  2049  007806  5C09               	subwf	initTabVue@j^0,w,c
  2050  007808  A0D8               	btfss	status,0,c
  2051  00780A  EF09  F03C         	goto	u851
  2052  00780E  EF0B  F03C         	goto	u850
  2053  007812                     u851:
  2054  007812  EFE1  F03B         	goto	l2019
  2055  007816                     u850:
  2056  007816                     
  2057                           ;main.c: 111: };main.c: 112: m_tabVue[i][20] = '\0';
  2058  007816  C00B  F001         	movff	initTabVue@i,___wmul@multiplier
  2059  00781A  C00C  F002         	movff	initTabVue@i+1,___wmul@multiplier+1
  2060  00781E  0E00               	movlw	0
  2061  007820  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2062  007822  0E15               	movlw	21
  2063  007824  6E03               	movwf	___wmul@multiplicand^0,c
  2064  007826  EC9F  F038         	call	___wmul	;wreg free
  2065  00782A  0E14               	movlw	low (_m_tabVue+20)
  2066  00782C  2401               	addwf	?___wmul^0,w,c
  2067  00782E  6ED9               	movwf	fsr2l,c
  2068  007830  0E01               	movlw	high (_m_tabVue+20)
  2069  007832  2002               	addwfc	(?___wmul+1)^0,w,c
  2070  007834  6EDA               	movwf	fsr2h,c
  2071  007836  0E00               	movlw	0
  2072  007838  6EDF               	movwf	indf2,c
  2073  00783A  4A0B               	infsnz	initTabVue@i^0,f,c
  2074  00783C  2A0C               	incf	(initTabVue@i+1)^0,f,c
  2075  00783E  BE0C               	btfsc	(initTabVue@i+1)^0,7,c
  2076  007840  EF2B  F03C         	goto	u861
  2077  007844  500C               	movf	(initTabVue@i+1)^0,w,c
  2078  007846  E109               	bnz	u860
  2079  007848  0E04               	movlw	4
  2080  00784A  5C0B               	subwf	initTabVue@i^0,w,c
  2081  00784C  A0D8               	btfss	status,0,c
  2082  00784E  EF2B  F03C         	goto	u861
  2083  007852  EF2D  F03C         	goto	u860
  2084  007856                     u861:
  2085  007856  EFDD  F03B         	goto	l2013
  2086  00785A                     u860:
  2087  00785A  0012               	return		;funcret
  2088  00785C                     __end_of_initTabVue:
  2089                           	opt callstack 0
  2090                           
  2091 ;; *************** function _gagne *****************
  2092 ;; Defined at:
  2093 ;;		line 286 in file "main.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  pMines          2    6[COMRAM] PTR int 
  2096 ;;		 -> main@nbMines(2), 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  j               2   15[COMRAM] int 
  2099 ;;  i               2   13[COMRAM] int 
  2100 ;;  ttl             1   12[COMRAM] unsigned char 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      unsigned char 
  2103 ;; Registers used:
  2104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2110 ;;      Params:         2       0       0       0       0       0       0
  2111 ;;      Locals:         5       0       0       0       0       0       0
  2112 ;;      Temps:          4       0       0       0       0       0       0
  2113 ;;      Totals:        11       0       0       0       0       0       0
  2114 ;;Total ram usage:       11 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    1
  2117 ;; This function calls:
  2118 ;;		___wmul
  2119 ;; This function is called by:
  2120 ;;		_main
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text14
  2125  00790C                     __ptext14:
  2126                           	opt callstack 0
  2127  00790C                     _gagne:
  2128                           	opt callstack 29
  2129  00790C                     
  2130                           ;main.c: 287: char ttl = 0;
  2131  00790C  0E00               	movlw	0
  2132  00790E  6E0D               	movwf	gagne@ttl^0,c
  2133                           
  2134                           ;main.c: 288: for(int i = 0; i<4; i++){
  2135  007910  0E00               	movlw	0
  2136  007912  6E0F               	movwf	(gagne@i+1)^0,c
  2137  007914  0E00               	movlw	0
  2138  007916  6E0E               	movwf	gagne@i^0,c
  2139  007918                     l2163:
  2140                           
  2141                           ;main.c: 289: for(int j = 0; j<20; j++){
  2142  007918  0E00               	movlw	0
  2143  00791A  6E11               	movwf	(gagne@j+1)^0,c
  2144  00791C  0E00               	movlw	0
  2145  00791E  6E10               	movwf	gagne@j^0,c
  2146  007920                     l2169:
  2147                           
  2148                           ;main.c: 290: if(m_tabVue[i][j] == 2){
  2149  007920  C00E  F001         	movff	gagne@i,___wmul@multiplier
  2150  007924  C00F  F002         	movff	gagne@i+1,___wmul@multiplier+1
  2151  007928  0E00               	movlw	0
  2152  00792A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2153  00792C  0E15               	movlw	21
  2154  00792E  6E03               	movwf	___wmul@multiplicand^0,c
  2155  007930  EC9F  F038         	call	___wmul	;wreg free
  2156  007934  0E00               	movlw	low _m_tabVue
  2157  007936  6E09               	movwf	??_gagne^0,c
  2158  007938  0E01               	movlw	high _m_tabVue
  2159  00793A  6E0A               	movwf	(??_gagne+1)^0,c
  2160  00793C  5001               	movf	?___wmul^0,w,c
  2161  00793E  2609               	addwf	??_gagne^0,f,c
  2162  007940  5002               	movf	(?___wmul+1)^0,w,c
  2163  007942  220A               	addwfc	(??_gagne+1)^0,f,c
  2164  007944  5010               	movf	gagne@j^0,w,c
  2165  007946  2409               	addwf	??_gagne^0,w,c
  2166  007948  6ED9               	movwf	fsr2l,c
  2167  00794A  5011               	movf	(gagne@j+1)^0,w,c
  2168  00794C  200A               	addwfc	(??_gagne+1)^0,w,c
  2169  00794E  6EDA               	movwf	fsr2h,c
  2170  007950  0E02               	movlw	2
  2171  007952  18DE               	xorwf	postinc2,w,c
  2172  007954  A4D8               	btfss	status,2,c
  2173  007956  EFAF  F03C         	goto	u1061
  2174  00795A  EFB1  F03C         	goto	u1060
  2175  00795E                     u1061:
  2176  00795E  EFB2  F03C         	goto	l168
  2177  007962                     u1060:
  2178  007962                     
  2179                           ;main.c: 291: ttl++;
  2180  007962  2A0D               	incf	gagne@ttl^0,f,c
  2181  007964                     l168:
  2182  007964  4A10               	infsnz	gagne@j^0,f,c
  2183  007966  2A11               	incf	(gagne@j+1)^0,f,c
  2184  007968  BE11               	btfsc	(gagne@j+1)^0,7,c
  2185  00796A  EFC0  F03C         	goto	u1071
  2186  00796E  5011               	movf	(gagne@j+1)^0,w,c
  2187  007970  E109               	bnz	u1070
  2188  007972  0E14               	movlw	20
  2189  007974  5C10               	subwf	gagne@j^0,w,c
  2190  007976  A0D8               	btfss	status,0,c
  2191  007978  EFC0  F03C         	goto	u1071
  2192  00797C  EFC2  F03C         	goto	u1070
  2193  007980                     u1071:
  2194  007980  EF90  F03C         	goto	l2169
  2195  007984                     u1070:
  2196  007984  4A0E               	infsnz	gagne@i^0,f,c
  2197  007986  2A0F               	incf	(gagne@i+1)^0,f,c
  2198  007988  BE0F               	btfsc	(gagne@i+1)^0,7,c
  2199  00798A  EFD0  F03C         	goto	u1081
  2200  00798E  500F               	movf	(gagne@i+1)^0,w,c
  2201  007990  E109               	bnz	u1080
  2202  007992  0E04               	movlw	4
  2203  007994  5C0E               	subwf	gagne@i^0,w,c
  2204  007996  A0D8               	btfss	status,0,c
  2205  007998  EFD0  F03C         	goto	u1081
  2206  00799C  EFD2  F03C         	goto	u1080
  2207  0079A0                     u1081:
  2208  0079A0  EF8C  F03C         	goto	l2163
  2209  0079A4                     u1080:
  2210  0079A4                     
  2211                           ;main.c: 292: };main.c: 293: };main.c: 294: };main.c: 295: if(ttl == (*pMines)){
  2212  0079A4  C007  FFD9         	movff	gagne@pMines,fsr2l
  2213  0079A8  C008  FFDA         	movff	gagne@pMines+1,fsr2h
  2214  0079AC  500D               	movf	gagne@ttl^0,w,c
  2215  0079AE  6E0B               	movwf	(??_gagne+2)^0,c
  2216  0079B0  6A0C               	clrf	(??_gagne+3)^0,c
  2217  0079B2  50DE               	movf	postinc2,w,c
  2218  0079B4  180B               	xorwf	(??_gagne+2)^0,w,c
  2219  0079B6  E107               	bnz	u1091
  2220  0079B8  50DE               	movf	postinc2,w,c
  2221  0079BA  180C               	xorwf	(??_gagne+3)^0,w,c
  2222  0079BC  A4D8               	btfss	status,2,c
  2223  0079BE  EFE3  F03C         	goto	u1091
  2224  0079C2  EFE5  F03C         	goto	u1090
  2225  0079C6                     u1091:
  2226  0079C6  EFE8  F03C         	goto	l2185
  2227  0079CA                     u1090:
  2228  0079CA                     
  2229                           ;main.c: 296: return 1;
  2230  0079CA  0E01               	movlw	1
  2231  0079CC  EFE9  F03C         	goto	l170
  2232  0079D0                     l2185:
  2233                           
  2234                           ;main.c: 297: };main.c: 298: return 0;
  2235  0079D0  0E00               	movlw	0
  2236  0079D2                     l170:
  2237  0079D2  0012               	return		;funcret
  2238  0079D4                     __end_of_gagne:
  2239                           	opt callstack 0
  2240                           
  2241 ;; *************** function _deplace *****************
  2242 ;; Defined at:
  2243 ;;		line 196 in file "main.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;  px              2    5[COMRAM] PTR unsigned char 
  2246 ;;		 -> main@x(1), 
  2247 ;;  py              2    7[COMRAM] PTR unsigned char 
  2248 ;;		 -> main@y(1), 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  aY              2   12[COMRAM] int 
  2251 ;;  aX              2   10[COMRAM] int 
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  1    wreg      void 
  2254 ;; Registers used:
  2255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2261 ;;      Params:         4       0       0       0       0       0       0
  2262 ;;      Locals:         4       0       0       0       0       0       0
  2263 ;;      Temps:          1       0       0       0       0       0       0
  2264 ;;      Totals:         9       0       0       0       0       0       0
  2265 ;;Total ram usage:        9 bytes
  2266 ;; Hardware stack levels used:    1
  2267 ;; Hardware stack levels required when called:    4
  2268 ;; This function calls:
  2269 ;;		_getAnalog
  2270 ;;		_lcd_gotoXY
  2271 ;; This function is called by:
  2272 ;;		_main
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text15
  2277  007E42                     __ptext15:
  2278                           	opt callstack 0
  2279  007E42                     _deplace:
  2280                           	opt callstack 26
  2281  007E42                     
  2282                           ;main.c: 197: int aX = getAnalog(7);
  2283  007E42  0E07               	movlw	7
  2284  007E44  ECB2  F038         	call	_getAnalog
  2285  007E48  6E0A               	movwf	??_deplace^0,c
  2286  007E4A  500A               	movf	??_deplace^0,w,c
  2287  007E4C  6E0B               	movwf	deplace@aX^0,c
  2288  007E4E  6A0C               	clrf	(deplace@aX+1)^0,c
  2289                           
  2290                           ;main.c: 198: int aY = getAnalog(6);
  2291  007E50  0E06               	movlw	6
  2292  007E52  ECB2  F038         	call	_getAnalog
  2293  007E56  6E0A               	movwf	??_deplace^0,c
  2294  007E58  500A               	movf	??_deplace^0,w,c
  2295  007E5A  6E0D               	movwf	deplace@aY^0,c
  2296  007E5C  6A0E               	clrf	(deplace@aY+1)^0,c
  2297  007E5E                     
  2298                           ;main.c: 200: if(aX < 100){
  2299  007E5E  BE0C               	btfsc	(deplace@aX+1)^0,7,c
  2300  007E60  EF3D  F03F         	goto	u940
  2301  007E64  500C               	movf	(deplace@aX+1)^0,w,c
  2302  007E66  E107               	bnz	u941
  2303  007E68  0E64               	movlw	100
  2304  007E6A  5C0B               	subwf	deplace@aX^0,w,c
  2305  007E6C  B0D8               	btfsc	status,0,c
  2306  007E6E  EF3B  F03F         	goto	u941
  2307  007E72  EF3D  F03F         	goto	u940
  2308  007E76                     u941:
  2309  007E76  EF63  F03F         	goto	l2101
  2310  007E7A                     u940:
  2311  007E7A                     
  2312                           ;main.c: 201: (*px)--;
  2313  007E7A  C006  FFD9         	movff	deplace@px,fsr2l
  2314  007E7E  C007  FFDA         	movff	deplace@px+1,fsr2h
  2315  007E82  06DF               	decf	indf2,f,c
  2316  007E84                     
  2317                           ;main.c: 202: if(*px <= 0){
  2318  007E84  C006  FFD9         	movff	deplace@px,fsr2l
  2319  007E88  C007  FFDA         	movff	deplace@px+1,fsr2h
  2320  007E8C  50DF               	movf	indf2,w,c
  2321  007E8E  A4D8               	btfss	status,2,c
  2322  007E90  EF4C  F03F         	goto	u951
  2323  007E94  EF4E  F03F         	goto	u950
  2324  007E98                     u951:
  2325  007E98  EF54  F03F         	goto	l2099
  2326  007E9C                     u950:
  2327  007E9C                     
  2328                           ;main.c: 203: *px = 20;
  2329  007E9C  C006  FFD9         	movff	deplace@px,fsr2l
  2330  007EA0  C007  FFDA         	movff	deplace@px+1,fsr2h
  2331  007EA4  0E14               	movlw	20
  2332  007EA6  6EDF               	movwf	indf2,c
  2333  007EA8                     l2099:
  2334                           
  2335                           ;main.c: 204: };main.c: 205: lcd_gotoXY((*px), (*py));
  2336  007EA8  C008  FFD9         	movff	deplace@py,fsr2l
  2337  007EAC  C009  FFDA         	movff	deplace@py+1,fsr2h
  2338  007EB0  50DF               	movf	indf2,w,c
  2339  007EB2  6E04               	movwf	lcd_gotoXY@y^0,c
  2340  007EB4  C006  FFD9         	movff	deplace@px,fsr2l
  2341  007EB8  C007  FFDA         	movff	deplace@px+1,fsr2h
  2342  007EBC  50DF               	movf	indf2,w,c
  2343  007EBE  ECD2  F03A         	call	_lcd_gotoXY
  2344                           
  2345                           ;main.c: 206: }else if(aX > 150){
  2346  007EC2  EFFF  F03F         	goto	l144
  2347  007EC6                     l2101:
  2348  007EC6  BE0C               	btfsc	(deplace@aX+1)^0,7,c
  2349  007EC8  EF6F  F03F         	goto	u961
  2350  007ECC  500C               	movf	(deplace@aX+1)^0,w,c
  2351  007ECE  E109               	bnz	u960
  2352  007ED0  0E97               	movlw	151
  2353  007ED2  5C0B               	subwf	deplace@aX^0,w,c
  2354  007ED4  A0D8               	btfss	status,0,c
  2355  007ED6  EF6F  F03F         	goto	u961
  2356  007EDA  EF71  F03F         	goto	u960
  2357  007EDE                     u961:
  2358  007EDE  EF97  F03F         	goto	l2111
  2359  007EE2                     u960:
  2360  007EE2                     
  2361                           ;main.c: 207: (*px)++;
  2362  007EE2  C006  FFD9         	movff	deplace@px,fsr2l
  2363  007EE6  C007  FFDA         	movff	deplace@px+1,fsr2h
  2364  007EEA  2ADF               	incf	indf2,f,c
  2365  007EEC                     
  2366                           ;main.c: 208: if(*px > 20){
  2367  007EEC  C006  FFD9         	movff	deplace@px,fsr2l
  2368  007EF0  C007  FFDA         	movff	deplace@px+1,fsr2h
  2369  007EF4  0E14               	movlw	20
  2370  007EF6  64DF               	cpfsgt	indf2,c
  2371  007EF8  EF80  F03F         	goto	u971
  2372  007EFC  EF82  F03F         	goto	u970
  2373  007F00                     u971:
  2374  007F00  EF88  F03F         	goto	l2109
  2375  007F04                     u970:
  2376  007F04                     
  2377                           ;main.c: 209: *px = 1;
  2378  007F04  C006  FFD9         	movff	deplace@px,fsr2l
  2379  007F08  C007  FFDA         	movff	deplace@px+1,fsr2h
  2380  007F0C  0E01               	movlw	1
  2381  007F0E  6EDF               	movwf	indf2,c
  2382  007F10                     l2109:
  2383                           
  2384                           ;main.c: 210: };main.c: 211: lcd_gotoXY((*px), (*py));
  2385  007F10  C008  FFD9         	movff	deplace@py,fsr2l
  2386  007F14  C009  FFDA         	movff	deplace@py+1,fsr2h
  2387  007F18  50DF               	movf	indf2,w,c
  2388  007F1A  6E04               	movwf	lcd_gotoXY@y^0,c
  2389  007F1C  C006  FFD9         	movff	deplace@px,fsr2l
  2390  007F20  C007  FFDA         	movff	deplace@px+1,fsr2h
  2391  007F24  50DF               	movf	indf2,w,c
  2392  007F26  ECD2  F03A         	call	_lcd_gotoXY
  2393                           
  2394                           ;main.c: 212: }else if(aY < 100){
  2395  007F2A  EFFF  F03F         	goto	l144
  2396  007F2E                     l2111:
  2397  007F2E  BE0E               	btfsc	(deplace@aY+1)^0,7,c
  2398  007F30  EFA5  F03F         	goto	u980
  2399  007F34  500E               	movf	(deplace@aY+1)^0,w,c
  2400  007F36  E107               	bnz	u981
  2401  007F38  0E64               	movlw	100
  2402  007F3A  5C0D               	subwf	deplace@aY^0,w,c
  2403  007F3C  B0D8               	btfsc	status,0,c
  2404  007F3E  EFA3  F03F         	goto	u981
  2405  007F42  EFA5  F03F         	goto	u980
  2406  007F46                     u981:
  2407  007F46  EFCB  F03F         	goto	l2121
  2408  007F4A                     u980:
  2409  007F4A                     
  2410                           ;main.c: 213: (*py)++;
  2411  007F4A  C008  FFD9         	movff	deplace@py,fsr2l
  2412  007F4E  C009  FFDA         	movff	deplace@py+1,fsr2h
  2413  007F52  2ADF               	incf	indf2,f,c
  2414  007F54                     
  2415                           ;main.c: 214: if(*py > 4){
  2416  007F54  C008  FFD9         	movff	deplace@py,fsr2l
  2417  007F58  C009  FFDA         	movff	deplace@py+1,fsr2h
  2418  007F5C  0E04               	movlw	4
  2419  007F5E  64DF               	cpfsgt	indf2,c
  2420  007F60  EFB4  F03F         	goto	u991
  2421  007F64  EFB6  F03F         	goto	u990
  2422  007F68                     u991:
  2423  007F68  EFBC  F03F         	goto	l2119
  2424  007F6C                     u990:
  2425  007F6C                     
  2426                           ;main.c: 215: *py = 1;
  2427  007F6C  C008  FFD9         	movff	deplace@py,fsr2l
  2428  007F70  C009  FFDA         	movff	deplace@py+1,fsr2h
  2429  007F74  0E01               	movlw	1
  2430  007F76  6EDF               	movwf	indf2,c
  2431  007F78                     l2119:
  2432                           
  2433                           ;main.c: 216: };main.c: 217: lcd_gotoXY((*px), (*py));
  2434  007F78  C008  FFD9         	movff	deplace@py,fsr2l
  2435  007F7C  C009  FFDA         	movff	deplace@py+1,fsr2h
  2436  007F80  50DF               	movf	indf2,w,c
  2437  007F82  6E04               	movwf	lcd_gotoXY@y^0,c
  2438  007F84  C006  FFD9         	movff	deplace@px,fsr2l
  2439  007F88  C007  FFDA         	movff	deplace@px+1,fsr2h
  2440  007F8C  50DF               	movf	indf2,w,c
  2441  007F8E  ECD2  F03A         	call	_lcd_gotoXY
  2442                           
  2443                           ;main.c: 218: }else if(aY > 150){
  2444  007F92  EFFF  F03F         	goto	l144
  2445  007F96                     l2121:
  2446  007F96  BE0E               	btfsc	(deplace@aY+1)^0,7,c
  2447  007F98  EFD7  F03F         	goto	u1001
  2448  007F9C  500E               	movf	(deplace@aY+1)^0,w,c
  2449  007F9E  E109               	bnz	u1000
  2450  007FA0  0E97               	movlw	151
  2451  007FA2  5C0D               	subwf	deplace@aY^0,w,c
  2452  007FA4  A0D8               	btfss	status,0,c
  2453  007FA6  EFD7  F03F         	goto	u1001
  2454  007FAA  EFD9  F03F         	goto	u1000
  2455  007FAE                     u1001:
  2456  007FAE  EFFF  F03F         	goto	l138
  2457  007FB2                     u1000:
  2458  007FB2                     
  2459                           ;main.c: 219: (*py)--;
  2460  007FB2  C008  FFD9         	movff	deplace@py,fsr2l
  2461  007FB6  C009  FFDA         	movff	deplace@py+1,fsr2h
  2462  007FBA  06DF               	decf	indf2,f,c
  2463  007FBC                     
  2464                           ;main.c: 220: if(*py <= 0){
  2465  007FBC  C008  FFD9         	movff	deplace@py,fsr2l
  2466  007FC0  C009  FFDA         	movff	deplace@py+1,fsr2h
  2467  007FC4  50DF               	movf	indf2,w,c
  2468  007FC6  A4D8               	btfss	status,2,c
  2469  007FC8  EFE8  F03F         	goto	u1011
  2470  007FCC  EFEA  F03F         	goto	u1010
  2471  007FD0                     u1011:
  2472  007FD0  EFF0  F03F         	goto	l2129
  2473  007FD4                     u1010:
  2474  007FD4                     
  2475                           ;main.c: 221: *py = 4;
  2476  007FD4  C008  FFD9         	movff	deplace@py,fsr2l
  2477  007FD8  C009  FFDA         	movff	deplace@py+1,fsr2h
  2478  007FDC  0E04               	movlw	4
  2479  007FDE  6EDF               	movwf	indf2,c
  2480  007FE0                     l2129:
  2481                           
  2482                           ;main.c: 223: };main.c: 224: lcd_gotoXY((*px), (*py));
  2483  007FE0  C008  FFD9         	movff	deplace@py,fsr2l
  2484  007FE4  C009  FFDA         	movff	deplace@py+1,fsr2h
  2485  007FE8  50DF               	movf	indf2,w,c
  2486  007FEA  6E04               	movwf	lcd_gotoXY@y^0,c
  2487  007FEC  C006  FFD9         	movff	deplace@px,fsr2l
  2488  007FF0  C007  FFDA         	movff	deplace@px+1,fsr2h
  2489  007FF4  50DF               	movf	indf2,w,c
  2490  007FF6  ECD2  F03A         	call	_lcd_gotoXY
  2491  007FFA  EFFF  F03F         	goto	l144
  2492  007FFE                     l138:
  2493  007FFE                     l144:
  2494  007FFE  0012               	return		;funcret
  2495  008000                     __end_of_deplace:
  2496                           	opt callstack 0
  2497                           
  2498 ;; *************** function _getAnalog *****************
  2499 ;; Defined at:
  2500 ;;		line 306 in file "main.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;  canal           1    wreg     unsigned char 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  canal           1    1[COMRAM] unsigned char 
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      unsigned char 
  2507 ;; Registers used:
  2508 ;;		wreg, status,2, status,0
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2514 ;;      Params:         0       0       0       0       0       0       0
  2515 ;;      Locals:         1       0       0       0       0       0       0
  2516 ;;      Temps:          1       0       0       0       0       0       0
  2517 ;;      Totals:         2       0       0       0       0       0       0
  2518 ;;Total ram usage:        2 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; This function calls:
  2521 ;;		Nothing
  2522 ;; This function is called by:
  2523 ;;		_deplace
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           	psect	text16
  2528  007164                     __ptext16:
  2529                           	opt callstack 0
  2530  007164                     _getAnalog:
  2531                           	opt callstack 29
  2532                           
  2533                           ;incstack = 0
  2534                           ;getAnalog@canal stored from wreg
  2535  007164  6E02               	movwf	getAnalog@canal^0,c
  2536  007166                     
  2537                           ;main.c: 308: ADCON0bits.CHS = canal;
  2538  007166  C002  F001         	movff	getAnalog@canal,??_getAnalog
  2539  00716A  4601               	rlncf	??_getAnalog^0,f,c
  2540  00716C  4601               	rlncf	??_getAnalog^0,f,c
  2541  00716E  50C2               	movf	194,w,c	;volatile
  2542  007170  1801               	xorwf	??_getAnalog^0,w,c
  2543  007172  0BC3               	andlw	-61
  2544  007174  1801               	xorwf	??_getAnalog^0,w,c
  2545  007176  6EC2               	movwf	194,c	;volatile
  2546  007178                     
  2547                           ;main.c: 310: ADCON0bits.GO_DONE = 1;
  2548  007178  82C2               	bsf	194,1,c	;volatile
  2549  00717A                     l173:
  2550  00717A  B2C2               	btfsc	194,1,c	;volatile
  2551  00717C  EFC2  F038         	goto	u181
  2552  007180  EFC4  F038         	goto	u180
  2553  007184                     u181:
  2554  007184  EFBD  F038         	goto	l173
  2555  007188                     u180:
  2556  007188                     
  2557                           ;main.c: 313: return ADRESH;
  2558  007188  50C4               	movf	196,w,c	;volatile
  2559  00718A  0012               	return		;funcret
  2560  00718C                     __end_of_getAnalog:
  2561                           	opt callstack 0
  2562                           
  2563 ;; *************** function _demine *****************
  2564 ;; Defined at:
  2565 ;;		line 238 in file "main.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  x               1    wreg     unsigned char 
  2568 ;;  y               1   12[COMRAM] unsigned char 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  x               1   17[COMRAM] unsigned char 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      unsigned char 
  2573 ;; Registers used:
  2574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2580 ;;      Params:         1       0       0       0       0       0       0
  2581 ;;      Locals:         1       0       0       0       0       0       0
  2582 ;;      Temps:          4       0       0       0       0       0       0
  2583 ;;      Totals:         6       0       0       0       0       0       0
  2584 ;;Total ram usage:        6 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    6
  2587 ;; This function calls:
  2588 ;;		_afficheTabVue
  2589 ;;		_enleveTuilesAutour
  2590 ;;		_lcd_gotoXY
  2591 ;; This function is called by:
  2592 ;;		_main
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text17
  2597  007AB2                     __ptext17:
  2598                           	opt callstack 0
  2599  007AB2                     _demine:
  2600                           	opt callstack 24
  2601                           
  2602                           ;incstack = 0
  2603                           ;demine@x stored from wreg
  2604  007AB2  6E12               	movwf	demine@x^0,c
  2605  007AB4                     l147:
  2606  007AB4  A281               	btfss	129,1,c	;volatile
  2607  007AB6  EF5F  F03D         	goto	u1021
  2608  007ABA  EF61  F03D         	goto	u1020
  2609  007ABE                     u1021:
  2610  007ABE  EF5A  F03D         	goto	l147
  2611  007AC2                     u1020:
  2612  007AC2                     
  2613                           ;main.c: 242: x--;
  2614  007AC2  0612               	decf	demine@x^0,f,c
  2615  007AC4                     
  2616                           ;main.c: 243: y--;
  2617  007AC4  060D               	decf	demine@y^0,f,c
  2618  007AC6                     
  2619                           ;main.c: 245: if(m_tabMines[y][x] == 3){
  2620  007AC6  500D               	movf	demine@y^0,w,c
  2621  007AC8  0D15               	mullw	21
  2622  007ACA  0E60               	movlw	low _m_tabMines
  2623  007ACC  6E0E               	movwf	??_demine^0,c
  2624  007ACE  0E00               	movlw	high _m_tabMines
  2625  007AD0  6E0F               	movwf	(??_demine+1)^0,c
  2626  007AD2  50F3               	movf	243,w,c
  2627  007AD4  260E               	addwf	??_demine^0,f,c
  2628  007AD6  50F4               	movf	244,w,c
  2629  007AD8  220F               	addwfc	(??_demine+1)^0,f,c
  2630  007ADA  5012               	movf	demine@x^0,w,c
  2631  007ADC  240E               	addwf	??_demine^0,w,c
  2632  007ADE  6ED9               	movwf	fsr2l,c
  2633  007AE0  0E00               	movlw	0
  2634  007AE2  200F               	addwfc	(??_demine+1)^0,w,c
  2635  007AE4  6EDA               	movwf	fsr2h,c
  2636  007AE6  0E03               	movlw	3
  2637  007AE8  18DE               	xorwf	postinc2,w,c
  2638  007AEA  A4D8               	btfss	status,2,c
  2639  007AEC  EF7A  F03D         	goto	u1031
  2640  007AF0  EF7C  F03D         	goto	u1030
  2641  007AF4                     u1031:
  2642  007AF4  EF83  F03D         	goto	l2143
  2643  007AF8                     u1030:
  2644  007AF8                     
  2645                           ;main.c: 246: lcd_gotoXY(x+1, y+1);
  2646  007AF8  280D               	incf	demine@y^0,w,c
  2647  007AFA  6E04               	movwf	lcd_gotoXY@y^0,c
  2648  007AFC  2812               	incf	demine@x^0,w,c
  2649  007AFE  ECD2  F03A         	call	_lcd_gotoXY
  2650  007B02  EFE4  F03D         	goto	l151
  2651  007B06                     l2143:
  2652                           
  2653                           ;main.c: 248: };main.c: 249: if(m_tabMines[y][x] == 32){
  2654  007B06  500D               	movf	demine@y^0,w,c
  2655  007B08  0D15               	mullw	21
  2656  007B0A  0E60               	movlw	low _m_tabMines
  2657  007B0C  6E0E               	movwf	??_demine^0,c
  2658  007B0E  0E00               	movlw	high _m_tabMines
  2659  007B10  6E0F               	movwf	(??_demine+1)^0,c
  2660  007B12  50F3               	movf	243,w,c
  2661  007B14  260E               	addwf	??_demine^0,f,c
  2662  007B16  50F4               	movf	244,w,c
  2663  007B18  220F               	addwfc	(??_demine+1)^0,f,c
  2664  007B1A  5012               	movf	demine@x^0,w,c
  2665  007B1C  240E               	addwf	??_demine^0,w,c
  2666  007B1E  6ED9               	movwf	fsr2l,c
  2667  007B20  0E00               	movlw	0
  2668  007B22  200F               	addwfc	(??_demine+1)^0,w,c
  2669  007B24  6EDA               	movwf	fsr2h,c
  2670  007B26  0E20               	movlw	32
  2671  007B28  18DE               	xorwf	postinc2,w,c
  2672  007B2A  A4D8               	btfss	status,2,c
  2673  007B2C  EF9A  F03D         	goto	u1041
  2674  007B30  EF9C  F03D         	goto	u1040
  2675  007B34                     u1041:
  2676  007B34  EFA3  F03D         	goto	l2147
  2677  007B38                     u1040:
  2678  007B38                     
  2679                           ;main.c: 250: enleveTuilesAutour(x, y);
  2680  007B38  C00D  F001         	movff	demine@y,enleveTuilesAutour@y
  2681  007B3C  5012               	movf	demine@x^0,w,c
  2682  007B3E  EC89  F03B         	call	_enleveTuilesAutour
  2683                           
  2684                           ;main.c: 251: }else if(m_tabMines[y][x] >= 48){
  2685  007B42  EFDD  F03D         	goto	l2151
  2686  007B46                     l2147:
  2687  007B46  500D               	movf	demine@y^0,w,c
  2688  007B48  0D15               	mullw	21
  2689  007B4A  0E60               	movlw	low _m_tabMines
  2690  007B4C  6E0E               	movwf	??_demine^0,c
  2691  007B4E  0E00               	movlw	high _m_tabMines
  2692  007B50  6E0F               	movwf	(??_demine+1)^0,c
  2693  007B52  50F3               	movf	243,w,c
  2694  007B54  260E               	addwf	??_demine^0,f,c
  2695  007B56  50F4               	movf	244,w,c
  2696  007B58  220F               	addwfc	(??_demine+1)^0,f,c
  2697  007B5A  5012               	movf	demine@x^0,w,c
  2698  007B5C  240E               	addwf	??_demine^0,w,c
  2699  007B5E  6ED9               	movwf	fsr2l,c
  2700  007B60  0E00               	movlw	0
  2701  007B62  200F               	addwfc	(??_demine+1)^0,w,c
  2702  007B64  6EDA               	movwf	fsr2h,c
  2703  007B66  0E2F               	movlw	47
  2704  007B68  64DF               	cpfsgt	indf2,c
  2705  007B6A  EFB9  F03D         	goto	u1051
  2706  007B6E  EFBB  F03D         	goto	u1050
  2707  007B72                     u1051:
  2708  007B72  EFDD  F03D         	goto	l2151
  2709  007B76                     u1050:
  2710  007B76                     
  2711                           ;main.c: 252: m_tabVue[y][x] = m_tabMines[y][x];
  2712  007B76  500D               	movf	demine@y^0,w,c
  2713  007B78  0D15               	mullw	21
  2714  007B7A  0E60               	movlw	low _m_tabMines
  2715  007B7C  6E0E               	movwf	??_demine^0,c
  2716  007B7E  0E00               	movlw	high _m_tabMines
  2717  007B80  6E0F               	movwf	(??_demine+1)^0,c
  2718  007B82  50F3               	movf	243,w,c
  2719  007B84  260E               	addwf	??_demine^0,f,c
  2720  007B86  50F4               	movf	244,w,c
  2721  007B88  220F               	addwfc	(??_demine+1)^0,f,c
  2722  007B8A  5012               	movf	demine@x^0,w,c
  2723  007B8C  240E               	addwf	??_demine^0,w,c
  2724  007B8E  6ED9               	movwf	fsr2l,c
  2725  007B90  0E00               	movlw	0
  2726  007B92  200F               	addwfc	(??_demine+1)^0,w,c
  2727  007B94  6EDA               	movwf	fsr2h,c
  2728  007B96  500D               	movf	demine@y^0,w,c
  2729  007B98  0D15               	mullw	21
  2730  007B9A  0E00               	movlw	low _m_tabVue
  2731  007B9C  6E10               	movwf	(??_demine+2)^0,c
  2732  007B9E  0E01               	movlw	high _m_tabVue
  2733  007BA0  6E11               	movwf	(??_demine+3)^0,c
  2734  007BA2  50F3               	movf	243,w,c
  2735  007BA4  2610               	addwf	(??_demine+2)^0,f,c
  2736  007BA6  50F4               	movf	244,w,c
  2737  007BA8  2211               	addwfc	(??_demine+3)^0,f,c
  2738  007BAA  5012               	movf	demine@x^0,w,c
  2739  007BAC  2410               	addwf	(??_demine+2)^0,w,c
  2740  007BAE  6EE1               	movwf	fsr1l,c
  2741  007BB0  0E00               	movlw	0
  2742  007BB2  2011               	addwfc	(??_demine+3)^0,w,c
  2743  007BB4  6EE2               	movwf	fsr1h,c
  2744  007BB6  CFDF FFE7          	movff	indf2,indf1
  2745  007BBA                     l2151:
  2746                           
  2747                           ;main.c: 253: };main.c: 254: afficheTabVue();
  2748  007BBA  ECE1  F039         	call	_afficheTabVue	;wreg free
  2749  007BBE                     
  2750                           ;main.c: 255: lcd_gotoXY(x+1, y+1);
  2751  007BBE  280D               	incf	demine@y^0,w,c
  2752  007BC0  6E04               	movwf	lcd_gotoXY@y^0,c
  2753  007BC2  2812               	incf	demine@x^0,w,c
  2754  007BC4  ECD2  F03A         	call	_lcd_gotoXY
  2755  007BC8                     l151:
  2756  007BC8  0012               	return		;funcret
  2757  007BCA                     __end_of_demine:
  2758                           	opt callstack 0
  2759                           
  2760 ;; *************** function _enleveTuilesAutour *****************
  2761 ;; Defined at:
  2762 ;;		line 265 in file "main.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  x               1    wreg     unsigned char 
  2765 ;;  y               1    0[COMRAM] unsigned char 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  x               1    5[COMRAM] unsigned char 
  2768 ;;  j               2   10[COMRAM] int 
  2769 ;;  i               2    8[COMRAM] int 
  2770 ;;  ligne           1    7[COMRAM] unsigned char 
  2771 ;;  colonne         1    6[COMRAM] unsigned char 
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  1    wreg      void 
  2774 ;; Registers used:
  2775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2781 ;;      Params:         1       0       0       0       0       0       0
  2782 ;;      Locals:         7       0       0       0       0       0       0
  2783 ;;      Temps:          4       0       0       0       0       0       0
  2784 ;;      Totals:        12       0       0       0       0       0       0
  2785 ;;Total ram usage:       12 bytes
  2786 ;; Hardware stack levels used:    1
  2787 ;; This function calls:
  2788 ;;		Nothing
  2789 ;; This function is called by:
  2790 ;;		_demine
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           	psect	text18
  2795  007712                     __ptext18:
  2796                           	opt callstack 0
  2797  007712                     _enleveTuilesAutour:
  2798                           	opt callstack 29
  2799                           
  2800                           ;incstack = 0
  2801                           ;enleveTuilesAutour@x stored from wreg
  2802  007712  6E06               	movwf	enleveTuilesAutour@x^0,c
  2803  007714                     
  2804                           ;main.c: 268: char ligne = 0;
  2805  007714  0E00               	movlw	0
  2806  007716  6E08               	movwf	enleveTuilesAutour@ligne^0,c
  2807  007718                     
  2808                           ;main.c: 270: for(int i = -1; i < 2; i++){
  2809  007718  6809               	setf	enleveTuilesAutour@i^0,c
  2810  00771A  680A               	setf	(enleveTuilesAutour@i+1)^0,c
  2811  00771C                     l157:
  2812                           
  2813                           ;main.c: 271: for(int j = -1; j < 2; j++){
  2814  00771C  680B               	setf	enleveTuilesAutour@j^0,c
  2815  00771E  680C               	setf	(enleveTuilesAutour@j+1)^0,c
  2816  007720                     l1873:
  2817                           
  2818                           ;main.c: 272: colonne = x + i;
  2819  007720  5006               	movf	enleveTuilesAutour@x^0,w,c
  2820  007722  2409               	addwf	enleveTuilesAutour@i^0,w,c
  2821  007724  6E07               	movwf	enleveTuilesAutour@colonne^0,c
  2822                           
  2823                           ;main.c: 273: ligne = y + j;
  2824  007726  5001               	movf	enleveTuilesAutour@y^0,w,c
  2825  007728  240B               	addwf	enleveTuilesAutour@j^0,w,c
  2826  00772A  6E08               	movwf	enleveTuilesAutour@ligne^0,c
  2827  00772C                     
  2828                           ;main.c: 274: m_tabVue[ligne][colonne] = m_tabMines[ligne][colonne];
  2829  00772C  5008               	movf	enleveTuilesAutour@ligne^0,w,c
  2830  00772E  0D15               	mullw	21
  2831  007730  0E60               	movlw	low _m_tabMines
  2832  007732  6E02               	movwf	??_enleveTuilesAutour^0,c
  2833  007734  0E00               	movlw	high _m_tabMines
  2834  007736  6E03               	movwf	(??_enleveTuilesAutour+1)^0,c
  2835  007738  50F3               	movf	243,w,c
  2836  00773A  2602               	addwf	??_enleveTuilesAutour^0,f,c
  2837  00773C  50F4               	movf	244,w,c
  2838  00773E  2203               	addwfc	(??_enleveTuilesAutour+1)^0,f,c
  2839  007740  5007               	movf	enleveTuilesAutour@colonne^0,w,c
  2840  007742  2402               	addwf	??_enleveTuilesAutour^0,w,c
  2841  007744  6ED9               	movwf	fsr2l,c
  2842  007746  0E00               	movlw	0
  2843  007748  2003               	addwfc	(??_enleveTuilesAutour+1)^0,w,c
  2844  00774A  6EDA               	movwf	fsr2h,c
  2845  00774C  5008               	movf	enleveTuilesAutour@ligne^0,w,c
  2846  00774E  0D15               	mullw	21
  2847  007750  0E00               	movlw	low _m_tabVue
  2848  007752  6E04               	movwf	(??_enleveTuilesAutour+2)^0,c
  2849  007754  0E01               	movlw	high _m_tabVue
  2850  007756  6E05               	movwf	(??_enleveTuilesAutour+3)^0,c
  2851  007758  50F3               	movf	243,w,c
  2852  00775A  2604               	addwf	(??_enleveTuilesAutour+2)^0,f,c
  2853  00775C  50F4               	movf	244,w,c
  2854  00775E  2205               	addwfc	(??_enleveTuilesAutour+3)^0,f,c
  2855  007760  5007               	movf	enleveTuilesAutour@colonne^0,w,c
  2856  007762  2404               	addwf	(??_enleveTuilesAutour+2)^0,w,c
  2857  007764  6EE1               	movwf	fsr1l,c
  2858  007766  0E00               	movlw	0
  2859  007768  2005               	addwfc	(??_enleveTuilesAutour+3)^0,w,c
  2860  00776A  6EE2               	movwf	fsr1h,c
  2861  00776C  CFDF FFE7          	movff	indf2,indf1
  2862  007770  4A0B               	infsnz	enleveTuilesAutour@j^0,f,c
  2863  007772  2A0C               	incf	(enleveTuilesAutour@j+1)^0,f,c
  2864  007774  BE0C               	btfsc	(enleveTuilesAutour@j+1)^0,7,c
  2865  007776  EFC6  F03B         	goto	u751
  2866  00777A  500C               	movf	(enleveTuilesAutour@j+1)^0,w,c
  2867  00777C  E109               	bnz	u750
  2868  00777E  0E02               	movlw	2
  2869  007780  5C0B               	subwf	enleveTuilesAutour@j^0,w,c
  2870  007782  A0D8               	btfss	status,0,c
  2871  007784  EFC6  F03B         	goto	u751
  2872  007788  EFC8  F03B         	goto	u750
  2873  00778C                     u751:
  2874  00778C  EF90  F03B         	goto	l1873
  2875  007790                     u750:
  2876  007790  4A09               	infsnz	enleveTuilesAutour@i^0,f,c
  2877  007792  2A0A               	incf	(enleveTuilesAutour@i+1)^0,f,c
  2878  007794  BE0A               	btfsc	(enleveTuilesAutour@i+1)^0,7,c
  2879  007796  EFD6  F03B         	goto	u761
  2880  00779A  500A               	movf	(enleveTuilesAutour@i+1)^0,w,c
  2881  00779C  E109               	bnz	u760
  2882  00779E  0E02               	movlw	2
  2883  0077A0  5C09               	subwf	enleveTuilesAutour@i^0,w,c
  2884  0077A2  A0D8               	btfss	status,0,c
  2885  0077A4  EFD6  F03B         	goto	u761
  2886  0077A8  EFD8  F03B         	goto	u760
  2887  0077AC                     u761:
  2888  0077AC  EF8E  F03B         	goto	l157
  2889  0077B0                     u760:
  2890  0077B0  0012               	return		;funcret
  2891  0077B2                     __end_of_enleveTuilesAutour:
  2892                           	opt callstack 0
  2893                           
  2894 ;; *************** function _afficheTabVue *****************
  2895 ;; Defined at:
  2896 ;;		line 84 in file "main.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;		None
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  i               2    9[COMRAM] int 
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  1    wreg      void 
  2903 ;; Registers used:
  2904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2910 ;;      Params:         0       0       0       0       0       0       0
  2911 ;;      Locals:         2       0       0       0       0       0       0
  2912 ;;      Temps:          0       0       0       0       0       0       0
  2913 ;;      Totals:         2       0       0       0       0       0       0
  2914 ;;Total ram usage:        2 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; Hardware stack levels required when called:    5
  2917 ;; This function calls:
  2918 ;;		___wmul
  2919 ;;		_lcd_effaceAffichage
  2920 ;;		_lcd_gotoXY
  2921 ;;		_lcd_putMessage
  2922 ;; This function is called by:
  2923 ;;		_main
  2924 ;;		_demine
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           	psect	text19
  2929  0073C2                     __ptext19:
  2930                           	opt callstack 0
  2931  0073C2                     _afficheTabVue:
  2932                           	opt callstack 24
  2933  0073C2                     
  2934                           ;main.c: 85: lcd_effaceAffichage();
  2935  0073C2  EC87  F038         	call	_lcd_effaceAffichage	;wreg free
  2936  0073C6                     
  2937                           ;main.c: 86: for(int i = 0; i < 4; i++){
  2938  0073C6  0E00               	movlw	0
  2939  0073C8  6E0B               	movwf	(afficheTabVue@i+1)^0,c
  2940  0073CA  0E00               	movlw	0
  2941  0073CC  6E0A               	movwf	afficheTabVue@i^0,c
  2942  0073CE                     l1801:
  2943                           
  2944                           ;main.c: 87: lcd_gotoXY(1, i+1);
  2945  0073CE  280A               	incf	afficheTabVue@i^0,w,c
  2946  0073D0  6E04               	movwf	lcd_gotoXY@y^0,c
  2947  0073D2  0E01               	movlw	1
  2948  0073D4  ECD2  F03A         	call	_lcd_gotoXY
  2949  0073D8                     
  2950                           ;main.c: 88: lcd_putMessage(m_tabVue[i]);
  2951  0073D8  C00A  F001         	movff	afficheTabVue@i,___wmul@multiplier
  2952  0073DC  C00B  F002         	movff	afficheTabVue@i+1,___wmul@multiplier+1
  2953  0073E0  0E00               	movlw	0
  2954  0073E2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2955  0073E4  0E15               	movlw	21
  2956  0073E6  6E03               	movwf	___wmul@multiplicand^0,c
  2957  0073E8  EC9F  F038         	call	___wmul	;wreg free
  2958  0073EC  0E00               	movlw	low _m_tabVue
  2959  0073EE  2401               	addwf	?___wmul^0,w,c
  2960  0073F0  6E07               	movwf	lcd_putMessage@chaine^0,c
  2961  0073F2  0E01               	movlw	high _m_tabVue
  2962  0073F4  2002               	addwfc	(?___wmul+1)^0,w,c
  2963  0073F6  6E08               	movwf	(lcd_putMessage@chaine+1)^0,c
  2964  0073F8  EC27  F039         	call	_lcd_putMessage	;wreg free
  2965  0073FC  4A0A               	infsnz	afficheTabVue@i^0,f,c
  2966  0073FE  2A0B               	incf	(afficheTabVue@i+1)^0,f,c
  2967  007400  BE0B               	btfsc	(afficheTabVue@i+1)^0,7,c
  2968  007402  EF0C  F03A         	goto	u641
  2969  007406  500B               	movf	(afficheTabVue@i+1)^0,w,c
  2970  007408  E109               	bnz	u640
  2971  00740A  0E04               	movlw	4
  2972  00740C  5C0A               	subwf	afficheTabVue@i^0,w,c
  2973  00740E  A0D8               	btfss	status,0,c
  2974  007410  EF0C  F03A         	goto	u641
  2975  007414  EF0E  F03A         	goto	u640
  2976  007418                     u641:
  2977  007418  EFE7  F039         	goto	l1801
  2978  00741C                     u640:
  2979  00741C  0012               	return		;funcret
  2980  00741E                     __end_of_afficheTabVue:
  2981                           	opt callstack 0
  2982                           
  2983 ;; *************** function _afficheTabMine *****************
  2984 ;; Defined at:
  2985 ;;		line 92 in file "main.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;		None
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;  i               2    9[COMRAM] int 
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      void 
  2992 ;; Registers used:
  2993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2999 ;;      Params:         0       0       0       0       0       0       0
  3000 ;;      Locals:         2       0       0       0       0       0       0
  3001 ;;      Temps:          0       0       0       0       0       0       0
  3002 ;;      Totals:         2       0       0       0       0       0       0
  3003 ;;Total ram usage:        2 bytes
  3004 ;; Hardware stack levels used:    1
  3005 ;; Hardware stack levels required when called:    5
  3006 ;; This function calls:
  3007 ;;		___wmul
  3008 ;;		_lcd_effaceAffichage
  3009 ;;		_lcd_gotoXY
  3010 ;;		_lcd_putMessage
  3011 ;; This function is called by:
  3012 ;;		_main
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           	psect	text20
  3017  007366                     __ptext20:
  3018                           	opt callstack 0
  3019  007366                     _afficheTabMine:
  3020                           	opt callstack 25
  3021  007366                     
  3022                           ;main.c: 93: lcd_effaceAffichage();
  3023  007366  EC87  F038         	call	_lcd_effaceAffichage	;wreg free
  3024  00736A                     
  3025                           ;main.c: 94: for(int i = 0; i < 4; i++){
  3026  00736A  0E00               	movlw	0
  3027  00736C  6E0B               	movwf	(afficheTabMine@i+1)^0,c
  3028  00736E  0E00               	movlw	0
  3029  007370  6E0A               	movwf	afficheTabMine@i^0,c
  3030  007372                     l2197:
  3031                           
  3032                           ;main.c: 95: lcd_gotoXY(1, i+1);
  3033  007372  280A               	incf	afficheTabMine@i^0,w,c
  3034  007374  6E04               	movwf	lcd_gotoXY@y^0,c
  3035  007376  0E01               	movlw	1
  3036  007378  ECD2  F03A         	call	_lcd_gotoXY
  3037  00737C                     
  3038                           ;main.c: 96: lcd_putMessage(m_tabMines[i]);
  3039  00737C  C00A  F001         	movff	afficheTabMine@i,___wmul@multiplier
  3040  007380  C00B  F002         	movff	afficheTabMine@i+1,___wmul@multiplier+1
  3041  007384  0E00               	movlw	0
  3042  007386  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3043  007388  0E15               	movlw	21
  3044  00738A  6E03               	movwf	___wmul@multiplicand^0,c
  3045  00738C  EC9F  F038         	call	___wmul	;wreg free
  3046  007390  0E60               	movlw	low _m_tabMines
  3047  007392  2401               	addwf	?___wmul^0,w,c
  3048  007394  6E07               	movwf	lcd_putMessage@chaine^0,c
  3049  007396  0E00               	movlw	high _m_tabMines
  3050  007398  2002               	addwfc	(?___wmul+1)^0,w,c
  3051  00739A  6E08               	movwf	(lcd_putMessage@chaine+1)^0,c
  3052  00739C  EC27  F039         	call	_lcd_putMessage	;wreg free
  3053  0073A0  4A0A               	infsnz	afficheTabMine@i^0,f,c
  3054  0073A2  2A0B               	incf	(afficheTabMine@i+1)^0,f,c
  3055  0073A4  BE0B               	btfsc	(afficheTabMine@i+1)^0,7,c
  3056  0073A6  EFDE  F039         	goto	u1101
  3057  0073AA  500B               	movf	(afficheTabMine@i+1)^0,w,c
  3058  0073AC  E109               	bnz	u1100
  3059  0073AE  0E04               	movlw	4
  3060  0073B0  5C0A               	subwf	afficheTabMine@i^0,w,c
  3061  0073B2  A0D8               	btfss	status,0,c
  3062  0073B4  EFDE  F039         	goto	u1101
  3063  0073B8  EFE0  F039         	goto	u1100
  3064  0073BC                     u1101:
  3065  0073BC  EFB9  F039         	goto	l2197
  3066  0073C0                     u1100:
  3067  0073C0  0012               	return		;funcret
  3068  0073C2                     __end_of_afficheTabMine:
  3069                           	opt callstack 0
  3070                           
  3071 ;; *************** function _lcd_putMessage *****************
  3072 ;; Defined at:
  3073 ;;		line 411 in file "Lcd4Lignes.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;  chaine          2    6[COMRAM] PTR const unsigned char 
  3076 ;;		 -> m_tabMines(84), m_tabVue(84), 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  j               1    8[COMRAM] unsigned char 
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3088 ;;      Params:         2       0       0       0       0       0       0
  3089 ;;      Locals:         1       0       0       0       0       0       0
  3090 ;;      Temps:          0       0       0       0       0       0       0
  3091 ;;      Totals:         3       0       0       0       0       0       0
  3092 ;;Total ram usage:        3 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; Hardware stack levels required when called:    4
  3095 ;; This function calls:
  3096 ;;		_lcd_ecritChar
  3097 ;; This function is called by:
  3098 ;;		_afficheTabVue
  3099 ;;		_afficheTabMine
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           	psect	text21
  3104  00724E                     __ptext21:
  3105                           	opt callstack 0
  3106  00724E                     _lcd_putMessage:
  3107                           	opt callstack 24
  3108  00724E                     
  3109                           ;Lcd4Lignes.c: 413: unsigned char j;;Lcd4Lignes.c: 415: for(j = 0; chaine[j] != 0; j++)
  3110  00724E  0E00               	movlw	0
  3111  007250  6E09               	movwf	lcd_putMessage@j^0,c
  3112  007252  EF35  F039         	goto	l1775
  3113  007256                     l1771:
  3114                           
  3115                           ;Lcd4Lignes.c: 416: lcd_ecritChar(chaine[j]);
  3116  007256  5009               	movf	lcd_putMessage@j^0,w,c
  3117  007258  2407               	addwf	lcd_putMessage@chaine^0,w,c
  3118  00725A  6ED9               	movwf	fsr2l,c
  3119  00725C  0E00               	movlw	0
  3120  00725E  2008               	addwfc	(lcd_putMessage@chaine+1)^0,w,c
  3121  007260  6EDA               	movwf	fsr2h,c
  3122  007262  50DF               	movf	indf2,w,c
  3123  007264  EC64  F039         	call	_lcd_ecritChar
  3124  007268  2A09               	incf	lcd_putMessage@j^0,f,c
  3125  00726A                     l1775:
  3126  00726A  5009               	movf	lcd_putMessage@j^0,w,c
  3127  00726C  2407               	addwf	lcd_putMessage@chaine^0,w,c
  3128  00726E  6ED9               	movwf	fsr2l,c
  3129  007270  0E00               	movlw	0
  3130  007272  2008               	addwfc	(lcd_putMessage@chaine+1)^0,w,c
  3131  007274  6EDA               	movwf	fsr2h,c
  3132  007276  50DF               	movf	indf2,w,c
  3133  007278  A4D8               	btfss	status,2,c
  3134  00727A  EF41  F039         	goto	u611
  3135  00727E  EF43  F039         	goto	u610
  3136  007282                     u611:
  3137  007282  EF2B  F039         	goto	l1771
  3138  007286                     u610:
  3139  007286  0012               	return		;funcret
  3140  007288                     __end_of_lcd_putMessage:
  3141                           	opt callstack 0
  3142                           
  3143 ;; *************** function _lcd_ecritChar *****************
  3144 ;; Defined at:
  3145 ;;		line 383 in file "Lcd4Lignes.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;  car             1    wreg     unsigned char 
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;  car             1    3[COMRAM] unsigned char 
  3150 ;;  posRam          1    4[COMRAM] unsigned char 
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, status,2, status,0, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3160 ;;      Params:         0       0       0       0       0       0       0
  3161 ;;      Locals:         2       0       0       0       0       0       0
  3162 ;;      Temps:          0       0       0       0       0       0       0
  3163 ;;      Totals:         2       0       0       0       0       0       0
  3164 ;;Total ram usage:        2 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:    3
  3167 ;; This function calls:
  3168 ;;		_lcd_wrCom
  3169 ;;		_lcd_wrData
  3170 ;; This function is called by:
  3171 ;;		_lcd_putMessage
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           	psect	text22
  3176  0072C8                     __ptext22:
  3177                           	opt callstack 0
  3178  0072C8                     _lcd_ecritChar:
  3179                           	opt callstack 24
  3180                           
  3181                           ;incstack = 0
  3182                           ;lcd_ecritChar@car stored from wreg
  3183  0072C8  6E04               	movwf	lcd_ecritChar@car^0,c
  3184  0072CA                     
  3185                           ;Lcd4Lignes.c: 385: unsigned char posRam;;Lcd4Lignes.c: 387: posRam = lcd_wrData(car);
  3186  0072CA  5004               	movf	lcd_ecritChar@car^0,w,c
  3187  0072CC  ECDA  F038         	call	_lcd_wrData
  3188  0072D0  6E05               	movwf	lcd_ecritChar@posRam^0,c
  3189                           
  3190                           ;Lcd4Lignes.c: 388: switch(posRam)
  3191  0072D2  EF7A  F039         	goto	l1749
  3192  0072D6                     l1741:
  3193                           
  3194                           ;Lcd4Lignes.c: 391: lcd_wrCom(0xC0|0x80);
  3195  0072D6  0EC0               	movlw	192
  3196  0072D8  EC3E  F03A         	call	_lcd_wrCom
  3197                           
  3198                           ;Lcd4Lignes.c: 392: break;
  3199  0072DC  EF89  F039         	goto	l253
  3200  0072E0                     l1743:
  3201                           
  3202                           ;Lcd4Lignes.c: 394: lcd_wrCom(0x94|0x80);
  3203  0072E0  0E94               	movlw	148
  3204  0072E2  EC3E  F03A         	call	_lcd_wrCom
  3205                           
  3206                           ;Lcd4Lignes.c: 395: break;
  3207  0072E6  EF89  F039         	goto	l253
  3208  0072EA                     l1745:
  3209                           
  3210                           ;Lcd4Lignes.c: 397: lcd_wrCom(0xD4|0x80);
  3211  0072EA  0ED4               	movlw	212
  3212  0072EC  EC3E  F03A         	call	_lcd_wrCom
  3213                           
  3214                           ;Lcd4Lignes.c: 398: break;
  3215  0072F0  EF89  F039         	goto	l253
  3216  0072F4                     l1749:
  3217  0072F4  5005               	movf	lcd_ecritChar@posRam^0,w,c
  3218                           
  3219                           ; Switch size 1, requested type "simple"
  3220                           ; Number of cases is 3, Range of values is 148 to 212
  3221                           ; switch strategies available:
  3222                           ; Name         Instructions Cycles
  3223                           ; simple_byte           10     6 (average)
  3224                           ;	Chosen strategy is simple_byte
  3225  0072F6  0A94               	xorlw	148	; case 148
  3226  0072F8  B4D8               	btfsc	status,2,c
  3227  0072FA  EF6B  F039         	goto	l1741
  3228  0072FE  0A54               	xorlw	84	; case 192
  3229  007300  B4D8               	btfsc	status,2,c
  3230  007302  EF75  F039         	goto	l1745
  3231  007306  0A14               	xorlw	20	; case 212
  3232  007308  B4D8               	btfsc	status,2,c
  3233  00730A  EF70  F039         	goto	l1743
  3234  00730E  EF89  F039         	goto	l253
  3235  007312                     l253:
  3236  007312  0012               	return		;funcret
  3237  007314                     __end_of_lcd_ecritChar:
  3238                           	opt callstack 0
  3239                           
  3240 ;; *************** function _lcd_wrData *****************
  3241 ;; Defined at:
  3242 ;;		line 212 in file "Lcd4Lignes.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;  caractere       1    wreg     unsigned char 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  caractere       1    2[COMRAM] unsigned char 
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  1    wreg      unsigned char 
  3249 ;; Registers used:
  3250 ;;		wreg, status,2, status,0, cstack
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3256 ;;      Params:         0       0       0       0       0       0       0
  3257 ;;      Locals:         1       0       0       0       0       0       0
  3258 ;;      Temps:          0       0       0       0       0       0       0
  3259 ;;      Totals:         1       0       0       0       0       0       0
  3260 ;;Total ram usage:        1 bytes
  3261 ;; Hardware stack levels used:    1
  3262 ;; Hardware stack levels required when called:    2
  3263 ;; This function calls:
  3264 ;;		_lcd_busy
  3265 ;;		_lcd_ecrireDonnees
  3266 ;;		_lcd_strobeEnableBit
  3267 ;; This function is called by:
  3268 ;;		_lcd_ecritChar
  3269 ;;		_lcd_initCGRam
  3270 ;;		_lcd_effaceChar
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           	psect	text23
  3275  0071B4                     __ptext23:
  3276                           	opt callstack 0
  3277  0071B4                     _lcd_wrData:
  3278                           	opt callstack 26
  3279                           
  3280                           ;incstack = 0
  3281                           ;lcd_wrData@caractere stored from wreg
  3282  0071B4  6E03               	movwf	lcd_wrData@caractere^0,c
  3283  0071B6                     
  3284                           ;Lcd4Lignes.c: 214: lcd_busy();
  3285  0071B6  EC0B  F039         	call	_lcd_busy	;wreg free
  3286  0071BA                     
  3287                           ;Lcd4Lignes.c: 215: TRISD = 0b00000000;
  3288  0071BA  0E00               	movlw	0
  3289  0071BC  6E95               	movwf	149,c	;volatile
  3290  0071BE                     
  3291                           ;Lcd4Lignes.c: 218: PORTAbits.RA0 = 1;
  3292  0071BE  8080               	bsf	128,0,c	;volatile
  3293  0071C0                     
  3294                           ;Lcd4Lignes.c: 219: PORTAbits.RA1 = 0;
  3295  0071C0  9280               	bcf	128,1,c	;volatile
  3296  0071C2                     
  3297                           ;Lcd4Lignes.c: 221: lcd_ecrireDonnees(caractere >> 4);
  3298  0071C2  3803               	swapf	lcd_wrData@caractere^0,w,c
  3299  0071C4  0B0F               	andlw	15
  3300  0071C6  EC95  F038         	call	_lcd_ecrireDonnees
  3301  0071CA                     
  3302                           ;Lcd4Lignes.c: 222: lcd_strobeEnableBit();
  3303  0071CA  EC7F  F038         	call	_lcd_strobeEnableBit	;wreg free
  3304  0071CE                     
  3305                           ;Lcd4Lignes.c: 225: lcd_ecrireDonnees(caractere);
  3306  0071CE  5003               	movf	lcd_wrData@caractere^0,w,c
  3307  0071D0  EC95  F038         	call	_lcd_ecrireDonnees
  3308  0071D4                     
  3309                           ;Lcd4Lignes.c: 226: lcd_strobeEnableBit();
  3310  0071D4  EC7F  F038         	call	_lcd_strobeEnableBit	;wreg free
  3311  0071D8                     
  3312                           ;Lcd4Lignes.c: 229: TRISD = 0b00001111;
  3313  0071D8  0E0F               	movlw	15
  3314  0071DA  6E95               	movwf	149,c	;volatile
  3315  0071DC                     
  3316                           ;Lcd4Lignes.c: 230: _delay((unsigned long)((2)*(1000000/4000000.0)));
  3317                           ;Lcd4Lignes.c: 231: return(lcd_busy());
  3318  0071DC  EC0B  F039         	call	_lcd_busy	;wreg free
  3319  0071E0  0012               	return		;funcret
  3320  0071E2                     __end_of_lcd_wrData:
  3321                           	opt callstack 0
  3322                           
  3323 ;; *************** function _lcd_gotoXY *****************
  3324 ;; Defined at:
  3325 ;;		line 338 in file "Lcd4Lignes.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  x               1    wreg     unsigned char 
  3328 ;;  y               1    3[COMRAM] unsigned char 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  x               1    4[COMRAM] unsigned char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  1    wreg      void 
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0, cstack
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3340 ;;      Params:         1       0       0       0       0       0       0
  3341 ;;      Locals:         1       0       0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0
  3343 ;;      Totals:         2       0       0       0       0       0       0
  3344 ;;Total ram usage:        2 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    3
  3347 ;; This function calls:
  3348 ;;		_lcd_wrCom
  3349 ;; This function is called by:
  3350 ;;		_afficheTabVue
  3351 ;;		_afficheTabMine
  3352 ;;		_deplace
  3353 ;;		_demine
  3354 ;;		_lcd_effaceLigne
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           	psect	text24
  3359  0075A4                     __ptext24:
  3360                           	opt callstack 0
  3361  0075A4                     _lcd_gotoXY:
  3362                           	opt callstack 26
  3363                           
  3364                           ;incstack = 0
  3365                           ;lcd_gotoXY@x stored from wreg
  3366  0075A4  6E05               	movwf	lcd_gotoXY@x^0,c
  3367  0075A6                     
  3368                           ;Lcd4Lignes.c: 340: switch(y)
  3369  0075A6  EFF1  F03A         	goto	l1767
  3370  0075AA                     l1757:
  3371                           
  3372                           ;Lcd4Lignes.c: 343: lcd_wrCom((x-1+0x80)|0x80);
  3373  0075AA  5005               	movf	lcd_gotoXY@x^0,w,c
  3374  0075AC  0F7F               	addlw	127
  3375  0075AE  0980               	iorlw	128
  3376  0075B0  EC3E  F03A         	call	_lcd_wrCom
  3377                           
  3378                           ;Lcd4Lignes.c: 344: break;
  3379  0075B4  EF04  F03B         	goto	l242
  3380  0075B8                     l1759:
  3381                           
  3382                           ;Lcd4Lignes.c: 346: lcd_wrCom((x-1+0xC0)|0x80);
  3383  0075B8  5005               	movf	lcd_gotoXY@x^0,w,c
  3384  0075BA  0FBF               	addlw	191
  3385  0075BC  0980               	iorlw	128
  3386  0075BE  EC3E  F03A         	call	_lcd_wrCom
  3387                           
  3388                           ;Lcd4Lignes.c: 347: break;
  3389  0075C2  EF04  F03B         	goto	l242
  3390  0075C6                     l1761:
  3391                           
  3392                           ;Lcd4Lignes.c: 349: lcd_wrCom((x-1+0x94)|0x80);
  3393  0075C6  5005               	movf	lcd_gotoXY@x^0,w,c
  3394  0075C8  0F93               	addlw	147
  3395  0075CA  0980               	iorlw	128
  3396  0075CC  EC3E  F03A         	call	_lcd_wrCom
  3397                           
  3398                           ;Lcd4Lignes.c: 350: break;
  3399  0075D0  EF04  F03B         	goto	l242
  3400  0075D4                     l1763:
  3401                           
  3402                           ;Lcd4Lignes.c: 352: lcd_wrCom((x-1+0xD4)|0x80);
  3403  0075D4  5005               	movf	lcd_gotoXY@x^0,w,c
  3404  0075D6  0FD3               	addlw	211
  3405  0075D8  0980               	iorlw	128
  3406  0075DA  EC3E  F03A         	call	_lcd_wrCom
  3407                           
  3408                           ;Lcd4Lignes.c: 353: break;
  3409  0075DE  EF04  F03B         	goto	l242
  3410  0075E2                     l1767:
  3411  0075E2  5004               	movf	lcd_gotoXY@y^0,w,c
  3412                           
  3413                           ; Switch size 1, requested type "simple"
  3414                           ; Number of cases is 4, Range of values is 1 to 4
  3415                           ; switch strategies available:
  3416                           ; Name         Instructions Cycles
  3417                           ; simple_byte           13     7 (average)
  3418                           ;	Chosen strategy is simple_byte
  3419  0075E4  0A01               	xorlw	1	; case 1
  3420  0075E6  B4D8               	btfsc	status,2,c
  3421  0075E8  EFD5  F03A         	goto	l1757
  3422  0075EC  0A03               	xorlw	3	; case 2
  3423  0075EE  B4D8               	btfsc	status,2,c
  3424  0075F0  EFDC  F03A         	goto	l1759
  3425  0075F4  0A01               	xorlw	1	; case 3
  3426  0075F6  B4D8               	btfsc	status,2,c
  3427  0075F8  EFE3  F03A         	goto	l1761
  3428  0075FC  0A07               	xorlw	7	; case 4
  3429  0075FE  B4D8               	btfsc	status,2,c
  3430  007600  EFEA  F03A         	goto	l1763
  3431  007604  EF04  F03B         	goto	l242
  3432  007608                     l242:
  3433  007608  0012               	return		;funcret
  3434  00760A                     __end_of_lcd_gotoXY:
  3435                           	opt callstack 0
  3436                           
  3437 ;; *************** function _lcd_effaceAffichage *****************
  3438 ;; Defined at:
  3439 ;;		line 300 in file "Lcd4Lignes.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;		None
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;		None
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      void 
  3446 ;; Registers used:
  3447 ;;		wreg, status,2, status,0, cstack
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3453 ;;      Params:         0       0       0       0       0       0       0
  3454 ;;      Locals:         0       0       0       0       0       0       0
  3455 ;;      Temps:          0       0       0       0       0       0       0
  3456 ;;      Totals:         0       0       0       0       0       0       0
  3457 ;;Total ram usage:        0 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; Hardware stack levels required when called:    3
  3460 ;; This function calls:
  3461 ;;		_lcd_wrCom
  3462 ;; This function is called by:
  3463 ;;		_main
  3464 ;;		_afficheTabVue
  3465 ;;		_afficheTabMine
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           	psect	text25
  3470  00710E                     __ptext25:
  3471                           	opt callstack 0
  3472  00710E                     _lcd_effaceAffichage:
  3473                           	opt callstack 27
  3474  00710E                     
  3475                           ;Lcd4Lignes.c: 302: lcd_wrCom(0x01);
  3476  00710E  0E01               	movlw	1
  3477  007110  EC3E  F03A         	call	_lcd_wrCom
  3478                           
  3479                           ;Lcd4Lignes.c: 303: lcd_wrCom(0x80);
  3480  007114  0E80               	movlw	128
  3481  007116  EC3E  F03A         	call	_lcd_wrCom
  3482  00711A  0012               	return		;funcret
  3483  00711C                     __end_of_lcd_effaceAffichage:
  3484                           	opt callstack 0
  3485                           
  3486 ;; *************** function _lcd_wrCom *****************
  3487 ;; Defined at:
  3488 ;;		line 180 in file "Lcd4Lignes.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  commande        1    wreg     unsigned char 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  commande        1    2[COMRAM] unsigned char 
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  1    wreg      unsigned char 
  3495 ;; Registers used:
  3496 ;;		wreg, status,2, status,0, cstack
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3502 ;;      Params:         0       0       0       0       0       0       0
  3503 ;;      Locals:         1       0       0       0       0       0       0
  3504 ;;      Temps:          0       0       0       0       0       0       0
  3505 ;;      Totals:         1       0       0       0       0       0       0
  3506 ;;Total ram usage:        1 bytes
  3507 ;; Hardware stack levels used:    1
  3508 ;; Hardware stack levels required when called:    2
  3509 ;; This function calls:
  3510 ;;		_lcd_busy
  3511 ;;		_lcd_ecrireDonnees
  3512 ;;		_lcd_strobeEnableBit
  3513 ;; This function is called by:
  3514 ;;		_lcd_init
  3515 ;;		_lcd_effaceAffichage
  3516 ;;		_lcd_curseurHome
  3517 ;;		_lcd_gotoXY
  3518 ;;		_lcd_ecritChar
  3519 ;;		_lcd_initCGRam
  3520 ;;		_lcd_cacheCurseur
  3521 ;;		_lcd_montreCurseur
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           	psect	text26
  3526  00747C                     __ptext26:
  3527                           	opt callstack 0
  3528  00747C                     _lcd_wrCom:
  3529                           	opt callstack 27
  3530                           
  3531                           ;incstack = 0
  3532                           ;lcd_wrCom@commande stored from wreg
  3533  00747C  6E03               	movwf	lcd_wrCom@commande^0,c
  3534  00747E                     
  3535                           ;Lcd4Lignes.c: 182: lcd_busy();
  3536  00747E  EC0B  F039         	call	_lcd_busy	;wreg free
  3537  007482                     
  3538                           ;Lcd4Lignes.c: 184: TRISD = 0b00000000;
  3539  007482  0E00               	movlw	0
  3540  007484  6E95               	movwf	149,c	;volatile
  3541  007486                     
  3542                           ;Lcd4Lignes.c: 187: PORTAbits.RA0 = 0;
  3543  007486  9080               	bcf	128,0,c	;volatile
  3544  007488                     
  3545                           ;Lcd4Lignes.c: 188: PORTAbits.RA1 = 0;
  3546  007488  9280               	bcf	128,1,c	;volatile
  3547  00748A                     
  3548                           ;Lcd4Lignes.c: 190: lcd_ecrireDonnees(commande >> 4);
  3549  00748A  3803               	swapf	lcd_wrCom@commande^0,w,c
  3550  00748C  0B0F               	andlw	15
  3551  00748E  EC95  F038         	call	_lcd_ecrireDonnees
  3552  007492                     
  3553                           ;Lcd4Lignes.c: 191: lcd_strobeEnableBit();
  3554  007492  EC7F  F038         	call	_lcd_strobeEnableBit	;wreg free
  3555  007496                     
  3556                           ;Lcd4Lignes.c: 194: lcd_ecrireDonnees(commande);
  3557  007496  5003               	movf	lcd_wrCom@commande^0,w,c
  3558  007498  EC95  F038         	call	_lcd_ecrireDonnees
  3559  00749C                     
  3560                           ;Lcd4Lignes.c: 195: lcd_strobeEnableBit();
  3561  00749C  EC7F  F038         	call	_lcd_strobeEnableBit	;wreg free
  3562  0074A0                     
  3563                           ;Lcd4Lignes.c: 196: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3564  0074A0  0E03               	movlw	3
  3565  0074A2                     u1207:
  3566  0074A2  2EE8               	decfsz	wreg,f,c
  3567  0074A4  D7FE               	bra	u1207
  3568  0074A6  F000               	nop	
  3569  0074A8                     
  3570                           ;Lcd4Lignes.c: 198: if ((commande == 0x01) || commande == 0x02)
  3571  0074A8  0403               	decf	lcd_wrCom@commande^0,w,c
  3572  0074AA  B4D8               	btfsc	status,2,c
  3573  0074AC  EF5A  F03A         	goto	u591
  3574  0074B0  EF5C  F03A         	goto	u590
  3575  0074B4                     u591:
  3576  0074B4  EF65  F03A         	goto	l1701
  3577  0074B8                     u590:
  3578  0074B8  0E02               	movlw	2
  3579  0074BA  1803               	xorwf	lcd_wrCom@commande^0,w,c
  3580  0074BC  A4D8               	btfss	status,2,c
  3581  0074BE  EF63  F03A         	goto	u601
  3582  0074C2  EF65  F03A         	goto	u600
  3583  0074C6                     u601:
  3584  0074C6  EF6A  F03A         	goto	l1703
  3585  0074CA                     u600:
  3586  0074CA                     l1701:
  3587                           
  3588                           ;Lcd4Lignes.c: 199: _delay((unsigned long)((2)*(1000000/4000.0)));
  3589  0074CA  0EA6               	movlw	166
  3590  0074CC                     u1217:
  3591  0074CC  2EE8               	decfsz	wreg,f,c
  3592  0074CE  D7FE               	bra	u1217
  3593  0074D0  F000 F000          	nop2	
  3594  0074D4                     l1703:
  3595                           
  3596                           ;Lcd4Lignes.c: 201: TRISD = 0b00001111;
  3597  0074D4  0E0F               	movlw	15
  3598  0074D6  6E95               	movwf	149,c	;volatile
  3599  0074D8                     
  3600                           ;Lcd4Lignes.c: 203: return(lcd_busy());;	Return value of _lcd_wrCom is never used
  3601  0074D8  EC0B  F039         	call	_lcd_busy	;wreg free
  3602  0074DC  0012               	return		;funcret
  3603  0074DE                     __end_of_lcd_wrCom:
  3604                           	opt callstack 0
  3605                           
  3606 ;; *************** function _lcd_strobeEnableBit *****************
  3607 ;; Defined at:
  3608 ;;		line 455 in file "Lcd4Lignes.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;		None
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;		None
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      void 
  3615 ;; Registers used:
  3616 ;;		None
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3622 ;;      Params:         0       0       0       0       0       0       0
  3623 ;;      Locals:         0       0       0       0       0       0       0
  3624 ;;      Temps:          0       0       0       0       0       0       0
  3625 ;;      Totals:         0       0       0       0       0       0       0
  3626 ;;Total ram usage:        0 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; This function calls:
  3629 ;;		Nothing
  3630 ;; This function is called by:
  3631 ;;		_lcd_wrCom
  3632 ;;		_lcd_wrData
  3633 ;;		_lcd_resetSequence
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           	psect	text27
  3638  0070FE                     __ptext27:
  3639                           	opt callstack 0
  3640  0070FE                     _lcd_strobeEnableBit:
  3641                           	opt callstack 28
  3642  0070FE                     
  3643                           ;Lcd4Lignes.c: 457: PORTAbits.RA2 = 1;
  3644  0070FE  8480               	bsf	128,2,c	;volatile
  3645                           
  3646                           ;Lcd4Lignes.c: 458: __nop();
  3647  007100  F000               	nop	
  3648                           
  3649                           ;Lcd4Lignes.c: 459: PORTAbits.RA2 = 0;
  3650  007102  9480               	bcf	128,2,c	;volatile
  3651  007104  0012               	return		;funcret
  3652  007106                     __end_of_lcd_strobeEnableBit:
  3653                           	opt callstack 0
  3654                           
  3655 ;; *************** function _lcd_ecrireDonnees *****************
  3656 ;; Defined at:
  3657 ;;		line 131 in file "Lcd4Lignes.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;  donnee          1    wreg     unsigned char 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  donnee          1    1[COMRAM] unsigned char 
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  1    wreg      void 
  3664 ;; Registers used:
  3665 ;;		wreg, status,2, status,0
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3671 ;;      Params:         0       0       0       0       0       0       0
  3672 ;;      Locals:         1       0       0       0       0       0       0
  3673 ;;      Temps:          1       0       0       0       0       0       0
  3674 ;;      Totals:         2       0       0       0       0       0       0
  3675 ;;Total ram usage:        2 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; This function calls:
  3678 ;;		Nothing
  3679 ;; This function is called by:
  3680 ;;		_lcd_wrCom
  3681 ;;		_lcd_wrData
  3682 ;;		_lcd_resetSequence
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text28
  3687  00712A                     __ptext28:
  3688                           	opt callstack 0
  3689  00712A                     _lcd_ecrireDonnees:
  3690                           	opt callstack 28
  3691                           
  3692                           ;incstack = 0
  3693                           ;lcd_ecrireDonnees@donnee stored from wreg
  3694  00712A  6E02               	movwf	lcd_ecrireDonnees@donnee^0,c
  3695  00712C                     
  3696                           ;Lcd4Lignes.c: 134: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  3697  00712C  CF83 F001          	movff	3971,??_lcd_ecrireDonnees	;volatile
  3698  007130  0EF0               	movlw	240
  3699  007132  1601               	andwf	??_lcd_ecrireDonnees^0,f,c
  3700  007134  5002               	movf	lcd_ecrireDonnees@donnee^0,w,c
  3701  007136  0B0F               	andlw	15
  3702  007138  1001               	iorwf	??_lcd_ecrireDonnees^0,w,c
  3703  00713A  6E83               	movwf	131,c	;volatile
  3704  00713C  0012               	return		;funcret
  3705  00713E                     __end_of_lcd_ecrireDonnees:
  3706                           	opt callstack 0
  3707                           
  3708 ;; *************** function _lcd_busy *****************
  3709 ;; Defined at:
  3710 ;;		line 148 in file "Lcd4Lignes.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;		None
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;  adresse         1    1[COMRAM] unsigned char 
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  1    wreg      unsigned char 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, status,0, cstack
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3724 ;;      Params:         0       0       0       0       0       0       0
  3725 ;;      Locals:         1       0       0       0       0       0       0
  3726 ;;      Temps:          1       0       0       0       0       0       0
  3727 ;;      Totals:         2       0       0       0       0       0       0
  3728 ;;Total ram usage:        2 bytes
  3729 ;; Hardware stack levels used:    1
  3730 ;; Hardware stack levels required when called:    1
  3731 ;; This function calls:
  3732 ;;		_lcd_lireDonnees
  3733 ;; This function is called by:
  3734 ;;		_lcd_wrCom
  3735 ;;		_lcd_wrData
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           	psect	text29
  3740  007216                     __ptext29:
  3741                           	opt callstack 0
  3742  007216                     _lcd_busy:
  3743                           	opt callstack 27
  3744  007216                     
  3745                           ;Lcd4Lignes.c: 150: unsigned char adresse;;Lcd4Lignes.c: 152: PORTAbits.RA0 = 0;
  3746  007216  9080               	bcf	128,0,c	;volatile
  3747                           
  3748                           ;Lcd4Lignes.c: 153: PORTAbits.RA1 = 1;
  3749  007218  8280               	bsf	128,1,c	;volatile
  3750  00721A                     l204:
  3751                           
  3752                           ;Lcd4Lignes.c: 156: {;Lcd4Lignes.c: 157: PORTAbits.RA2 = 1;
  3753  00721A  8480               	bsf	128,2,c	;volatile
  3754                           
  3755                           ;Lcd4Lignes.c: 158: __nop();
  3756  00721C  F000               	nop	
  3757  00721E                     
  3758                           ;Lcd4Lignes.c: 159: adresse = lcd_lireDonnees() << 4;
  3759  00721E  EC7C  F038         	call	_lcd_lireDonnees	;wreg free
  3760  007222  6E01               	movwf	??_lcd_busy^0,c
  3761  007224  3801               	swapf	??_lcd_busy^0,w,c
  3762  007226  0BF0               	andlw	240
  3763  007228  6E02               	movwf	lcd_busy@adresse^0,c
  3764  00722A                     
  3765                           ;Lcd4Lignes.c: 160: PORTAbits.RA2 = 0;
  3766  00722A  9480               	bcf	128,2,c	;volatile
  3767  00722C                     
  3768                           ;Lcd4Lignes.c: 162: PORTAbits.RA2 = 1;
  3769  00722C  8480               	bsf	128,2,c	;volatile
  3770  00722E                     
  3771                           ;Lcd4Lignes.c: 163: __nop();
  3772  00722E  F000               	nop	
  3773                           
  3774                           ;Lcd4Lignes.c: 164: adresse |= lcd_lireDonnees();
  3775  007230  EC7C  F038         	call	_lcd_lireDonnees	;wreg free
  3776  007234  1202               	iorwf	lcd_busy@adresse^0,f,c
  3777  007236                     
  3778                           ;Lcd4Lignes.c: 165: PORTAbits.RA2 = 0;
  3779  007236  9480               	bcf	128,2,c	;volatile
  3780  007238                     
  3781                           ;Lcd4Lignes.c: 167: };Lcd4Lignes.c: 168: while(adresse&0x80);
  3782  007238  BE02               	btfsc	lcd_busy@adresse^0,7,c
  3783  00723A  EF21  F039         	goto	u581
  3784  00723E  EF23  F039         	goto	u580
  3785  007242                     u581:
  3786  007242  EF0D  F039         	goto	l204
  3787  007246                     u580:
  3788  007246                     
  3789                           ;Lcd4Lignes.c: 170: PORTAbits.RA1 = 0;
  3790  007246  9280               	bcf	128,1,c	;volatile
  3791  007248                     
  3792                           ;Lcd4Lignes.c: 171: return(adresse&0x7f);
  3793  007248  5002               	movf	lcd_busy@adresse^0,w,c
  3794  00724A  0B7F               	andlw	127
  3795  00724C  0012               	return		;funcret
  3796  00724E                     __end_of_lcd_busy:
  3797                           	opt callstack 0
  3798                           
  3799 ;; *************** function _lcd_lireDonnees *****************
  3800 ;; Defined at:
  3801 ;;		line 117 in file "Lcd4Lignes.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;		None
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;		None
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  1    wreg      unsigned char 
  3808 ;; Registers used:
  3809 ;;		wreg, status,2, status,0
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3815 ;;      Params:         0       0       0       0       0       0       0
  3816 ;;      Locals:         0       0       0       0       0       0       0
  3817 ;;      Temps:          0       0       0       0       0       0       0
  3818 ;;      Totals:         0       0       0       0       0       0       0
  3819 ;;Total ram usage:        0 bytes
  3820 ;; Hardware stack levels used:    1
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_lcd_busy
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	text30
  3829  0070F8                     __ptext30:
  3830                           	opt callstack 0
  3831  0070F8                     _lcd_lireDonnees:
  3832                           	opt callstack 27
  3833  0070F8                     
  3834                           ;Lcd4Lignes.c: 120: return (PORTD & 0x0f);
  3835  0070F8  5083               	movf	131,w,c	;volatile
  3836  0070FA  0B0F               	andlw	15
  3837  0070FC  0012               	return		;funcret
  3838  0070FE                     __end_of_lcd_lireDonnees:
  3839                           	opt callstack 0
  3840                           
  3841 ;; *************** function ___wmul *****************
  3842 ;; Defined at:
  3843 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;  multiplier      2    0[COMRAM] unsigned int 
  3846 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;  product         2    4[COMRAM] unsigned int 
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  2    0[COMRAM] unsigned int 
  3851 ;; Registers used:
  3852 ;;		wreg, status,2, status,0, prodl, prodh
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3858 ;;      Params:         4       0       0       0       0       0       0
  3859 ;;      Locals:         2       0       0       0       0       0       0
  3860 ;;      Temps:          0       0       0       0       0       0       0
  3861 ;;      Totals:         6       0       0       0       0       0       0
  3862 ;;Total ram usage:        6 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; This function calls:
  3865 ;;		Nothing
  3866 ;; This function is called by:
  3867 ;;		_afficheTabVue
  3868 ;;		_afficheTabMine
  3869 ;;		_initTabVue
  3870 ;;		_rempliMines
  3871 ;;		_metToucheCombien
  3872 ;;		_calculToucheCombien
  3873 ;;		_gagne
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text31
  3878  00713E                     __ptext31:
  3879                           	opt callstack 0
  3880  00713E                     ___wmul:
  3881                           	opt callstack 29
  3882  00713E  5001               	movf	___wmul@multiplier^0,w,c
  3883  007140  0203               	mulwf	___wmul@multiplicand^0,c
  3884  007142  CFF3 F005          	movff	prodl,___wmul@product
  3885  007146  CFF4 F006          	movff	prodh,___wmul@product+1
  3886  00714A  5001               	movf	___wmul@multiplier^0,w,c
  3887  00714C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3888  00714E  50F3               	movf	243,w,c
  3889  007150  2606               	addwf	(___wmul@product+1)^0,f,c
  3890  007152  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3891  007154  0203               	mulwf	___wmul@multiplicand^0,c
  3892  007156  50F3               	movf	243,w,c
  3893  007158  2606               	addwf	(___wmul@product+1)^0,f,c
  3894  00715A  C005  F001         	movff	___wmul@product,?___wmul
  3895  00715E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3896  007162  0012               	return		;funcret
  3897  007164                     __end_of___wmul:
  3898                           	opt callstack 0
  3899  0000                     
  3900                           	psect	rparam
  3901  0000                     tosu	equ	0xFFF
  3902                           tosh	equ	0xFFE
  3903                           tosl	equ	0xFFD
  3904                           stkptr	equ	0xFFC
  3905                           pclatu	equ	0xFFB
  3906                           pclath	equ	0xFFA
  3907                           pcl	equ	0xFF9
  3908                           tblptru	equ	0xFF8
  3909                           tblptrh	equ	0xFF7
  3910                           tblptrl	equ	0xFF6
  3911                           tablat	equ	0xFF5
  3912                           prodh	equ	0xFF4
  3913                           prodl	equ	0xFF3
  3914                           indf0	equ	0xFEF
  3915                           postinc0	equ	0xFEE
  3916                           postdec0	equ	0xFED
  3917                           preinc0	equ	0xFEC
  3918                           plusw0	equ	0xFEB
  3919                           fsr0h	equ	0xFEA
  3920                           fsr0l	equ	0xFE9
  3921                           wreg	equ	0xFE8
  3922                           indf1	equ	0xFE7
  3923                           postinc1	equ	0xFE6
  3924                           postdec1	equ	0xFE5
  3925                           preinc1	equ	0xFE4
  3926                           plusw1	equ	0xFE3
  3927                           fsr1h	equ	0xFE2
  3928                           fsr1l	equ	0xFE1
  3929                           bsr	equ	0xFE0
  3930                           indf2	equ	0xFDF
  3931                           postinc2	equ	0xFDE
  3932                           postdec2	equ	0xFDD
  3933                           preinc2	equ	0xFDC
  3934                           plusw2	equ	0xFDB
  3935                           fsr2h	equ	0xFDA
  3936                           fsr2l	equ	0xFD9
  3937                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      42
    BANK0           160      0     148
    BANK1           256      0      84
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(2) Largest target is 84
		 -> m_tabMines(BANK0[84]), m_tabVue(BANK1[84]), 

    gagne@pMines	PTR int  size(2) Largest target is 2
		 -> main@nbMines(COMRAM[2]), 

    deplace@py	PTR unsigned char  size(2) Largest target is 1
		 -> main@y(COMRAM[1]), 

    deplace@px	PTR unsigned char  size(2) Largest target is 1
		 -> main@x(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_rempliMines
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _initialisation->_srand
    _initTabVue->___wmul
    _gagne->___wmul
    _deplace->_lcd_gotoXY
    _demine->_enleveTuilesAutour
    _afficheTabVue->_lcd_putMessage
    _afficheTabMine->_lcd_putMessage
    _lcd_putMessage->___wmul
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_effaceAffichage->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   24902
                                             33 COMRAM     5     5      0
                     _afficheTabMine
                      _afficheTabVue
                             _demine
                            _deplace
                              _gagne
                         _initTabVue
                     _initialisation
                    _lcd_curseurHome
                _lcd_effaceAffichage
                           _lcd_init
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                         13    11      2    2695
                                             20 COMRAM    13    11      2
                            ___awmod
                             ___wmul
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     7     7      0    3836
                                             22 COMRAM     7     7      0
                             ___wmul
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 16    12      4    2085
                                              6 COMRAM    16    12      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 COMRAM     1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 COMRAM     4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           6     6      0    1685
                                              6 COMRAM     6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _gagne                                               11     9      2    1785
                                              6 COMRAM    11     9      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _deplace                                              9     5      4    1723
                                              5 COMRAM     9     5      4
                          _getAnalog
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _demine                                               6     5      1    5158
                                             12 COMRAM     6     5      1
                      _afficheTabVue
                 _enleveTuilesAutour
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _enleveTuilesAutour                                  12    11      1     348
                                              0 COMRAM    12    11      1
 ---------------------------------------------------------------------------------
 (2) _afficheTabVue                                        2     2      0    3354
                                              9 COMRAM     2     2      0
                             ___wmul
                _lcd_effaceAffichage
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _afficheTabMine                                       2     2      0    3354
                                              9 COMRAM     2     2      0
                             ___wmul
                _lcd_effaceAffichage
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (3) _lcd_putMessage                                       3     1      2     555
                                              6 COMRAM     3     1      2
                             ___wmul (ARG)
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (4) _lcd_ecritChar                                        2     2      0     313
                                              3 COMRAM     2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 COMRAM     1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoXY                                           2     1      1    1026
                                              3 COMRAM     2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _lcd_effaceAffichage                                  0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_wrCom                                            1     1      0     156
                                              2 COMRAM     1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             2     2      0      46
                                              0 COMRAM     2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (4) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1527
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheTabMine
     ___wmul
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _afficheTabVue
     ___wmul
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _demine
     _afficheTabVue
       ___wmul
       _lcd_effaceAffichage
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_gotoXY
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_putMessage
         ___wmul (ARG)
         _lcd_ecritChar (ARG)
           _lcd_wrCom
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
           _lcd_wrData
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
     _enleveTuilesAutour
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _deplace
     _getAnalog
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _gagne
     ___wmul
   _initTabVue
     ___wmul
   _initialisation
     _srand
   _lcd_curseurHome
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_effaceAffichage
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _metToucheCombien
     ___wmul
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     ___wmul
     _rand
       ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      54       7       32.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      94       5       92.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     26      2A       1       44.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     112      15        0.0%
DATA                 0      0     112       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 05 10:18:09 2019

 __end_of_calculToucheCombien 7E42                            l90 73C0                            l85 741C  
                          l97 785A          ??_enleveTuilesAutour 0002           ___wmul@multiplicand 0003  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000  __size_of_lcd_strobeEnableBit 0008                           l120 7D0E  
                         l201 713C                           l130 7E40                           l204 721A  
                         l212 74DC                           l124 7DE6                           l205 7246  
                         l221 71B2                           l117 7AB0                           l109 7CFC  
                         l206 724C                           l215 71E0                           l151 7BC8  
                         l224 711A                           l144 7FFE                           l161 77B0  
                         l242 7608                           l138 7FFE                           l170 79D2  
                         l218 75A2                           l147 7AB4                           l227 710C  
                         l253 7312                           l157 771C                           l173 717A  
                         l176 718A                           l168 7964                           l272 747A  
                         l522 790A                           l290 7672                           l275 7104  
                         l259 7286                           l179 7214                           l278 7162  
                         l198 70FC                           l289 7662                           l942 7128  
                         l945 7364                  __CFG_CPB$OFF 000000                           u180 7188  
                         u181 7184                           u600 74CA                           u601 74C6  
                         u610 7286                  __CFG_CPD$OFF 000000                           u611 7282  
                         u700 7DA2                           u620 7628                           u701 7D9E  
                         u621 7624                           u710 7DE4                           u630 7662  
                         u711 7DE0                           u631 765E                           u640 741C  
                         u720 7E06                           u800 7888                           u641 7418  
                         u721 7E02                           u801 7884                           u730 7E26  
                         u650 7D24                           u810 78A2                           u731 7E22  
                         u651 7D20                           u811 789E                           u580 7246  
                         u740 7E36                           u660 7D36                           u820 78C0  
                         u900 7CFC                           u581 7242                           u741 7E32  
                         u661 7D32                           u821 78BC                           u901 7CF8  
                         u590 74B8                           u750 7790                           u670 7D5C  
                         u910 7A26                           u830 78D6                           u591 74B4  
                         u751 778C                           u671 7D58                           u911 7A22  
                         u831 78D2                           u760 77B0                           u680 7D78  
                         u920 7A90                           u840 78FA                           u761 77AC  
                         u681 7D74                           u921 7A8C                           u841 78F6  
                         u850 7816                           u770 7464                           u690 7D86  
                         u930 7AB0                           u851 7812                           u771 7460  
                         u691 7D82                           u931 7AAC                           u940 7E7A  
                         u860 785A                           u780 7476                           u941 7E76  
                         u861 7856                           u781 7472                           u950 7E9C  
                         u790 786E                           u870 7C32                           u951 7E98  
                         u791 786A                           u871 7C2E                           u960 7EE2  
                         u880 7C52                           u961 7EDE                           u881 7C4E  
                         u970 7F04                           u890 7CB6                           u971 7F00  
                         u891 7CB2                           u980 7F4A                           u981 7F46  
                         u990 7F6C                           u991 7F68                  __CFG_BORV$18 000000  
                ___awmod@sign 0014                   lcd_gotoXY@x 0005                           wreg 000FE8  
                 lcd_gotoXY@y 0004  __size_of_lcd_effaceAffichage 000E                   main@nbMines 0023  
                __CFG_LVP$OFF 000000                          l2001 7210                          l2003 718C  
                        l2101 7EC6                          l2021 77F6                          l2013 77BA  
                        l2005 71AE                          l2103 7EE2                          l2111 7F2E  
                        l2023 77FA                          l2007 77B2                          l2031 7BCA  
                        l2201 73A0                          l2113 7F4A                          l2121 7F96  
                        l2105 7EEC                          l2025 7816                          l2203 73A4  
                        l2131 7AB4                          l1251 7178                          l2123 7FB2  
                        l2115 7F54                          l2107 7F04                          l2027 783A  
                        l2019 77C2                          l2051 7C36                          l2043 7BDE  
                        l2133 7AC2                          l1253 7188                          l2125 7FBC  
                        l2117 7F6C                          l2109 7F10                          l2029 783E  
                        l2061 7CDA                          l2053 7C52                          l2045 7C12  
                        l2037 7BD6                          l2221 7690                          l2213 7674  
                        l2151 7BBA                          l2143 7B06                          l2135 7AC4  
                        l1247 7166                          l2127 7FD4                          l2119 7F78  
                        l2071 79DC                          l2055 7C5E                          l2063 7CDE  
                        l2047 7C16                          l2231 76AC                          l2223 7694  
                        l2215 7684                          l2153 7BBE                          l2145 7B38  
                        l2137 7AC6                          l1249 7178                          l2129 7FE0  
                        l2081 7A70                          l2065 79D4                          l2057 7C84  
                        l2049 7C32                          l2241 7706                          l2233 76C0  
                        l2225 7698                          l2217 7688                          l2147 7B46  
                        l2139 7AF8                          l2091 7E5E                          l2171 7962  
                        l2163 7918                          l2083 7A74                          l2059 7CB6  
                        l2235 76D2                          l2227 76A4                          l2219 768C  
                        l1701 74CA                          l2149 7B76                          l2093 7E7A  
                        l2181 79CA                          l2173 7968                          l2157 790C  
                        l2085 7A90                          l2077 79E4                          l2237 76E0  
                        l2229 76A8                          l1703 74D4                          l1711 71B6  
                        l2191 736A                          l2095 7E84                          l2175 7984  
                        l2087 7A94                          l2079 7A26                          l2239 76EA  
                        l1705 74D8                          l1721 71C2                          l1713 71BA  
                        l1801 73CE                          l2097 7E9C                          l2089 7E42  
                        l2185 79D0                          l2177 7988                          l2169 7920  
                        l1651 7216                          l1707 74D8                          l1731 71D8  
                        l1723 71CA                          l1715 71BE                          l1803 73D8  
                        l2099 7EA8                          l2179 79A4                          l1811 7348  
                        l1645 70F8                          l1661 722E                          l1653 721E  
                        l1733 71D8                          l1725 71CE                          l1717 71BE  
                        l1741 72D6                          l2197 7372                          l2189 7366  
                        l1805 73FC                          l1901 7568                          l1813 7358  
                        l1663 7236                          l1655 722A                          l1751 710E  
                        l1735 71DC                          l1727 71CE                          l1719 71C0  
                        l1743 72E0                          l2199 737C                          l1807 7400  
                        l1911 7584                          l1903 756E                          l1831 7D24  
                        l1665 7238                          l1657 722C                          l1649 712C  
                        l1673 70FE                          l1681 7486                          l1761 75C6  
                        l1729 71D4                          l1745 72EA                          l1753 7106  
                        l1921 741E                          l1913 758C                          l1905 7572  
                        l1841 7DA2                          l1833 7D36                          l1817 7CFE  
                        l1809 7314                          l1667 7238                          l1659 722C  
                        l1691 7496                          l1683 7488                          l1675 747E  
                        l1763 75D4                          l1755 75A6                          l1739 72CA  
                        l1771 7256                          l1923 7424                          l1915 7592  
                        l1907 757A                          l1851 7E26                          l1843 7DE4  
                        l1835 7D5C                          l1819 7D0A                          l1669 7248  
                        l1693 749C                          l1685 748A                          l1677 7482  
                        l1757 75AA                          l1749 72F4                          l1773 7268  
                        l1861 7714                          l1941 7464                          l1917 7596  
                        l1909 7580                          l1853 7E36                          l1845 7DEA  
                        l1837 7D78                          l1829 7D12                          l1695 74A0  
                        l1687 7492                          l1679 7486                          l1759 75B8  
                        l1767 75E2                          l1775 726A                          l1863 7718  
                        l1943 7466                          l1935 742C                          l1919 759E  
                        l1847 7E06                          l1839 7D86                          l1951 786E  
                        l1791 7642                          l1783 760A                          l1777 713E  
                        l1697 74A8                          l1689 7496                          l1769 724E  
                        l1793 73C2                          l1881 7790                          l1873 7720  
                        l1945 7476                          l1937 7452                          l1929 7428  
                        l1857 7E3C                          l1849 7E0A                          l1961 78A2  
                        l1953 7876                          l1785 761A                          l1779 715A  
                        l1699 74B8                          l1795 73C6                          l1883 7794  
                        l1875 772C                          l1939 7454                          l1891 7552  
                        l1971 78DE                          l1963 78AA                          l1955 787A  
                        l1947 785C                          l1787 7628                          l1877 7770  
                        l1885 711C                          l1893 7554                          l1973 78E4  
                        l1965 78B2                          l1957 7888                          l1949 7860  
                        l1789 7638                          l1879 7774                          l1991 7202  
                        l1983 71E2                          l1895 7556                          l1887 7540  
                        l1967 78C0                          l1975 78EA                          l1959 7890  
                        l1993 7204                          l1985 71EA                          l1897 755C  
                        l1889 7544                          l1977 78FA                          l1969 78D6  
                        l1995 7206                          l1987 71F4                          l1899 7560  
                        l1979 7902                          l1997 720A                          l1989 71F6  
                        l1999 720C                          u1000 7FB2                          u1001 7FAE  
                        u1010 7FD4                          u1011 7FD0                          u1100 73C0  
                        u1020 7AC2                          u1101 73BC                          u1021 7ABE  
                        u1030 7AF8                          u1031 7AF4                          u1040 7B38  
                        u1120 76E0                          u1041 7B34                          u1121 76DC  
                        u1050 7B76                          u1130 7706                          u1051 7B72  
                        u1131 7702                          u1060 7962                          u1061 795E  
                        u1070 7984                          u1207 74A2                          u1071 7980  
                        u1080 79A4                          u1217 74CC                          u1081 79A0  
                        u1090 79CA                          u1091 79C6                          u1147 76C6  
                        u1157 754A                          u1167 7562                          u1177 7574  
                        u1187 7586                          u1197 7598                          _TMR1 000FCE  
            ??_initialisation 0003                          _main 7674                          _rand 7314  
                        fsr2h 000FDA                          indf1 000FE7                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          prodh 000FF4  
                        prodl 000FF3                          start 0000               ?_lcd_putMessage 0007  
               __CFG_IESO$OFF 000000              ??_afficheTabMine 000A                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000               ??_lcd_ecritChar 0004                         ?_main 0001  
                       ?_rand 000D               __end_of___awmod 790C                         _ANSEL 000F7E  
                       _PORTD 000F83                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISD 000F95                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000               __end_of_deplace 8000  
         ___lmul@multiplicand 0005                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000               ??_lcd_initCGRam 0004  
                       _gagne 790C                         _randx 0027                         _srand 711C  
                       main@x 0025                         main@y 0026                         tablat 000FF5  
                       status 000FD8                __CFG_HFOFST$ON 000000                __CFG_PBADEN$ON 000000  
            _metToucheCombien 79D4               __initialization 74DE                  __end_of_main 7712  
                __end_of_rand 7366           enleveTuilesAutour@i 0009           enleveTuilesAutour@j 000B  
         enleveTuilesAutour@x 0006           enleveTuilesAutour@y 0001          lcd_putMessage@chaine 0007  
  calculToucheCombien@colonne 0009                        ??_main 0022                        ??_rand 000F  
               __activetblptr 000002                        ?_gagne 0007                        _ADCON1 000FC1  
                      _ADRESH 000FC4                        ?_srand 0001                        _ANSELH 000F7F  
                 initTabVue@i 000B                   initTabVue@j 0009                __CFG_WDTEN$OFF 000000  
                ?_rempliMines 0015                __CFG_XINST$OFF 000000                lcd_initCGRam@i 0006  
              lcd_initCGRam@j 0007                getAnalog@canal 0002              __end_of_lcd_busy 724E  
            __end_of_lcd_init 71B4                        ___lmul 760A                        ___wmul 713E  
              __CFG_STVREN$ON 000000                     ??___awmod 0013                        _demine 7AB2  
              rempliMines@col 001C                        gagne@i 000E                        gagne@j 0010  
                      clear_0 7524                        clear_1 7530               ___awmod@divisor 0011  
                   ??_deplace 000A               ___awmod@counter 0013                  __pdataCOMRAM 0027  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                      srand@x 0001        __size_of_afficheTabVue 005C             _lcd_resetSequence 7540  
                  __accesstop 0060       __end_of__initialization 7536           _lcd_strobeEnableBit 70FE  
          ?_lcd_resetSequence 0001                 ___rparam_used 000001                __pcstackCOMRAM 0001  
         _lcd_effaceAffichage 710E                  __pidataBANK0 7288           ??_lcd_resetSequence 0003  
               __end_of_gagne 79D4       enleveTuilesAutour@ligne 0008                 __end_of_srand 712A  
        ?_lcd_strobeEnableBit 0001            __size_of_getAnalog 0028          ?_lcd_effaceAffichage 0001  
          __size_of_lcd_wrCom 0062                       ??_gagne 0009     __end_of_lcd_resetSequence 75A4  
                     ??_srand 0003      __size_of_lcd_lireDonnees 0006             _lcd_ecrireDonnees 712A  
                  __pbssBANK0 0060                    __pbssBANK1 0100              ??_lcd_putMessage 0009  
          ?_lcd_ecrireDonnees 0001      __size_of_lcd_curseurHome 0008           ??_lcd_ecrireDonnees 0001  
                     ?___lmul 0001                       ?___wmul 0001                       ?_demine 000D  
               _afficheTabVue 73C2                ___lmul@product 0009   __size_of_enleveTuilesAutour 00A0  
       ??_lcd_strobeEnableBit 0001  __size_of_calculToucheCombien 0144      __end_of_metToucheCombien 7AB2  
                  _lcd_gotoXY 75A4         ??_lcd_effaceAffichage 0004                    _lcd_wrData 71B4  
   __end_of_lcd_ecrireDonnees 713E                     ?_lcd_busy 0001                     ?_lcd_init 0001  
     lcd_ecrireDonnees@donnee 0002                    _m_tabMines 0060             __end_of_getAnalog 718C  
        __size_of_rempliMines 0134                       __Hparam 0000                       __Lparam 0000  
                  _initTabVue 77B2             __end_of_lcd_wrCom 74DE                ?_afficheTabVue 0001  
             __size_of___lmul 006A                       ___awmod 785C               __size_of___wmul 0026  
             __size_of_demine 0118                       __pcinit 74DE                     _ANSELbits 000F7E  
                     __ramtop 0600                       _deplace 7E42                       __ptext0 7674  
                     __ptext1 7BCA                       __ptext2 7314                       __ptext3 760A  
                     __ptext4 785C                       __ptext5 79D4                       __ptext6 7CFE  
                     __ptext7 718C                       __ptext8 7540                       __ptext9 741E  
       __end_of_lcd_ecritChar 7314               lcd_busy@adresse 0002                     _T1CONbits 000FCD  
            ___awmod@dividend 000F                       demine@x 0012                       demine@y 000D  
            lcd_ecritChar@car 0004                    ??_lcd_busy 0001                    ??_lcd_init 0008  
  __size_of_lcd_resetSequence 0064          end_of_initialization 7536         __end_of_lcd_initCGRam 747C  
               __Lmediumconst 0000             ??_lcd_lireDonnees 0001                       postdec1 000FE5  
                     postinc0 000FEE                       postinc2 000FDE       __size_of_initialisation 0034  
           ??_lcd_curseurHome 0004           lcd_ecritChar@posRam 0005                     _PORTAbits 000F80  
                   _PORTBbits 000F81       __size_of_afficheTabMine 005C                   ?_lcd_gotoXY 0004  
                 ?_lcd_wrData 0001    __size_of_lcd_ecrireDonnees 0014               ??_afficheTabVue 000A  
                 ?_initTabVue 0001                __end_of___lmul 7674                __end_of___wmul 7164  
              __end_of_demine 7BCA                 __pidataCOMRAM 70F4           start_initialization 74DE  
         _calculToucheCombien 7CFE           __size_of_lcd_gotoXY 0066                      ??___lmul 0009  
                    ??___wmul 0005                 rempliMines@nb 0015           __size_of_lcd_wrData 002E  
                    ??_demine 000E                   __pdataBANK0 00B4              __CFG_LPT1OSC$OFF 000000  
        ?_calculToucheCombien 0007             ?_metToucheCombien 0001           __size_of_initTabVue 00AA  
          ??_metToucheCombien 0017             __size_of_lcd_busy 0038             __size_of_lcd_init 0028  
           __CFG_CCP2MX$PORTC 000000                     _getAnalog 7164   __end_of_lcd_strobeEnableBit 7106  
              _initialisation 71E2    __end_of_enleveTuilesAutour 77B2                      ?___awmod 000F  
                    ?_deplace 0006   __end_of_lcd_effaceAffichage 711C                _afficheTabMine 7366  
                   _lcd_wrCom 747C         ??_calculToucheCombien 000B     enleveTuilesAutour@colonne 0007  
              __size_of_gagne 00C8               _lcd_lireDonnees 70F8           lcd_wrData@caractere 0003  
              __size_of_srand 000E                 ??_rempliMines 0017               _lcd_curseurHome 7106  
              ___wmul@product 0005                     deplace@aX 000B                     deplace@aY 000D  
                   deplace@px 0006                     deplace@py 0008        __end_of_initialisation 7216  
                  ?_getAnalog 0001              __CFG_WDTPS$32768 000000       __size_of_lcd_putMessage 003A  
      __end_of_afficheTabMine 73C2                    ?_lcd_wrCom 0001                    _ADCON0bits 000FC2  
                  _ADCON2bits 000FC0             ___wmul@multiplier 0001                  ??_lcd_gotoXY 0005  
                ??_lcd_wrData 0003             lcd_wrCom@commande 0003             ___lmul@multiplier 0001  
                   copy_data0 74F2                     copy_data1 7512        __size_of_lcd_ecritChar 004C  
                    __Hrparam 0000               ?_initialisation 0001           __end_of_rempliMines 7CFE  
                    __Lrparam 0000                  ??_initTabVue 0007            __CFG_BOREN$SBORDIS 000000  
                rempliMines@i 001E                  rempliMines@j 0020            __end_of_lcd_gotoXY 760A  
          __end_of_lcd_wrData 71E2               ?_afficheTabMine 0001              __size_of___awmod 00B0  
      __size_of_lcd_initCGRam 005E               lcd_putMessage@j 0009               afficheTabMine@i 000A  
            __size_of_deplace 01BE       __end_of_lcd_lireDonnees 70FE                      _matCGRAM 00B4  
     __end_of_lcd_curseurHome 710E                      __ptext10 7106                      __ptext11 71E2  
                    __ptext20 7366                      __ptext12 711C                      __ptext21 724E  
                    __ptext13 77B2                      __ptext30 70F8                      __ptext22 72C8  
                    __ptext14 790C                      __ptext31 713E                      __ptext23 71B4  
                    __ptext15 7E42                      __ptext24 75A4                      __ptext16 7164  
                    __ptext25 710E                      __ptext17 7AB2                      __ptext26 747C  
                    __ptext18 7712                      __ptext27 70FE                      __ptext19 73C2  
                    __ptext28 712A                      __ptext29 7216             metToucheCombien@i 001A  
           metToucheCombien@j 001C                      _lcd_busy 7216                      _lcd_init 718C  
          __end_of_initTabVue 785C              rempliMines@i_417 001A      calculToucheCombien@ligne 0007  
                    _m_tabVue 0100      calculToucheCombien@total 000E              rempliMines@ligne 001D  
               __size_of_main 009E                 __size_of_rand 0052                   gagne@pMines 0007  
                    gagne@ttl 000D                   ??_getAnalog 0001         __end_of_afficheTabVue 741E  
                 ??_lcd_wrCom 0003                 _lcd_ecritChar 72C8                afficheTabVue@i 000A  
               _lcd_initCGRam 741E                   _rempliMines 7BCA          calculToucheCombien@i 0013  
        calculToucheCombien@j 0015          calculToucheCombien@x 000F          calculToucheCombien@y 0011  
   __size_of_metToucheCombien 00DE                _lcd_putMessage 724E                ?_lcd_ecritChar 0001  
            ?_lcd_lireDonnees 0001            _enleveTuilesAutour 7712              ?_lcd_curseurHome 0001  
              ?_lcd_initCGRam 0001           ?_enleveTuilesAutour 0001             __CFG_FOSC$INTIO67 000000  
      __end_of_lcd_putMessage 7288  
